<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: function_subgraph Pages: 1 -->
<svg width="282pt" height="99pt"
 viewBox="0.00 0.00 282.00 99.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 95)">
<title>function_subgraph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-95 278,-95 278,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="124,-8 124,-83 266,-83 266,-8 124,-8"/>
<text text-anchor="middle" x="195" y="-67.8" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="lightblue" stroke="lightblue" points="0,-8 0,-83 104,-83 104,-8 0,-8"/>
<text text-anchor="middle" x="52" y="-67.8" font-family="Helvetica,sans-Serif" font-size="14.00">ed_to_xed.rs</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<g id="a_node1"><a xlink:title=" &#160;&#160;&#160;pub fn to_montgomery(&amp;self) &#45;&gt; MontgomeryPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// We have u = (1+y)/(1&#45;y) = (Z+Y)/(Z&#45;Y). &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// The denominator is zero only when y=1, the identity point of &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// the...">
<polygon fill="green" stroke="black" stroke-dasharray="1,5" points="258,-52 132,-52 132,-16 258,-16 258,-52"/>
<text text-anchor="middle" x="195" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_montgomery</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 main(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 main().</title>
<g id="a_node2"><a xlink:title="fn main() { &#160;&#160;&#160;&#160;let mut input = vec![]; &#160;&#160;&#160;&#160;std::io::stdin() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.read_to_end(&amp;mut input) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.expect(&#39; can read input&#39; ); &#160;&#160;&#160;&#160;let key = boring::pkey::PKey::public_key_from_pem(&amp;input).expect(...">
<polygon fill="white" stroke="black" points="79,-52 25,-52 25,-16 79,-16 79,-52"/>
<text text-anchor="middle" x="52" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">main</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]to_montgomery().</title>
<path fill="none" stroke="blue" d="M79.19,-34C91.41,-34 106.61,-34 121.91,-34"/>
<polygon fill="blue" stroke="blue" points="121.95,-37.5 131.95,-34 121.95,-30.5 121.95,-37.5"/>
</g>
</g>
</svg>
