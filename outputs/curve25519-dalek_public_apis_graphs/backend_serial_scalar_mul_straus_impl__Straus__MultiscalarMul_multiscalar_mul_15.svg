<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: function_subgraph Pages: 1 -->
<svg width="3261pt" height="3921pt"
 viewBox="0.00 0.00 3261.00 3921.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 3917)">
<title>function_subgraph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-3917 3257,-3917 3257,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="2891,-1124 2891,-1199 3083,-1199 3083,-1124 2891,-1124"/>
<text text-anchor="middle" x="2987" y="-1183.8" font-family="Helvetica,sans-Serif" font-size="14.00">mod.rs</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="3103,-1124 3103,-1199 3245,-1199 3245,-1124 3103,-1124"/>
<text text-anchor="middle" x="3174" y="-1183.8" font-family="Helvetica,sans-Serif" font-size="14.00">straus.rs</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_2</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="2729,-1124 2729,-1199 2871,-1199 2871,-1124 2729,-1124"/>
<text text-anchor="middle" x="2800" y="-1183.8" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_3</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="2567,-1124 2567,-1199 2709,-1199 2709,-1124 2567,-1124"/>
<text text-anchor="middle" x="2638" y="-1183.8" font-family="Helvetica,sans-Serif" font-size="14.00">ristretto.rs</text>
</g>
<g id="clust5" class="cluster">
<title>cluster_4</title>
<polygon fill="lightblue" stroke="lightblue" points="1510.5,-3639 1510.5,-3768 1659.5,-3768 1659.5,-3639 1510.5,-3639"/>
<text text-anchor="middle" x="1585" y="-3752.8" font-family="Helvetica,sans-Serif" font-size="14.00">usernames.rs</text>
</g>
<g id="clust6" class="cluster">
<title>cluster_5</title>
<polygon fill="lightblue" stroke="lightblue" points="316,-1085 316,-2726 912,-2726 912,-1085 316,-1085"/>
<text text-anchor="middle" x="614" y="-2710.8" font-family="Helvetica,sans-Serif" font-size="14.00">zkgroup.rs</text>
</g>
<g id="clust7" class="cluster">
<title>cluster_6</title>
<polygon fill="lightblue" stroke="lightblue" points="8,-3419 8,-3548 709,-3548 709,-3419 8,-3419"/>
<text text-anchor="middle" x="358.5" y="-3532.8" font-family="Helvetica,sans-Serif" font-size="14.00">gift_badge.rs</text>
</g>
<g id="clust8" class="cluster">
<title>cluster_7</title>
<polygon fill="lightblue" stroke="lightblue" points="41.5,-3336 41.5,-3411 653,-3411 653,-3336 41.5,-3336"/>
<text text-anchor="middle" x="347.25" y="-3395.8" font-family="Helvetica,sans-Serif" font-size="14.00">scramble.rs</text>
</g>
<g id="clust9" class="cluster">
<title>cluster_8</title>
<polygon fill="lightblue" stroke="lightblue" points="501,-3253 501,-3328 727,-3328 727,-3253 501,-3253"/>
<text text-anchor="middle" x="614" y="-3312.8" font-family="Helvetica,sans-Serif" font-size="14.00">fetch_profile_key_credential.rs</text>
</g>
<g id="clust10" class="cluster">
<title>cluster_9</title>
<polygon fill="lightblue" stroke="lightblue" points="502.5,-3116 502.5,-3245 725.5,-3245 725.5,-3116 502.5,-3116"/>
<text text-anchor="middle" x="614" y="-3229.8" font-family="Helvetica,sans-Serif" font-size="14.00">profiles.rs</text>
</g>
<g id="clust11" class="cluster">
<title>cluster_10</title>
<polygon fill="lightblue" stroke="lightblue" points="1519.5,-2114 1519.5,-2243 2008.5,-2243 2008.5,-2114 1519.5,-2114"/>
<text text-anchor="middle" x="1764" y="-2227.8" font-family="Helvetica,sans-Serif" font-size="14.00">sign.rs</text>
</g>
<g id="clust12" class="cluster">
<title>cluster_11</title>
<polygon fill="lightblue" stroke="lightblue" points="1836,-1820 1836,-1915 2547,-1915 2547,-1820 1836,-1820"/>
<text text-anchor="middle" x="2191.5" y="-1899.8" font-family="Helvetica,sans-Serif" font-size="14.00">statement.rs</text>
</g>
<g id="clust13" class="cluster">
<title>cluster_12</title>
<polygon fill="lightblue" stroke="lightblue" points="568.5,-3556 568.5,-3631 1657,-3631 1657,-3556 568.5,-3556"/>
<text text-anchor="middle" x="1112.75" y="-3615.8" font-family="Helvetica,sans-Serif" font-size="14.00">usernames_benchmarks.rs</text>
</g>
<g id="clust14" class="cluster">
<title>cluster_13</title>
<polygon fill="lightblue" stroke="lightblue" points="1431.5,-3776 1431.5,-3905 1993.5,-3905 1993.5,-3776 1431.5,-3776"/>
<text text-anchor="middle" x="1712.5" y="-3889.8" font-family="Helvetica,sans-Serif" font-size="14.00">username.rs</text>
</g>
<g id="clust15" class="cluster">
<title>cluster_14</title>
<polygon fill="lightblue" stroke="lightblue" points="568.5,-8 568.5,-83 1213,-83 1213,-8 568.5,-8"/>
<text text-anchor="middle" x="890.75" y="-67.8" font-family="Helvetica,sans-Serif" font-size="14.00">endorsements.rs</text>
</g>
<g id="clust16" class="cluster">
<title>cluster_15</title>
<polygon fill="lightblue" stroke="lightblue" points="1027,-91 1027,-328 1626,-328 1626,-91 1027,-91"/>
<text text-anchor="middle" x="1326.5" y="-312.8" font-family="Helvetica,sans-Serif" font-size="14.00">endorsements.rs</text>
</g>
<g id="clust17" class="cluster">
<title>cluster_16</title>
<polygon fill="lightblue" stroke="lightblue" points="1889.5,-1923 1889.5,-2052 1984.5,-2052 1984.5,-1923 1889.5,-1923"/>
<text text-anchor="middle" x="1937" y="-2036.8" font-family="Helvetica,sans-Serif" font-size="14.00">issuance.rs</text>
</g>
<g id="clust18" class="cluster">
<title>cluster_17</title>
<polygon fill="lightblue" stroke="lightblue" points="1900.5,-1256 1900.5,-1385 1972.5,-1385 1972.5,-1256 1900.5,-1256"/>
<text text-anchor="middle" x="1936.5" y="-1369.8" font-family="Helvetica,sans-Serif" font-size="14.00">blind.rs</text>
</g>
<g id="clust19" class="cluster">
<title>cluster_18</title>
<polygon fill="lightblue" stroke="lightblue" points="1876,-1393 1876,-1522 1998,-1522 1998,-1393 1876,-1393"/>
<text text-anchor="middle" x="1937" y="-1506.8" font-family="Helvetica,sans-Serif" font-size="14.00">presentation.rs</text>
</g>
<g id="clust20" class="cluster">
<title>cluster_19</title>
<polygon fill="lightblue" stroke="lightblue" points="175.5,-948 175.5,-1023 293.5,-1023 293.5,-948 175.5,-948"/>
<text text-anchor="middle" x="234.5" y="-1007.8" font-family="Helvetica,sans-Serif" font-size="14.00">serialization.rs</text>
</g>
<g id="clust21" class="cluster">
<title>cluster_20</title>
<polygon fill="lightblue" stroke="lightblue" points="461,-894 461,-1077 767,-1077 767,-894 461,-894"/>
<text text-anchor="middle" x="614" y="-1061.8" font-family="Helvetica,sans-Serif" font-size="14.00">zkgroup_benchmarks.rs</text>
</g>
<g id="clust22" class="cluster">
<title>cluster_21</title>
<polygon fill="lightblue" stroke="lightblue" points="1030.5,-2388 1030.5,-2517 1236.5,-2517 1236.5,-2388 1030.5,-2388"/>
<text text-anchor="middle" x="1133.5" y="-2501.8" font-family="Helvetica,sans-Serif" font-size="14.00">auth_credential_with_pni.rs</text>
</g>
<g id="clust23" class="cluster">
<title>cluster_22</title>
<polygon fill="lightblue" stroke="lightblue" points="1041,-1815 1041,-2106 1685.5,-2106 1685.5,-1815 1041,-1815"/>
<text text-anchor="middle" x="1363.25" y="-2090.8" font-family="Helvetica,sans-Serif" font-size="14.00">zkc.rs</text>
</g>
<g id="clust24" class="cluster">
<title>cluster_23</title>
<polygon fill="lightblue" stroke="lightblue" points="465,-404 465,-695 1626,-695 1626,-404 465,-404"/>
<text text-anchor="middle" x="1045.5" y="-679.8" font-family="Helvetica,sans-Serif" font-size="14.00">auth_credential.rs</text>
</g>
<g id="clust25" class="cluster">
<title>cluster_24</title>
<polygon fill="lightblue" stroke="lightblue" points="1513,-1570 1513,-1807 1657,-1807 1657,-1570 1513,-1570"/>
<text text-anchor="middle" x="1585" y="-1791.8" font-family="Helvetica,sans-Serif" font-size="14.00">auth_credential.rs</text>
</g>
<g id="clust26" class="cluster">
<title>cluster_25</title>
<polygon fill="lightblue" stroke="lightblue" points="1509.5,-1026 1509.5,-1263 1661.5,-1263 1661.5,-1026 1509.5,-1026"/>
<text text-anchor="middle" x="1585.5" y="-1247.8" font-family="Helvetica,sans-Serif" font-size="14.00">create_credential.rs</text>
</g>
<g id="clust27" class="cluster">
<title>cluster_26</title>
<polygon fill="lightblue" stroke="lightblue" points="974,-738 974,-975 1292,-975 1292,-738 974,-738"/>
<text text-anchor="middle" x="1133" y="-959.8" font-family="Helvetica,sans-Serif" font-size="14.00">group_send_endorsement.rs</text>
</g>
<g id="clust28" class="cluster">
<title>cluster_27</title>
<polygon fill="lightblue" stroke="lightblue" points="938.5,-2669 938.5,-3338 1777.5,-3338 1777.5,-2669 938.5,-2669"/>
<text text-anchor="middle" x="1358" y="-3322.8" font-family="Helvetica,sans-Serif" font-size="14.00">server_params.rs</text>
</g>
<g id="clust29" class="cluster">
<title>cluster_28</title>
<polygon fill="lightblue" stroke="lightblue" points="1530.5,-2586 1530.5,-2661 1640.5,-2661 1640.5,-2586 1530.5,-2586"/>
<text text-anchor="middle" x="1585.5" y="-2645.8" font-family="Helvetica,sans-Serif" font-size="14.00">credentials.rs</text>
</g>
<g id="clust30" class="cluster">
<title>cluster_29</title>
<polygon fill="lightblue" stroke="lightblue" points="1897.5,-2348 1897.5,-2909 1975.5,-2909 1975.5,-2348 1897.5,-2348"/>
<text text-anchor="middle" x="1936.5" y="-2893.8" font-family="Helvetica,sans-Serif" font-size="14.00">proofs.rs</text>
</g>
<g id="clust31" class="cluster">
<title>cluster_30</title>
<polygon fill="lightblue" stroke="lightblue" points="1067.5,-2251 1067.5,-2380 1621,-2380 1621,-2251 1067.5,-2251"/>
<text text-anchor="middle" x="1344.25" y="-2364.8" font-family="Helvetica,sans-Serif" font-size="14.00">signature.rs</text>
</g>
<g id="clust32" class="cluster">
<title>cluster_31</title>
<polygon fill="lightblue" stroke="lightblue" points="1354,-1271 1354,-1562 1816,-1562 1816,-1271 1354,-1271"/>
<text text-anchor="middle" x="1585" y="-1546.8" font-family="Helvetica,sans-Serif" font-size="14.00">zkcredential_examples.rs</text>
</g>
<g id="clust33" class="cluster">
<title>cluster_32</title>
<polygon fill="lightblue" stroke="lightblue" points="472.5,-321 472.5,-396 755.5,-396 755.5,-321 472.5,-321"/>
<text text-anchor="middle" x="614" y="-380.8" font-family="Helvetica,sans-Serif" font-size="14.00">backup_auth_flow.rs</text>
</g>
<g id="clust34" class="cluster">
<title>cluster_33</title>
<polygon fill="lightblue" stroke="lightblue" points="932,-1399 932,-1636 1334,-1636 1334,-1399 932,-1399"/>
<text text-anchor="middle" x="1133" y="-1620.8" font-family="Helvetica,sans-Serif" font-size="14.00">call_link_flow.rs</text>
</g>
<g id="clust35" class="cluster">
<title>cluster_34</title>
<polygon fill="lightblue" stroke="lightblue" points="477.5,-703 477.5,-886 750.5,-886 750.5,-703 477.5,-703"/>
<text text-anchor="middle" x="614" y="-870.8" font-family="Helvetica,sans-Serif" font-size="14.00">group_send_endorsements.rs</text>
</g>
<g id="clust36" class="cluster">
<title>cluster_35</title>
<polygon fill="lightblue" stroke="lightblue" points="390.5,-2871 390.5,-3108 837.5,-3108 837.5,-2871 390.5,-2871"/>
<text text-anchor="middle" x="614" y="-3092.8" font-family="Helvetica,sans-Serif" font-size="14.00">integration_tests.rs</text>
</g>
<g id="clust37" class="cluster">
<title>cluster_36</title>
<polygon fill="lightblue" stroke="lightblue" points="520,-2734 520,-2863 708,-2863 708,-2734 520,-2734"/>
<text text-anchor="middle" x="614" y="-2847.8" font-family="Helvetica,sans-Serif" font-size="14.00">receipt_flow.rs</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().</title>
<g id="a_node1"><a xlink:title="pub fn straus_multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint where &#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;I::Item: core::borrow::Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;J::Item: core::borrow::Borrow&lt;...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="3075,-1168 2899,-1168 2899,-1132 3075,-1132 3075,-1168"/>
<text text-anchor="middle" x="2987" y="-1146.3" font-family="Helvetica,sans-Serif" font-size="14.00">straus_multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node2"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;EdwardsPoint&gt;, ...">
<polygon fill="green" stroke="black" stroke-dasharray="1,5" points="3237,-1168 3111,-1168 3111,-1132 3237,-1132 3237,-1168"/>
<text text-anchor="middle" x="3174" y="-1146.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="edge235" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M3075.08,-1150C3083.68,-1150 3092.34,-1150 3100.76,-1150"/>
<polygon fill="gray" stroke="gray" points="3100.89,-1153.5 3110.89,-1150 3100.89,-1146.5 3100.89,-1153.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="node3" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node3"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;EdwardsPoint&gt;, ...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2863,-1168 2737,-1168 2737,-1132 2863,-1132 2863,-1168"/>
<text text-anchor="middle" x="2800" y="-1146.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul(). -->
<g id="edge179" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2863.12,-1150C2871.34,-1150 2879.92,-1150 2888.57,-1150"/>
<polygon fill="gray" stroke="gray" points="2888.72,-1153.5 2898.72,-1150 2888.72,-1146.5 2888.72,-1153.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="node4" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node4"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; RistrettoPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;RistrettoPoin...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2701,-1168 2575,-1168 2575,-1132 2701,-1132 2701,-1168"/>
<text text-anchor="middle" x="2638" y="-1146.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge181" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2701.32,-1150C2709.62,-1150 2718.18,-1150 2726.63,-1150"/>
<polygon fill="gray" stroke="gray" points="2726.85,-1153.5 2736.85,-1150 2726.85,-1146.5 2726.85,-1153.5"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Proof(). -->
<g id="node5" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Proof().</title>
<g id="a_node5"><a xlink:title="pub fn Username_Proof(username: String, randomness: &amp;[u8; 32]) &#45;&gt; Result&lt;Vec&lt;u8&gt;, UsernameError&gt; { &#160;&#160;&#160;&#160;Username::new(&amp;username)?.proof(randomness) }">
<polygon fill="white" stroke="black" points="1649.5,-3683 1520.5,-3683 1520.5,-3647 1649.5,-3647 1649.5,-3683"/>
<text text-anchor="middle" x="1585" y="-3661.3" font-family="Helvetica,sans-Serif" font-size="14.00">Username_Proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="node58" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<g id="a_node58"><a xlink:title=" &#160;&#160;&#160;pub fn proof(&amp;self, randomness: &amp;[u8; 32]) &#45;&gt; Result&lt;Vec&lt;u8&gt;, UsernameError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let hash = Self::hash_from_scalars(&amp;self.scalars); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let scalar_args = Self::make_scalar_args(&amp;self.sca...">
<polygon fill="white" stroke="black" points="1963.5,-3820 1909.5,-3820 1909.5,-3784 1963.5,-3784 1963.5,-3820"/>
<text text-anchor="middle" x="1936.5" y="-3798.3" font-family="Helvetica,sans-Serif" font-size="14.00">proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Proof().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge26" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Proof().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1649.59,-3662.11C1697.42,-3662.34 1763.48,-3667.88 1816,-3692 1857.39,-3711 1894.12,-3749.82 1915.6,-3775.88"/>
<polygon fill="blue" stroke="blue" points="1913.02,-3778.26 1922.02,-3783.85 1918.47,-3773.87 1913.02,-3778.26"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Verify(). -->
<g id="node6" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Verify().</title>
<g id="a_node6"><a xlink:title="pub fn Username_Verify( &#160;&#160;&#160;&#160;proof: &amp;[u8], &#160;&#160;&#160;&#160;hash: &amp;[u8], ) &#45;&gt; Result&lt;(), ::usernames::ProofVerificationFailure&gt; { &#160;&#160;&#160;&#160;if hash.len() != 32 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return Err(::usernames::ProofVerificationFailure);...">
<polygon fill="white" stroke="black" points="1651.5,-3737 1518.5,-3737 1518.5,-3701 1651.5,-3701 1651.5,-3737"/>
<text text-anchor="middle" x="1585" y="-3715.3" font-family="Helvetica,sans-Serif" font-size="14.00">Username_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="node60" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<g id="a_node60"><a xlink:title=" &#160;&#160;&#160;pub fn verify_proof(proof: &amp;[u8], hash: [u8; 32]) &#45;&gt; Result&lt;(), ProofVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let hash_point = CompressedRistretto(hash) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.decompress() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.ok_or(ProofVer...">
<polygon fill="white" stroke="black" points="1985.5,-3874 1887.5,-3874 1887.5,-3838 1985.5,-3838 1985.5,-3874"/>
<text text-anchor="middle" x="1936.5" y="-3852.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="edge57" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1651.69,-3717.82C1702.41,-3720.4 1771.26,-3731.97 1816,-3772 1836.01,-3789.9 1816.34,-3810.72 1836,-3829 1847.4,-3839.6 1862.53,-3846.11 1877.55,-3850.09"/>
<polygon fill="blue" stroke="blue" points="1876.83,-3853.52 1887.36,-3852.36 1878.4,-3846.7 1876.83,-3853.52"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds(). -->
<g id="node7" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds().</title>
<g id="a_node7"><a xlink:title="fn GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds( &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;group_members: ServiceIdSequence&lt;&#39;_&gt;, &#160;&#160;&#160;&#160;local_user: ServiceId, &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;group_params: ...">
<polygon fill="white" stroke="black" points="871,-1291 357,-1291 357,-1255 871,-1255 871,-1291"/>
<text text-anchor="middle" x="614" y="-1269.3" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="node111" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<g id="a_node111"><a xlink:title=" &#160;&#160;&#160;pub fn receive_with_service_ids&lt;T&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_ids: T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root_public_key: impl AsRef&lt;zkcredential::endorseme...">
<polygon fill="white" stroke="black" points="1225.5,-836 1040.5,-836 1040.5,-800 1225.5,-800 1225.5,-836"/>
<text text-anchor="middle" x="1133" y="-814.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_with_service_ids</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge8" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.91,-1291C760.83,-1301.61 856.87,-1303.43 912,-1246 942.89,-1213.82 901.81,-877.85 932,-845 956.65,-818.18 994.27,-808.69 1030.26,-806.88"/>
<polygon fill="blue" stroke="blue" points="1030.46,-810.37 1040.35,-806.56 1030.25,-803.38 1030.46,-810.37"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify(). -->
<g id="node8" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify().</title>
<g id="a_node8"><a xlink:title="fn CallLinkAuthCredentialPresentation_Verify( &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;(), ZkGroupVerificationF...">
<polygon fill="white" stroke="black" points="767,-1831 461,-1831 461,-1795 767,-1795 767,-1831"/>
<text text-anchor="middle" x="614" y="-1809.3" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredentialPresentation_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify(). -->
<g id="node103" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().</title>
<g id="a_node103"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerifi...">
<polygon fill="white" stroke="black" points="1613,-1722 1557,-1722 1557,-1686 1613,-1686 1613,-1722"/>
<text text-anchor="middle" x="1585" y="-1700.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify(). -->
<g id="edge11" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M767.3,-1805.06C814,-1801.04 865.36,-1795.02 912,-1786 921.11,-1784.24 922.91,-1781.88 932,-1780 1051.44,-1755.32 1426.94,-1718.78 1546.82,-1707.47"/>
<polygon fill="blue" stroke="blue" points="1547.33,-1710.93 1556.96,-1706.51 1546.68,-1703.97 1547.33,-1710.93"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts(). -->
<g id="node9" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts().</title>
<g id="a_node9"><a xlink:title="fn GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts( &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;concatenated_group_member_ciphertexts: &amp;[u8], &#160;&#160;&#160;&#160;local_user_ciphertext: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;...">
<polygon fill="white" stroke="black" points="875,-1345 353,-1345 353,-1309 875,-1309 875,-1345"/>
<text text-anchor="middle" x="614" y="-1323.3" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts(). -->
<g id="node112" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().</title>
<g id="a_node112"><a xlink:title=" &#160;&#160;&#160;pub fn receive_with_ciphertexts( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;member_ciphertexts: impl IntoIterator&lt;Item = UuidCiphertext&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root_public_key: impl AsRef&lt;zkcredential::endor...">
<polygon fill="white" stroke="black" points="1226.5,-890 1039.5,-890 1039.5,-854 1226.5,-854 1226.5,-890"/>
<text text-anchor="middle" x="1133" y="-868.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_with_ciphertexts</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts(). -->
<g id="edge18" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.91,-1345C760.83,-1355.61 856.87,-1357.43 912,-1300 942.89,-1267.82 901.81,-931.85 932,-899 956.43,-872.41 993.61,-862.86 1029.31,-860.93"/>
<polygon fill="blue" stroke="blue" points="1029.45,-864.42 1039.32,-860.58 1029.21,-857.43 1029.45,-864.42"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic(). -->
<g id="node10" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic().</title>
<g id="a_node10"><a xlink:title="fn ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;profile_key: Se...">
<polygon fill="white" stroke="black" points="887,-2533 341,-2533 341,-2497 887,-2497 887,-2533"/>
<text text-anchor="middle" x="614" y="-2511.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="node118" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<g id="a_node118"><a xlink:title=" &#160;&#160;&#160;pub fn create_profile_key_credential_request_context( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;profile_key: api::profiles::ProfileKey, &#160;&#160;&#160;&#160;) &#45;&gt;...">
<polygon fill="white" stroke="black" points="1299.5,-3145 966.5,-3145 966.5,-3109 1299.5,-3109 1299.5,-3145"/>
<text text-anchor="middle" x="1133" y="-3123.3" font-family="Helvetica,sans-Serif" font-size="14.00">create_profile_key_credential_request_context</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge25" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.11,-2496.97C760.22,-2486.1 857.01,-2483.91 912,-2542 954.65,-2587.05 890.34,-3054.03 932,-3100 939.31,-3108.07 947.79,-3114.57 957.05,-3119.78"/>
<polygon fill="blue" stroke="blue" points="955.65,-3122.99 966.16,-3124.38 958.81,-3116.75 955.65,-3122.99"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic(). -->
<g id="node11" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic().</title>
<g id="a_node11"><a xlink:title="fn GroupSendEndorsementsResponse_IssueDeterministic( &#160;&#160;&#160;&#160;concatenated_group_member_ciphertexts: &amp;[u8], &#160;&#160;&#160;&#160;key_pair: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;assert!(concatenat...">
<polygon fill="white" stroke="black" points="812,-1237 416,-1237 416,-1201 812,-1201 812,-1237"/>
<text text-anchor="middle" x="614" y="-1215.3" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSendEndorsementsResponse_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="node110" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<g id="a_node110"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;member_ciphertexts: impl IntoIterator&lt;Item = UuidCiphertext&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;GroupSendDerivedKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Note...">
<polygon fill="white" stroke="black" points="1160,-782 1106,-782 1106,-746 1160,-746 1160,-782"/>
<text text-anchor="middle" x="1133" y="-760.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge27" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.91,-1237C760.83,-1247.61 856.87,-1249.43 912,-1192 942.89,-1159.82 901.81,-823.85 932,-791 973.13,-746.24 1050.36,-749.75 1095.88,-756.66"/>
<polygon fill="blue" stroke="blue" points="1095.47,-760.14 1105.91,-758.31 1096.61,-753.23 1095.47,-760.14"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic(). -->
<g id="node12" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic().</title>
<g id="a_node12"><a xlink:title="fn CreateCallLinkCredential_PresentDeterministic( &#160;&#160;&#160;&#160;credential_bytes: &amp;[u8], &#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: ...">
<polygon fill="white" stroke="black" points="782,-1561 446,-1561 446,-1525 782,-1525 782,-1561"/>
<text text-anchor="middle" x="614" y="-1539.3" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredential_PresentDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present(). -->
<g id="node106" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().</title>
<g id="a_node106"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkSecretParams, &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1619.5,-1124 1550.5,-1124 1550.5,-1088 1619.5,-1088 1619.5,-1124"/>
<text text-anchor="middle" x="1585" y="-1102.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present(). -->
<g id="edge46" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M696.91,-1561.04C764.09,-1570.59 856.8,-1570.81 912,-1516 944.32,-1483.9 902.47,-1346.68 932,-1312 1051.79,-1171.32 1202.72,-1336.03 1334,-1206 1357.9,-1182.33 1328.49,-1154.93 1354,-1133 1405.48,-1088.74 1489.12,-1091.12 1540.09,-1097.87"/>
<polygon fill="blue" stroke="blue" points="1539.75,-1101.36 1550.14,-1099.32 1540.74,-1094.43 1539.75,-1101.36"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive(). -->
<g id="node13" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive().</title>
<g id="a_node13"><a xlink:title="fn CallLinkAuthCredentialResponse_Receive( &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="764.5,-1777 463.5,-1777 463.5,-1741 764.5,-1741 764.5,-1777"/>
<text text-anchor="middle" x="614" y="-1755.3" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredentialResponse_Receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="node102" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<g id="a_node102"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;CallLinkAuthCredential, ZkGroupV...">
<polygon fill="white" stroke="black" points="1618,-1668 1552,-1668 1552,-1632 1618,-1632 1618,-1668"/>
<text text-anchor="middle" x="1585" y="-1646.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="edge59" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M764.63,-1751.29C812.04,-1747.27 864.47,-1741.19 912,-1732 921.11,-1730.24 922.91,-1727.88 932,-1726 935.77,-1725.22 1397.74,-1671.61 1541.68,-1654.91"/>
<polygon fill="blue" stroke="blue" points="1542.35,-1658.35 1551.88,-1653.73 1541.54,-1651.4 1542.35,-1658.35"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic(). -->
<g id="node14" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic().</title>
<g id="a_node14"><a xlink:title="fn CallLinkAuthCredentialResponse_IssueDeterministic( &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;let params = ...">
<polygon fill="white" stroke="black" points="802,-1723 426,-1723 426,-1687 802,-1687 802,-1723"/>
<text text-anchor="middle" x="614" y="-1701.3" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredentialResponse_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="node101" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<g id="a_node101"><a xlink:title=" &#160;&#160;&#160;pub fn issue_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; CallLin...">
<polygon fill="white" stroke="black" points="1649,-1614 1521,-1614 1521,-1578 1649,-1578 1649,-1614"/>
<text text-anchor="middle" x="1585" y="-1592.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="edge66" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M802.06,-1689.47C1010.98,-1671.93 1321.77,-1645.13 1334,-1640 1344.76,-1635.49 1343.3,-1627.66 1354,-1623 1403.45,-1601.47 1464.24,-1595.09 1510.9,-1593.89"/>
<polygon fill="blue" stroke="blue" points="1511,-1597.39 1520.93,-1593.71 1510.87,-1590.39 1511,-1597.39"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic(). -->
<g id="node15" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic().</title>
<g id="a_node15"><a xlink:title="fn BackupAuthCredentialRequest_IssueDeterministic( &#160;&#160;&#160;&#160;request_bytes: &amp;[u8], &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;backup_level: AsType&lt;BackupLevel, u8&gt;, &#160;&#160;&#160;&#160;credential_type: AsType&lt;BackupCredentialType...">
<polygon fill="white" stroke="black" points="795,-1453 433,-1453 433,-1417 795,-1417 795,-1453"/>
<text text-anchor="middle" x="614" y="-1431.3" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialRequest_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="node97" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<g id="a_node97"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;backup_level: BackupLevel, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_type: BackupCredentialType, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1612,-556 1558,-556 1558,-520 1612,-520 1612,-556"/>
<text text-anchor="middle" x="1585" y="-534.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge84" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M695.47,-1453.03C762.91,-1462.95 856.79,-1463.72 912,-1408 950.45,-1369.2 899.29,-1206.75 932,-1163 1046.68,-1009.65 1190.67,-1134.98 1334,-1008 1478.99,-879.55 1554.14,-646.39 1576.63,-566.08"/>
<polygon fill="blue" stroke="blue" points="1580.06,-566.77 1579.34,-556.2 1573.31,-564.92 1580.06,-566.77"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_VerifySignature(). -->
<g id="node16" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_VerifySignature().</title>
<g id="a_node16"><a xlink:title="fn ServerPublicParams_VerifySignature( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;notary_signature: &amp;[u8; SIGNATURE_LEN], ) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="747.5,-2209 480.5,-2209 480.5,-2173 747.5,-2173 747.5,-2209"/>
<text text-anchor="middle" x="614" y="-2187.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_VerifySignature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature(). -->
<g id="node117" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().</title>
<g id="a_node117"><a xlink:title=" &#160;&#160;&#160;pub fn verify_signature( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature: NotarySignatureBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.sig_public_key.verify(messag...">
<polygon fill="white" stroke="black" points="1197,-2821 1069,-2821 1069,-2785 1197,-2785 1197,-2821"/>
<text text-anchor="middle" x="1133" y="-2799.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_VerifySignature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature(). -->
<g id="edge85" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_VerifySignature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.11,-2172.97C760.22,-2162.1 857.01,-2159.91 912,-2218 954.65,-2263.05 890.34,-2730.03 932,-2776 963.04,-2810.25 1015.2,-2816.37 1058.47,-2814.26"/>
<polygon fill="blue" stroke="blue" points="1058.94,-2817.74 1068.69,-2813.6 1058.49,-2810.75 1058.94,-2817.74"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic(). -->
<g id="node17" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic().</title>
<g id="a_node17"><a xlink:title="fn ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;redemption_time:...">
<polygon fill="white" stroke="black" points="850.5,-1939 377.5,-1939 377.5,-1903 850.5,-1903 850.5,-1939"/>
<text text-anchor="middle" x="614" y="-1917.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="node83" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<g id="a_node83"><a xlink:title=" &#160;&#160;&#160;pub fn issue_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;S...">
<polygon fill="white" stroke="black" points="1197,-2021 1069,-2021 1069,-1985 1197,-1985 1197,-2021"/>
<text text-anchor="middle" x="1133" y="-1999.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="edge87" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M850.71,-1923.28C872.22,-1929.09 893.02,-1937.12 912,-1948 925.27,-1955.61 918.9,-1968.11 932,-1976 969.68,-1998.71 1018.52,-2005.64 1058.5,-2006.8"/>
<polygon fill="blue" stroke="blue" points="1058.66,-2010.3 1068.72,-2006.98 1058.79,-2003.3 1058.66,-2010.3"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic(). -->
<g id="node18" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic().</title>
<g id="a_node18"><a xlink:title="fn ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;group_secret_params: Serialized&lt;Gr...">
<polygon fill="white" stroke="black" points="884,-2047 344,-2047 344,-2011 884,-2011 884,-2047"/>
<text text-anchor="middle" x="614" y="-2025.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present(). -->
<g id="node80" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present().</title>
<g id="a_node80"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; AnyAuthCredentialPresentat...">
<polygon fill="white" stroke="black" points="1167.5,-2486 1098.5,-2486 1098.5,-2450 1167.5,-2450 1167.5,-2486"/>
<text text-anchor="middle" x="1133" y="-2464.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present(). -->
<g id="edge93" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M693.21,-2010.97C761.1,-2000.43 856.9,-1998.72 912,-2056 941.7,-2086.87 902.98,-2409.49 932,-2441 970.95,-2483.29 1042.14,-2482.46 1088.23,-2476.41"/>
<polygon fill="blue" stroke="blue" points="1088.84,-2479.86 1098.24,-2474.97 1087.84,-2472.93 1088.84,-2479.86"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic(). -->
<g id="node19" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic().</title>
<g id="a_node19"><a xlink:title="fn ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;request: Serialized&lt;ProfileKeyCredential...">
<polygon fill="white" stroke="black" points="858,-2425 370,-2425 370,-2389 858,-2389 858,-2425"/>
<text text-anchor="middle" x="614" y="-2403.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="node115" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<g id="a_node115"><a xlink:title=" &#160;&#160;&#160;pub fn issue_expiring_profile_key_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: &amp;api::profiles::ProfileKeyCredentialRequest, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: libsignal_core::Aci, &#160;&#160;...">
<polygon fill="white" stroke="black" points="1269,-3037 997,-3037 997,-3001 1269,-3001 1269,-3037"/>
<text text-anchor="middle" x="1133" y="-3015.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_expiring_profile_key_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="edge94" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.11,-2388.97C760.22,-2378.1 857.01,-2375.91 912,-2434 954.65,-2479.05 890.34,-2946.03 932,-2992 946.69,-3008.21 966.11,-3018.12 987.08,-3023.84"/>
<polygon fill="blue" stroke="blue" points="986.27,-3027.24 996.81,-3026.18 987.91,-3020.44 986.27,-3027.24"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse(). -->
<g id="node20" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse().</title>
<g id="a_node20"><a xlink:title="fn CreateCallLinkCredentialRequestContext_ReceiveResponse( &#160;&#160;&#160;&#160;context_bytes: &amp;[u8], &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGroupVerificationFailu...">
<polygon fill="white" stroke="black" points="825.5,-1615 402.5,-1615 402.5,-1579 825.5,-1579 825.5,-1615"/>
<text text-anchor="middle" x="614" y="-1593.3" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialRequestContext_ReceiveResponse</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="node107" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<g id="a_node107"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: CreateCallLinkCredentialResponse, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;CreateCallLinkCr...">
<polygon fill="white" stroke="black" points="1618,-1178 1552,-1178 1552,-1142 1618,-1142 1618,-1178"/>
<text text-anchor="middle" x="1585" y="-1156.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="edge106" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M696.61,-1615.04C763.84,-1624.65 856.78,-1624.98 912,-1570 945.22,-1536.92 900.87,-1395.05 932,-1360 1053.4,-1223.33 1203.75,-1401.26 1334,-1273 1361.96,-1245.47 1324.75,-1213.16 1354,-1187 1405.31,-1141.12 1490.86,-1144.53 1541.9,-1151.82"/>
<polygon fill="blue" stroke="blue" points="1541.52,-1155.31 1551.94,-1153.37 1542.59,-1148.39 1541.52,-1155.31"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic(). -->
<g id="node21" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic().</title>
<g id="a_node21"><a xlink:title="fn CreateCallLinkCredentialRequest_IssueDeterministic( &#160;&#160;&#160;&#160;request_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;timestamp: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Vec&lt;u8...">
<polygon fill="white" stroke="black" points="802.5,-1669 425.5,-1669 425.5,-1633 802.5,-1633 802.5,-1669"/>
<text text-anchor="middle" x="614" y="-1647.3" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialRequest_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="node105" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<g id="a_node105"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timestamp: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; CreateCal...">
<polygon fill="white" stroke="black" points="1612,-1232 1558,-1232 1558,-1196 1612,-1196 1612,-1232"/>
<text text-anchor="middle" x="1585" y="-1210.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="edge109" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M695.72,-1669C763.09,-1678.82 856.72,-1679.47 912,-1624 948.06,-1587.82 897.22,-1432.42 932,-1395 1055.21,-1262.43 1196.96,-1448.23 1334,-1330 1356.24,-1310.81 1332.4,-1286.92 1354,-1267 1407.57,-1217.59 1497.72,-1211.26 1547.76,-1211.99"/>
<polygon fill="blue" stroke="blue" points="1547.72,-1215.49 1557.8,-1212.24 1547.9,-1208.49 1547.72,-1215.49"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyAuthCredentialPresentation(). -->
<g id="node22" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyAuthCredentialPresentation().</title>
<g id="a_node22"><a xlink:title="fn ServerSecretParams_VerifyAuthCredentialPresentation( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;group_public_params: Serialized&lt;GroupPublicParams&gt;, &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;curren...">
<polygon fill="white" stroke="black" points="810,-2155 418,-2155 418,-2119 810,-2119 810,-2155"/>
<text text-anchor="middle" x="614" y="-2133.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_VerifyAuthCredentialPresentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation(). -->
<g id="node121" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation().</title>
<g id="a_node121"><a xlink:title=" &#160;&#160;&#160;pub fn verify_auth_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: api::groups::GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::auth::AnyAuthCredentialPresentation, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cur...">
<polygon fill="white" stroke="black" points="1264.5,-2767 1001.5,-2767 1001.5,-2731 1264.5,-2731 1264.5,-2767"/>
<text text-anchor="middle" x="1133" y="-2745.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_auth_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyAuthCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation(). -->
<g id="edge126" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyAuthCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.11,-2118.97C760.22,-2108.1 857.01,-2105.91 912,-2164 954.65,-2209.05 890.34,-2676.03 932,-2722 947.75,-2739.38 968.94,-2749.52 991.64,-2755.01"/>
<polygon fill="blue" stroke="blue" points="990.94,-2758.44 1001.45,-2757.09 992.39,-2751.59 990.94,-2758.44"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential(). -->
<g id="node23" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential().</title>
<g id="a_node23"><a xlink:title="fn ServerPublicParams_ReceiveExpiringProfileKeyCredential( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;request_context: Serialized&lt;ProfileKeyCredentialRequestContext&gt;, &#160;&#160;&#160;&#160;response: Serialized&lt;...">
<polygon fill="white" stroke="black" points="819,-2479 409,-2479 409,-2443 819,-2443 819,-2479"/>
<text text-anchor="middle" x="614" y="-2457.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_ReceiveExpiringProfileKeyCredential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="node116" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<g id="a_node116"><a xlink:title=" &#160;&#160;&#160;pub fn receive_expiring_profile_key_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;context: &amp;api::profiles::ProfileKeyCredentialRequestContext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: &amp;api::profiles::ExpiringProfileKeyCredentialRe...">
<polygon fill="white" stroke="black" points="1276,-3091 990,-3091 990,-3055 1276,-3055 1276,-3091"/>
<text text-anchor="middle" x="1133" y="-3069.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_expiring_profile_key_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge131" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.11,-2442.97C760.22,-2432.1 857.01,-2429.91 912,-2488 954.65,-2533.05 890.34,-3000.03 932,-3046 945.07,-3060.43 961.89,-3069.86 980.22,-3075.79"/>
<polygon fill="blue" stroke="blue" points="979.35,-3079.19 989.93,-3078.58 981.28,-3072.46 979.35,-3079.19"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic(). -->
<g id="node24" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic().</title>
<g id="a_node24"><a xlink:title="fn ServerPublicParams_CreateReceiptCredentialPresentationDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;receipt_credential: Serialized&lt;Receipt...">
<polygon fill="white" stroke="black" points="867,-2587 361,-2587 361,-2551 867,-2551 867,-2587"/>
<text text-anchor="middle" x="614" y="-2565.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateReceiptCredentialPresentationDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="node125" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<g id="a_node125"><a xlink:title=" &#160;&#160;&#160;pub fn create_receipt_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_credential: &amp;api::receipts::ReceiptCredential, &#160;&#160;&#160;&#160;) &#45;&gt; api::receipts::ReceiptCre...">
<polygon fill="white" stroke="black" points="1274,-3199 992,-3199 992,-3163 1274,-3163 1274,-3199"/>
<text text-anchor="middle" x="1133" y="-3177.3" font-family="Helvetica,sans-Serif" font-size="14.00">create_receipt_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="edge164" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.11,-2550.97C760.22,-2540.1 857.01,-2537.91 912,-2596 954.65,-2641.05 890.34,-3108.03 932,-3154 945.54,-3168.94 963.09,-3178.52 982.17,-3184.41"/>
<polygon fill="blue" stroke="blue" points="981.39,-3187.83 991.96,-3187.09 983.23,-3181.07 981.39,-3187.83"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation(). -->
<g id="node25" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation().</title>
<g id="a_node25"><a xlink:title="fn ServerSecretParams_VerifyProfileKeyCredentialPresentation( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;group_public_params: Serialized&lt;GroupPublicParams&gt;, &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="827.5,-2371 400.5,-2371 400.5,-2335 827.5,-2335 827.5,-2371"/>
<text text-anchor="middle" x="614" y="-2349.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_VerifyProfileKeyCredentialPresentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="node122" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<g id="a_node122"><a xlink:title=" &#160;&#160;&#160;pub fn verify_profile_key_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: api::groups::GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::profiles::AnyProfileKeyCredentialPresenta...">
<polygon fill="white" stroke="black" points="1285.5,-2983 980.5,-2983 980.5,-2947 1285.5,-2947 1285.5,-2983"/>
<text text-anchor="middle" x="1133" y="-2961.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_profile_key_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="edge174" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.11,-2334.97C760.22,-2324.1 857.01,-2321.91 912,-2380 954.65,-2425.05 890.34,-2892.03 932,-2938 942.71,-2949.82 955.94,-2958.29 970.45,-2964.23"/>
<polygon fill="blue" stroke="blue" points="969.56,-2967.63 980.15,-2967.77 971.96,-2961.05 969.56,-2967.63"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_SignDeterministic(). -->
<g id="node26" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_SignDeterministic().</title>
<g id="a_node26"><a xlink:title="fn ServerSecretParams_SignDeterministic( &#160;&#160;&#160;&#160;params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;message: &amp;[u8], ) &#45;&gt; [u8; SIGNATURE_LEN] { &#160;&#160;&#160;&#160;params.sign(*randomness, message) }">
<polygon fill="white" stroke="black" points="757,-2317 471,-2317 471,-2281 757,-2281 757,-2317"/>
<text text-anchor="middle" x="614" y="-2295.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_SignDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign(). -->
<g id="node113" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().</title>
<g id="a_node113"><a xlink:title=" &#160;&#160;&#160;pub fn sign(&amp;self, randomness: RandomnessBytes, message: &amp;[u8]) &#45;&gt; NotarySignatureBytes { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b&#39; Signal_ZKGroup_20200424_Random_ServerSecretParams_Sign&#39; , &#160;...">
<polygon fill="white" stroke="black" points="1160,-2929 1106,-2929 1106,-2893 1160,-2893 1160,-2929"/>
<text text-anchor="middle" x="1133" y="-2907.3" font-family="Helvetica,sans-Serif" font-size="14.00">sign</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_SignDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign(). -->
<g id="edge178" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_SignDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.11,-2280.97C760.22,-2270.1 857.01,-2267.91 912,-2326 954.65,-2371.05 890.34,-2838.03 932,-2884 972.82,-2929.04 1050.16,-2925.44 1095.78,-2918.43"/>
<polygon fill="blue" stroke="blue" points="1096.55,-2921.85 1105.83,-2916.75 1095.39,-2914.95 1096.55,-2921.85"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic(). -->
<g id="node27" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic().</title>
<g id="a_node27"><a xlink:title="fn CallLinkAuthCredential_PresentDeterministic( &#160;&#160;&#160;&#160;credential_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;ra...">
<polygon fill="white" stroke="black" points="776,-1885 452,-1885 452,-1849 776,-1849 776,-1885"/>
<text text-anchor="middle" x="614" y="-1863.3" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredential_PresentDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present(). -->
<g id="node104" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().</title>
<g id="a_node104"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkSecre...">
<polygon fill="white" stroke="black" points="1619.5,-1776 1550.5,-1776 1550.5,-1740 1619.5,-1740 1619.5,-1776"/>
<text text-anchor="middle" x="1585" y="-1754.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present(). -->
<g id="edge183" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M776.17,-1877.38C822.58,-1873.94 871.54,-1863.64 912,-1840 925.52,-1832.1 918.44,-1818.83 932,-1811 984.47,-1780.68 1402.67,-1764.07 1540.28,-1759.39"/>
<polygon fill="blue" stroke="blue" points="1540.57,-1762.89 1550.45,-1759.05 1540.34,-1755.89 1540.57,-1762.89"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation(). -->
<g id="node28" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation().</title>
<g id="a_node28"><a xlink:title="fn ServerSecretParams_VerifyReceiptCredentialPresentation( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;presentation: Serialized&lt;ReceiptCredentialPresentation&gt;, ) &#45;&gt; Result&lt;(), ZkGroupVerificati...">
<polygon fill="white" stroke="black" points="819,-2263 409,-2263 409,-2227 819,-2227 819,-2263"/>
<text text-anchor="middle" x="614" y="-2241.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_VerifyReceiptCredentialPresentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation(). -->
<g id="node120" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().</title>
<g id="a_node120"><a xlink:title=" &#160;&#160;&#160;pub fn verify_receipt_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::receipts::ReceiptCredentialPresentation, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;present...">
<polygon fill="white" stroke="black" points="1272,-2875 994,-2875 994,-2839 1272,-2839 1272,-2875"/>
<text text-anchor="middle" x="1133" y="-2853.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_receipt_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation(). -->
<g id="edge193" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.11,-2226.97C760.22,-2216.1 857.01,-2213.91 912,-2272 954.65,-2317.05 890.34,-2784.03 932,-2830 946,-2845.45 964.3,-2855.18 984.14,-2861.01"/>
<polygon fill="blue" stroke="blue" points="983.44,-2864.44 994,-2863.56 985.2,-2857.66 983.44,-2864.44"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic(). -->
<g id="node29" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic().</title>
<g id="a_node29"><a xlink:title="fn ServerSecretParams_IssueReceiptCredentialDeterministic( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;request: Serialized&lt;ReceiptCredentialRequest&gt;, &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="820.5,-2641 407.5,-2641 407.5,-2605 820.5,-2605 820.5,-2641"/>
<text text-anchor="middle" x="614" y="-2619.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_IssueReceiptCredentialDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="node123" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<g id="a_node123"><a xlink:title=" &#160;&#160;&#160;pub fn issue_receipt_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: &amp;api::receipts::ReceiptCredentialRequest, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_expiration_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1224,-3253 1042,-3253 1042,-3217 1224,-3217 1224,-3253"/>
<text text-anchor="middle" x="1133" y="-3231.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_receipt_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="edge198" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.11,-2604.97C760.22,-2594.1 857.01,-2591.91 912,-2650 954.65,-2695.05 890.34,-3162.03 932,-3208 956.84,-3235.41 995.2,-3244.8 1031.72,-3246.38"/>
<polygon fill="blue" stroke="blue" points="1031.87,-3249.89 1041.95,-3246.63 1032.04,-3242.89 1031.87,-3249.89"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse(). -->
<g id="node30" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse().</title>
<g id="a_node30"><a xlink:title="fn BackupAuthCredentialRequestContext_ReceiveResponse( &#160;&#160;&#160;&#160;context_bytes: &amp;[u8], &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;expected_redemption_time: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGro...">
<polygon fill="white" stroke="black" points="818,-1399 410,-1399 410,-1363 818,-1363 818,-1399"/>
<text text-anchor="middle" x="614" y="-1377.3" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialRequestContext_ReceiveResponse</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="node100" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<g id="a_node100"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: BackupAuthCredentialResponse, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expected_redemption_time: Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;BackupAuthCre...">
<polygon fill="white" stroke="black" points="1618,-502 1552,-502 1552,-466 1618,-466 1618,-502"/>
<text text-anchor="middle" x="1585" y="-480.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge206" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M693.46,-1399C761.28,-1409.45 856.83,-1411.02 912,-1354 965.56,-1298.65 877.93,-1062.85 932,-1008 994.88,-944.22 1271.6,-1043.25 1334,-979 1370.26,-941.66 1318.59,-549.14 1354,-511 1401.19,-460.18 1489.21,-465.59 1541.62,-474.52"/>
<polygon fill="blue" stroke="blue" points="1541.13,-477.99 1551.6,-476.34 1542.39,-471.11 1541.13,-477.99"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify(). -->
<g id="node31" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify().</title>
<g id="a_node31"><a xlink:title="fn BackupAuthCredentialPresentation_Verify( &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;let presentation = binc...">
<polygon fill="white" stroke="black" points="765.5,-1129 462.5,-1129 462.5,-1093 765.5,-1093 765.5,-1129"/>
<text text-anchor="middle" x="614" y="-1107.3" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialPresentation_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="node98" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<g id="a_node98"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let acceptable_start_tim...">
<polygon fill="white" stroke="black" points="1161,-610 1105,-610 1105,-574 1161,-574 1161,-610"/>
<text text-anchor="middle" x="1133" y="-588.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge230" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M699.16,-1129.04C766.76,-1138.1 858.9,-1137.24 912,-1081 947.27,-1043.64 897.36,-656.95 932,-619 972.65,-574.47 1049.03,-577.61 1094.73,-584.45"/>
<polygon fill="blue" stroke="blue" points="1094.39,-587.94 1104.82,-586.09 1095.51,-581.03 1094.39,-587.94"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic(). -->
<g id="node32" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic().</title>
<g id="a_node32"><a xlink:title="fn BackupAuthCredential_PresentDeterministic( &#160;&#160;&#160;&#160;credential_bytes: &amp;[u8], &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="774.5,-1183 453.5,-1183 453.5,-1147 774.5,-1147 774.5,-1183"/>
<text text-anchor="middle" x="614" y="-1161.3" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredential_PresentDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="node96" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<g id="a_node96"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; BackupAuthCredentialPresentation { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BackupAuthCredentialPrese...">
<polygon fill="white" stroke="black" points="1167.5,-664 1098.5,-664 1098.5,-628 1167.5,-628 1167.5,-664"/>
<text text-anchor="middle" x="1133" y="-642.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge231" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.91,-1183.01C760.84,-1193.62 856.88,-1195.44 912,-1138 943.12,-1105.57 906.52,-771.02 932,-734 967.67,-682.18 1041.05,-660.57 1088.32,-651.78"/>
<polygon fill="blue" stroke="blue" points="1089.03,-655.21 1098.28,-650.04 1087.82,-648.31 1089.03,-655.21"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify(). -->
<g id="node33" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify().</title>
<g id="a_node33"><a xlink:title="fn CreateCallLinkCredentialPresentation_Verify( &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;()...">
<polygon fill="white" stroke="black" points="773,-1507 455,-1507 455,-1471 773,-1471 773,-1507"/>
<text text-anchor="middle" x="614" y="-1485.3" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialPresentation_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify(). -->
<g id="node108" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().</title>
<g id="a_node108"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; ...">
<polygon fill="white" stroke="black" points="1613,-1070 1557,-1070 1557,-1034 1613,-1034 1613,-1070"/>
<text text-anchor="middle" x="1585" y="-1048.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify(). -->
<g id="edge238" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M695.18,-1507.03C762.68,-1517.02 856.8,-1517.91 912,-1462 952.09,-1421.4 892.23,-1246.92 932,-1206 994.61,-1141.57 1266.56,-1222.36 1334,-1163 1362.81,-1137.64 1325.32,-1104.51 1354,-1079 1407.01,-1031.85 1496.21,-1036.87 1546.53,-1044.54"/>
<polygon fill="blue" stroke="blue" points="1546.22,-1048.04 1556.65,-1046.2 1547.35,-1041.13 1546.22,-1048.04"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic(). -->
<g id="node34" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic().</title>
<g id="a_node34"><a xlink:title="fn ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;group_secret_params: Serial...">
<polygon fill="white" stroke="black" points="904,-2101 324,-2101 324,-2065 904,-2065 904,-2101"/>
<text text-anchor="middle" x="614" y="-2079.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="node119" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<g id="a_node119"><a xlink:title=" &#160;&#160;&#160;pub fn create_expiring_profile_key_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: api::groups::GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expiring_profil...">
<polygon fill="white" stroke="black" points="1319.5,-2713 946.5,-2713 946.5,-2677 1319.5,-2677 1319.5,-2713"/>
<text text-anchor="middle" x="1133" y="-2691.3" font-family="Helvetica,sans-Serif" font-size="14.00">create_expiring_profile_key_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="edge242" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M692.93,-2064.98C760.86,-2054.36 856.91,-2052.54 912,-2110 943.64,-2143 912.04,-2479.87 932,-2521 965.59,-2590.24 1040.64,-2643.27 1088.65,-2671.72"/>
<polygon fill="blue" stroke="blue" points="1087.17,-2674.91 1097.57,-2676.91 1090.69,-2668.86 1087.17,-2674.91"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential(). -->
<g id="node35" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential().</title>
<g id="a_node35"><a xlink:title="fn ServerPublicParams_ReceiveReceiptCredential( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;request_context: Serialized&lt;ReceiptCredentialRequestContext&gt;, &#160;&#160;&#160;&#160;response: Serialized&lt;ReceiptCredent...">
<polygon fill="white" stroke="black" points="782,-2695 446,-2695 446,-2659 782,-2659 782,-2695"/>
<text text-anchor="middle" x="614" y="-2673.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_ReceiveReceiptCredential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="node114" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<g id="a_node114"><a xlink:title=" &#160;&#160;&#160;pub fn receive_receipt_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;context: &amp;api::receipts::ReceiptCredentialRequestContext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: &amp;api::receipts::ReceiptCredentialResponse, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;api...">
<polygon fill="white" stroke="black" points="1230.5,-3307 1035.5,-3307 1035.5,-3271 1230.5,-3271 1230.5,-3307"/>
<text text-anchor="middle" x="1133" y="-3285.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_receipt_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="edge245" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M782.07,-2669.13C830.8,-2675.75 879.6,-2692.75 912,-2730 950.82,-2774.63 892.24,-3218.2 932,-3262 955.36,-3287.74 990.65,-3297.58 1025.12,-3299.99"/>
<polygon fill="blue" stroke="blue" points="1025.13,-3303.49 1035.29,-3300.49 1025.47,-3296.5 1025.13,-3303.49"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId(). -->
<g id="node36" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId().</title>
<g id="a_node36"><a xlink:title="fn ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId( &#160;&#160;&#160;&#160;params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;auth_credential_with_pni_response_bytes:...">
<polygon fill="white" stroke="black" points="840,-1993 388,-1993 388,-1957 840,-1957 840,-1993"/>
<text text-anchor="middle" x="614" y="-1971.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive(). -->
<g id="node79" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive().</title>
<g id="a_node79"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: crate::Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;AuthCredentialWithPni, ZkGr...">
<polygon fill="white" stroke="black" points="1166,-2432 1100,-2432 1100,-2396 1166,-2396 1166,-2432"/>
<text text-anchor="middle" x="1133" y="-2410.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive(). -->
<g id="edge247" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M693.21,-1956.98C761.09,-1946.44 856.89,-1944.74 912,-2002 970.94,-2063.25 874.86,-2321.06 932,-2384 971.16,-2427.14 1043.6,-2426.96 1089.71,-2421.49"/>
<polygon fill="blue" stroke="blue" points="1090.23,-2424.95 1099.69,-2420.17 1089.32,-2418.01 1090.23,-2424.95"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation(). -->
<g id="node37" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().</title>
<g id="a_node37"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn test_data_presentation() &#45;&gt; ReceiptCredentialPresentation { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const RANDOMNESS: [u8; RANDOMNESS_LEN] = [33; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let server_params = zkgroup::ServerSecretParams::gene...">
<polygon fill="white" stroke="black" points="701,-3463 527,-3463 527,-3427 701,-3427 701,-3463"/>
<text text-anchor="middle" x="614" y="-3441.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_data_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="edge38" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M701.1,-3445.73C761.45,-3443.98 843.28,-3437.04 912,-3415 984.19,-3391.84 1058.83,-3342.81 1099.95,-3313.2"/>
<polygon fill="blue" stroke="blue" points="1102.17,-3315.91 1108.2,-3307.19 1098.05,-3310.25 1102.17,-3315.91"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="edge40" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M701.29,-3462.22C767.84,-3470.08 857.44,-3467.98 912,-3415 961.2,-3367.22 883.61,-3310.59 932,-3262 957.82,-3236.07 995.85,-3226.81 1031.84,-3224.92"/>
<polygon fill="blue" stroke="blue" points="1032.05,-3228.42 1041.93,-3224.58 1031.82,-3221.42 1032.05,-3228.42"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="edge39" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M701.1,-3462.63C767.99,-3470.87 858.16,-3469.08 912,-3415 944.61,-3382.25 899.95,-3241.29 932,-3208 945.77,-3193.7 963.25,-3184.4 982.12,-3178.6"/>
<polygon fill="blue" stroke="blue" points="983.07,-3181.97 991.79,-3175.95 981.22,-3175.22 983.07,-3181.97"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data(). -->
<g id="node38" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data().</title>
<g id="a_node38"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn test_data() &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receiptCredentialPresentation: zkgroup::serialize(&amp;Self::test_data_presentation()), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;state: proto::gift_badge::State:...">
<polygon fill="white" stroke="black" points="274,-3500 194,-3500 194,-3464 274,-3464 274,-3500"/>
<text text-anchor="middle" x="234" y="-3478.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_data</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation(). -->
<g id="edge99" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M274.03,-3478.18C330.71,-3472.63 437.63,-3462.17 516.28,-3454.47"/>
<polygon fill="blue" stroke="blue" points="517.09,-3457.9 526.7,-3453.45 516.41,-3450.94 517.09,-3457.9"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/gift_badge(). -->
<g id="node39" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/gift_badge().</title>
<g id="a_node39"><a xlink:title=" &#160;&#160;&#160;fn gift_badge(modifier: impl FnOnce(&amp;mut proto::GiftBadge)) &#45;&gt; Result&lt;(), GiftBadgeError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut gift_badge = proto::GiftBadge::test_data(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;modifier(&amp;mut gift_badge); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;G...">
<polygon fill="white" stroke="black" points="125,-3517 36,-3517 36,-3481 125,-3481 125,-3517"/>
<text text-anchor="middle" x="80.5" y="-3495.3" font-family="Helvetica,sans-Serif" font-size="14.00">gift_badge</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/gift_badge().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data(). -->
<g id="edge116" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/gift_badge().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M125.32,-3494.08C143.61,-3492.03 164.93,-3489.64 183.76,-3487.53"/>
<polygon fill="blue" stroke="blue" points="184.38,-3490.98 193.92,-3486.38 183.6,-3484.02 184.38,-3490.98"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge(). -->
<g id="node40" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge().</title>
<g id="a_node40"><a xlink:title=" &#160;&#160;&#160;fn valid_gift_badge() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proto::GiftBadge::test_data().try_into(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Ok(GiftBadge::Valid { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_credential_presentation: proto::GiftBadg...">
<polygon fill="white" stroke="black" points="145,-3463 16,-3463 16,-3427 145,-3427 145,-3463"/>
<text text-anchor="middle" x="80.5" y="-3441.3" font-family="Helvetica,sans-Serif" font-size="14.00">valid_gift_badge</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation(). -->
<g id="edge152" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M145.08,-3445C237.31,-3445 408.92,-3445 516.71,-3445"/>
<polygon fill="blue" stroke="blue" points="516.94,-3448.5 526.94,-3445 516.94,-3441.5 516.94,-3448.5"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data(). -->
<g id="edge153" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M145.31,-3460.58C158.2,-3463.73 171.56,-3466.99 183.85,-3470"/>
<polygon fill="blue" stroke="blue" points="183.34,-3473.48 193.89,-3472.45 185.01,-3466.68 183.34,-3473.48"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit&lt;Scrambler&gt;`]accept(). -->
<g id="node41" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit&lt;Scrambler&gt;`]accept().</title>
<g id="a_node41"><a xlink:title=" &#160;&#160;&#160;fn accept(&amp;mut self, visitor: &amp;mut Scrambler) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;item, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;special_fields: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} = self; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if let Some(item) = item { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;use proto::fra...">
<polygon fill="white" stroke="black" points="111.5,-3380 49.5,-3380 49.5,-3344 111.5,-3344 111.5,-3380"/>
<text text-anchor="middle" x="80.5" y="-3358.3" font-family="Helvetica,sans-Serif" font-size="14.00">accept</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit&lt;Scrambler&gt;`]accept(). -->
<g id="node43" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit&lt;Scrambler&gt;`]accept().</title>
<g id="a_node43"><a xlink:title=" &#160;&#160;&#160;fn accept(&amp;mut self, visitor: &amp;mut Scrambler) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;chatId: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;authorId: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dateSent: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expireStartDate: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expiresInMs:...">
<polygon fill="white" stroke="black" points="265,-3380 203,-3380 203,-3344 265,-3344 265,-3380"/>
<text text-anchor="middle" x="234" y="-3358.3" font-family="Helvetica,sans-Serif" font-size="14.00">accept</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit&lt;Scrambler&gt;`]accept(). -->
<g id="edge3" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit&lt;Scrambler&gt;`]accept().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M111.79,-3362C135.02,-3362 167.29,-3362 192.69,-3362"/>
<polygon fill="blue" stroke="blue" points="192.76,-3365.5 202.76,-3362 192.76,-3358.5 192.76,-3365.5"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept(). -->
<g id="node42" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().</title>
<g id="a_node42"><a xlink:title=" &#160;&#160;&#160;fn accept(&amp;mut self, visitor: &amp;mut Scrambler) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receiptCredentialPresentation, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;state: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;special_fields: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} = self; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if let...">
<polygon fill="white" stroke="black" points="645,-3380 583,-3380 583,-3344 645,-3344 645,-3380"/>
<text text-anchor="middle" x="614" y="-3358.3" font-family="Helvetica,sans-Serif" font-size="14.00">accept</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="edge217" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M645.04,-3359.89C698.79,-3355.9 814.85,-3346.37 912,-3332 954.06,-3325.78 1000.28,-3317.04 1039.46,-3309.06"/>
<polygon fill="blue" stroke="blue" points="1040.17,-3312.49 1049.26,-3307.05 1038.76,-3305.63 1040.17,-3312.49"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="edge218" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M645.25,-3368.92C704.08,-3380.47 834.88,-3396.51 912,-3332 936.82,-3311.24 907.53,-3283.17 932,-3262 959.07,-3238.58 996.38,-3229.55 1031.46,-3227.16"/>
<polygon fill="blue" stroke="blue" points="1031.96,-3230.64 1041.77,-3226.64 1031.6,-3223.65 1031.96,-3230.64"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="edge219" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M645.03,-3369.51C704.63,-3382.44 838.46,-3401.31 912,-3332 952.62,-3293.71 892.02,-3246.96 932,-3208 946,-3194.36 963.39,-3185.38 982.03,-3179.68"/>
<polygon fill="blue" stroke="blue" points="983.16,-3183 991.88,-3176.99 981.31,-3176.25 983.16,-3183"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept(). -->
<g id="edge243" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M265.29,-3362C332.98,-3362 496.48,-3362 572.67,-3362"/>
<polygon fill="blue" stroke="blue" points="572.82,-3365.5 582.82,-3362 572.82,-3358.5 572.82,-3365.5"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main(). -->
<g id="node44" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().</title>
<g id="a_node44"><a xlink:title="async fn main() &#45;&gt; anyhow::Result&lt;()&gt; { &#160;&#160;&#160;&#160;env_logger::builder() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.filter_module(module_path!(), log::LevelFilter::Info) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.parse_default_env() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.init(); &#160;&#160;&#160;&#160;&#160;let Config { &#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="641,-3297 587,-3297 587,-3261 641,-3261 641,-3297"/>
<text text-anchor="middle" x="614" y="-3275.3" font-family="Helvetica,sans-Serif" font-size="14.00">main</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge91" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M641.16,-3285.77C698.84,-3298.96 837.7,-3320.9 912,-3249 960.01,-3202.53 884.77,-3147.26 932,-3100 945.37,-3086.62 962,-3077.68 979.92,-3071.9"/>
<polygon fill="blue" stroke="blue" points="981.35,-3075.14 990,-3069.01 979.42,-3068.41 981.35,-3075.14"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge92" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M641.21,-3285.45C698.37,-3297.82 835.29,-3317.93 912,-3249 944.1,-3220.16 900.39,-3183.37 932,-3154 939.51,-3147.02 947.91,-3141.29 956.91,-3136.6"/>
<polygon fill="blue" stroke="blue" points="958.54,-3139.7 966.09,-3132.26 955.55,-3133.37 958.54,-3139.7"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request(). -->
<g id="node45" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().</title>
<g id="a_node45"><a xlink:title=" &#160;&#160;&#160;async fn test_successful_request() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let randomness = zkgroup::TEST_ARRAY_32; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let server_params = zkgroup::ServerSecretParams::generate(randomness); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let aci = Aci::parse_fr...">
<polygon fill="white" stroke="black" points="705,-3160 523,-3160 523,-3124 705,-3124 705,-3160"/>
<text text-anchor="middle" x="614" y="-3138.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_successful_request</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="edge24" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M705.09,-3157.24C769.71,-3162.89 855.08,-3158.85 912,-3112 935.67,-3092.52 908.66,-3065.87 932,-3046 947.76,-3032.58 966.9,-3023.92 987.02,-3018.53"/>
<polygon fill="blue" stroke="blue" points="988.06,-3021.88 996.96,-3016.14 986.42,-3015.07 988.06,-3021.88"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge22" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M705.17,-3143.05C765.17,-3141.31 844.99,-3134.25 912,-3112 921.84,-3108.73 922.22,-3103.43 932,-3100 947.2,-3094.67 963.38,-3090.38 979.71,-3086.94"/>
<polygon fill="blue" stroke="blue" points="980.77,-3090.3 989.89,-3084.9 979.4,-3083.43 980.77,-3090.3"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge23" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M705.05,-3139.39C774.14,-3137.38 871.65,-3134.55 956.05,-3132.1"/>
<polygon fill="blue" stroke="blue" points="956.38,-3135.6 966.27,-3131.81 956.18,-3128.6 956.38,-3135.6"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests(). -->
<g id="node46" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests().</title>
<g id="a_node46"><a xlink:title=" &#160;&#160;&#160;async fn test_unsuccessful_requests( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: chat::Response, &#160;&#160;&#160;&#160;) &#45;&gt; RequestError&lt;ProfileKeyCredentialRequestError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let randomness = zkgroup::TEST_ARRAY_32; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let server...">
<polygon fill="white" stroke="black" points="717.5,-3214 510.5,-3214 510.5,-3178 717.5,-3178 717.5,-3214"/>
<text text-anchor="middle" x="614" y="-3192.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_unsuccessful_requests</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge37" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M717.8,-3200.33C776.47,-3199.48 850.38,-3192.69 912,-3169 922.37,-3165.01 921.72,-3158.21 932,-3154 939.86,-3150.78 948.03,-3147.92 956.38,-3145.4"/>
<polygon fill="blue" stroke="blue" points="957.6,-3148.69 966.25,-3142.58 955.68,-3141.96 957.6,-3148.69"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/sign(). -->
<g id="node47" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/sign().</title>
<g id="a_node47"><a xlink:title="pub fn sign( &#160;&#160;&#160;&#160;private_key: Scalar, &#160;&#160;&#160;&#160;public_key: RistrettoPoint, &#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, PokshoError&gt; { &#160;&#160;&#160;&#160;let mut st = Statement::new(); &#160;&#160;&#160;&#160;st.add(&#39; pub...">
<polygon fill="white" stroke="black" points="1963.5,-2158 1909.5,-2158 1909.5,-2122 1963.5,-2122 1963.5,-2158"/>
<text text-anchor="middle" x="1936.5" y="-2136.3" font-family="Helvetica,sans-Serif" font-size="14.00">sign</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="node52" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<g id="a_node52"><a xlink:title=" &#160;&#160;&#160;pub fn prove( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scalar_args: &amp;ScalarArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_args: &amp;PointArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: &amp;[u8], // must be 32 bytes &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Vec&lt;u8&gt;, Poksh...">
<polygon fill="white" stroke="black" points="2121,-1884 2065,-1884 2065,-1848 2121,-1848 2121,-1884"/>
<text text-anchor="middle" x="2093" y="-1862.3" font-family="Helvetica,sans-Serif" font-size="14.00">prove</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/sign().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge82" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/sign().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.77,-2121.76C1984.17,-2106.36 2011.78,-2082.62 2029,-2056 2062.47,-2004.26 2079.8,-1933.03 2087.29,-1894.14"/>
<polygon fill="blue" stroke="blue" points="2090.78,-1894.54 2089.15,-1884.07 2083.89,-1893.27 2090.78,-1894.54"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature(). -->
<g id="node48" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().</title>
<g id="a_node48"><a xlink:title=" &#160;&#160;&#160;fn test_signature() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block64 = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block32 = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block100 = [0u8; 100]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..32 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;block32[i] = i as u8; &#160;&#160;...">
<polygon fill="white" stroke="black" points="1642.5,-2185 1527.5,-2185 1527.5,-2149 1642.5,-2149 1642.5,-2185"/>
<text text-anchor="middle" x="1585" y="-2163.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/sign(). -->
<g id="edge171" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1642.54,-2162.63C1714.9,-2157.04 1838.15,-2147.52 1899.12,-2142.81"/>
<polygon fill="blue" stroke="blue" points="1899.71,-2146.28 1909.41,-2142.02 1899.17,-2139.3 1899.71,-2146.28"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature(). -->
<g id="node49" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().</title>
<g id="a_node49"><a xlink:title="pub fn verify_signature( &#160;&#160;&#160;&#160;signature: &amp;[u8], &#160;&#160;&#160;&#160;public_key: RistrettoPoint, &#160;&#160;&#160;&#160;message: &amp;[u8], ) &#45;&gt; Result&lt;(), PokshoError&gt; { &#160;&#160;&#160;&#160;let mut st = Statement::new(); &#160;&#160;&#160;&#160;st.add(&#39; public_key&#39; , &amp;[(&#39; pri...">
<polygon fill="white" stroke="black" points="2000.5,-2212 1872.5,-2212 1872.5,-2176 2000.5,-2176 2000.5,-2212"/>
<text text-anchor="middle" x="1936.5" y="-2190.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature(). -->
<g id="edge172" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1642.54,-2171.37C1702.23,-2175.98 1796.57,-2183.27 1861.99,-2188.32"/>
<polygon fill="blue" stroke="blue" points="1862,-2191.83 1872.24,-2189.11 1862.54,-2184.85 1862,-2191.83"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="node51" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<g id="a_node51"><a xlink:title=" &#160;&#160;&#160;pub fn verify_proof( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof_bytes: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_args: &amp;PointArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let proof = Proof::from_slice(pro...">
<polygon fill="white" stroke="black" points="2255,-1884 2157,-1884 2157,-1848 2255,-1848 2255,-1884"/>
<text text-anchor="middle" x="2206" y="-1862.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge234" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2000.62,-2182.25C2010.76,-2178.49 2020.65,-2173.54 2029,-2167 2123.42,-2093.07 2177.1,-1953.31 2196.55,-1893.88"/>
<polygon fill="blue" stroke="blue" points="2199.98,-1894.66 2199.69,-1884.07 2193.31,-1892.53 2199.98,-1894.66"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="node50" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<g id="a_node50"><a xlink:title=" &#160;&#160;&#160;fn homomorphism_with_subtraction( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;g1: &amp;[Scalar], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;all_points: &amp;[RistrettoPoint], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;challenge: Option&lt;Scalar&gt;, &#160;&#160;&#160;&#160;) &#45;&gt; G2 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.equations &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;....">
<polygon fill="white" stroke="black" points="2539,-1864 2291,-1864 2291,-1828 2539,-1828 2539,-1864"/>
<text text-anchor="middle" x="2415" y="-1842.3" font-family="Helvetica,sans-Serif" font-size="14.00">homomorphism_with_subtraction</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge47" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="blue" d="M2421.8,-1827.74C2452.01,-1732.59 2591.44,-1293.47 2628.13,-1177.92"/>
<polygon fill="blue" stroke="blue" points="2631.57,-1178.66 2631.26,-1168.07 2624.9,-1176.54 2631.57,-1178.66"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="edge86" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2255.01,-1861.36C2262.99,-1860.59 2271.6,-1859.76 2280.54,-1858.89"/>
<polygon fill="blue" stroke="blue" points="2281.13,-1862.35 2290.75,-1857.91 2280.46,-1855.39 2281.13,-1862.35"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="edge124" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2121.12,-1851.52C2131.96,-1846.51 2144.76,-1841.51 2157,-1839 2196.7,-1830.85 2240.57,-1829.36 2280.66,-1830.84"/>
<polygon fill="blue" stroke="blue" points="2280.63,-1834.34 2290.77,-1831.27 2280.93,-1827.35 2280.63,-1834.34"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge125" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2121.15,-1866C2128.99,-1866 2137.85,-1866 2146.81,-1866"/>
<polygon fill="blue" stroke="blue" points="2146.91,-1869.5 2156.91,-1866 2146.91,-1862.5 2146.91,-1869.5"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement(). -->
<g id="node53" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().</title>
<g id="a_node53"><a xlink:title=" &#160;&#160;&#160;fn test_complex_statement() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block32 = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block64a = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block64b = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block64c = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut...">
<polygon fill="white" stroke="black" points="2029,-1874 1844,-1874 1844,-1838 2029,-1838 2029,-1874"/>
<text text-anchor="middle" x="1936.5" y="-1852.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_complex_statement</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge134" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2029.25,-1838.6C2058.66,-1835.4 2091.29,-1834.34 2121,-1839 2129.8,-1840.38 2138.93,-1842.52 2147.79,-1845.02"/>
<polygon fill="blue" stroke="blue" points="2147.07,-1848.45 2157.65,-1847.95 2149.07,-1841.74 2147.07,-1848.45"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge135" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2029.16,-1861.93C2038.19,-1862.52 2046.96,-1863.08 2054.93,-1863.6"/>
<polygon fill="blue" stroke="blue" points="2054.71,-1867.09 2064.91,-1864.25 2055.16,-1860.11 2054.71,-1867.09"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username_proof(). -->
<g id="node54" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username_proof().</title>
<g id="a_node54"><a xlink:title="pub fn username_proof(username: &amp;str, randomness: &amp;[u8; 32]) &#45;&gt; Result&lt;Vec&lt;u8&gt;, UsernameError&gt; { &#160;&#160;&#160;&#160;Username::new(username)?.proof(randomness) }">
<polygon fill="white" stroke="black" points="1649,-3600 1521,-3600 1521,-3564 1649,-3564 1649,-3600"/>
<text text-anchor="middle" x="1585" y="-3578.3" font-family="Helvetica,sans-Serif" font-size="14.00">username_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username_proof().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge36" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username_proof().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1649.08,-3584.54C1698.18,-3589.2 1766.14,-3601.75 1816,-3635 1868.69,-3670.13 1905.79,-3736.91 1923.57,-3774.51"/>
<polygon fill="blue" stroke="blue" points="1920.51,-3776.22 1927.87,-3783.84 1926.87,-3773.29 1920.51,-3776.22"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 bench_usernames(). -->
<g id="node55" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().</title>
<g id="a_node55"><a xlink:title="fn bench_usernames(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let mut rng = OsRng.unwrap_err(); &#160;&#160;&#160;&#160;let usernames = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Username::candidates_from(&amp;mut rng, &#39; signal&#39; , NicknameLimits::default()).unwrap(); &#160;&#160;&#160;&#160;&#160;let ...">
<polygon fill="white" stroke="black" points="1204.5,-3600 1061.5,-3600 1061.5,-3564 1204.5,-3564 1204.5,-3600"/>
<text text-anchor="middle" x="1133" y="-3578.3" font-family="Helvetica,sans-Serif" font-size="14.00">bench_usernames</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username_proof(). -->
<g id="edge55" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1204.81,-3582C1288.29,-3582 1426.34,-3582 1510.84,-3582"/>
<polygon fill="blue" stroke="blue" points="1510.87,-3585.5 1520.87,-3582 1510.87,-3578.5 1510.87,-3585.5"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge56" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1171.19,-3563.92C1280.67,-3513.55 1607.23,-3384.11 1816,-3522 1902.98,-3579.45 1926.87,-3714.57 1933.25,-3773.58"/>
<polygon fill="blue" stroke="blue" points="1929.78,-3774.08 1934.25,-3783.68 1936.75,-3773.39 1929.78,-3774.08"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="edge54" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1204.58,-3567.22C1360.85,-3536.34 1729.11,-3474.22 1816,-3555 1860.71,-3596.57 1797.17,-3781.89 1836,-3829 1846.23,-3841.41 1861.53,-3848.43 1877.08,-3852.32"/>
<polygon fill="blue" stroke="blue" points="1876.78,-3855.84 1887.29,-3854.45 1878.21,-3848.98 1876.78,-3855.84"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 benches(). -->
<g id="node56" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 benches().</title>
<g id="a_node56"><a xlink:title="criterion_group!(benches, bench_usernames); criterion_main!(benches);">
<polygon fill="white" stroke="black" points="651.5,-3600 576.5,-3600 576.5,-3564 651.5,-3564 651.5,-3600"/>
<text text-anchor="middle" x="614" y="-3578.3" font-family="Helvetica,sans-Serif" font-size="14.00">benches</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 bench_usernames(). -->
<g id="edge182" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M651.77,-3582C734.62,-3582 937.55,-3582 1051.32,-3582"/>
<polygon fill="blue" stroke="blue" points="1051.37,-3585.5 1061.37,-3582 1051.37,-3578.5 1051.37,-3585.5"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify(). -->
<g id="node57" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().</title>
<g id="a_node57"><a xlink:title=" &#160;&#160;&#160;fn valid_usernames_proof_and_verify() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proptest!(|(nickname in NICKNAME_PATTERN, discriminator in 1..DISCRIMINATOR_MAX)| { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let username = Username::new(&amp;Username::format_parts...">
<polygon fill="white" stroke="black" points="1712,-3820 1458,-3820 1458,-3784 1712,-3784 1712,-3820"/>
<text text-anchor="middle" x="1585" y="-3798.3" font-family="Helvetica,sans-Serif" font-size="14.00">valid_usernames_proof_and_verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge29" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1712.18,-3802C1778.47,-3802 1854.89,-3802 1898.96,-3802"/>
<polygon fill="blue" stroke="blue" points="1899.18,-3805.5 1909.18,-3802 1899.18,-3798.5 1899.18,-3805.5"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="edge28" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1712.28,-3814.4C1746.08,-3818.38 1782.51,-3823.27 1816,-3829 1836.17,-3832.45 1858.07,-3837.13 1877.53,-3841.61"/>
<polygon fill="blue" stroke="blue" points="1876.94,-3845.07 1887.47,-3843.93 1878.53,-3838.25 1876.94,-3845.07"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge31" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1939.65,-3783.87C1950.57,-3691.53 2000.39,-3264.04 2029,-2913 2061.92,-2509.11 2085.21,-2016.25 2090.74,-1894.29"/>
<polygon fill="blue" stroke="blue" points="2094.24,-1894.42 2091.19,-1884.28 2087.24,-1894.11 2094.24,-1894.42"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames(). -->
<g id="node59" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().</title>
<g id="a_node59"><a xlink:title=" &#160;&#160;&#160;fn many_random_makes_valid_usernames() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut rng = rand::rng(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let randomness = std::array::from_fn(|i| (i + 1).try_into().unwrap()); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let nickname = &#39; _SiGNA1&#39; ; &#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1730.5,-3874 1439.5,-3874 1439.5,-3838 1730.5,-3838 1730.5,-3874"/>
<text text-anchor="middle" x="1585" y="-3852.3" font-family="Helvetica,sans-Serif" font-size="14.00">many_random_makes_valid_usernames</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge133" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1730.8,-3841.36C1759.13,-3837.83 1788.56,-3833.7 1816,-3829 1844.12,-3824.19 1875.59,-3817 1899.17,-3811.26"/>
<polygon fill="blue" stroke="blue" points="1900.21,-3814.6 1909.08,-3808.81 1898.53,-3807.81 1900.21,-3814.6"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="edge132" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1730.68,-3856C1782.16,-3856 1837.23,-3856 1877.29,-3856"/>
<polygon fill="blue" stroke="blue" points="1877.39,-3859.5 1887.39,-3856 1877.39,-3852.5 1877.39,-3859.5"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge185" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1985.85,-3852.52C2001.92,-3848.87 2018.4,-3841.94 2029,-3829 2157.52,-3672.21 2198.92,-2123.38 2204.36,-1894.26"/>
<polygon fill="blue" stroke="blue" points="2207.86,-1894.16 2204.6,-1884.08 2200.86,-1893.99 2207.86,-1894.16"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow(). -->
<g id="node61" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().</title>
<g id="a_node61"><a xlink:title="fn endorsement_flow(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let mut group = c.benchmark_group(&#39; endorsements&#39; ); &#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;let inputs: Vec&lt;RistrettoPoint&gt; = (0.....">
<polygon fill="white" stroke="black" points="1205,-52 1061,-52 1061,-16 1205,-16 1205,-52"/>
<text text-anchor="middle" x="1133" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">endorsement_flow</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="node64" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<g id="a_node64"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hidden_attribute_points: impl IntoIterator&lt;Item = RistrettoPoint&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_public_key: &amp;ServerDerivedPublicKey, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;ReceivedEndorsements, V...">
<polygon fill="white" stroke="black" points="1618,-297 1552,-297 1552,-261 1618,-261 1618,-297"/>
<text text-anchor="middle" x="1585" y="-275.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge90" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1205.44,-33.9C1249.08,-37.87 1302.4,-50.69 1334,-87 1382.5,-142.72 1301.67,-199.86 1354,-252 1403,-300.81 1490.01,-296.22 1541.81,-287.95"/>
<polygon fill="blue" stroke="blue" points="1542.42,-291.39 1551.68,-286.26 1541.24,-284.49 1542.42,-291.39"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="node65" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<g id="a_node65"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hidden_attribute_points: impl IntoIterator&lt;Item = RistrettoPoint&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;private_key: &amp;ServerDerivedKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; EndorsementR...">
<polygon fill="white" stroke="black" points="1612,-243 1558,-243 1558,-207 1612,-207 1612,-243"/>
<text text-anchor="middle" x="1585" y="-221.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge89" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1205.25,-48.4C1244.06,-57.35 1292.5,-70.34 1334,-87 1414.61,-119.36 1501.98,-172.06 1549.1,-202.11"/>
<polygon fill="blue" stroke="blue" points="1547.39,-205.17 1557.7,-207.62 1551.17,-199.28 1547.39,-205.17"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 benches(). -->
<g id="node62" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 benches().</title>
<g id="a_node62"><a xlink:title="criterion_group!(benches, endorsement_flow, key_derivation); criterion_main!(benches);">
<polygon fill="white" stroke="black" points="651.5,-52 576.5,-52 576.5,-16 651.5,-16 651.5,-52"/>
<text text-anchor="middle" x="614" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">benches</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow(). -->
<g id="edge241" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M651.77,-34C734.51,-34 937,-34 1050.85,-34"/>
<polygon fill="blue" stroke="blue" points="1050.92,-37.5 1060.92,-34 1050.92,-30.5 1050.92,-37.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow(). -->
<g id="node63" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().</title>
<g id="a_node63"><a xlink:title=" &#160;&#160;&#160;fn default_flow() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let root_key = ServerRootKeyPair::generate([42; RANDOMNESS_LEN]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Client &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let client_...">
<polygon fill="white" stroke="black" points="1183.5,-243 1082.5,-243 1082.5,-207 1183.5,-207 1183.5,-243"/>
<text text-anchor="middle" x="1133" y="-221.3" font-family="Helvetica,sans-Serif" font-size="14.00">default_flow</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge80" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1183.79,-231.19C1228.38,-236.71 1295.54,-244.98 1354,-252 1419.55,-259.87 1495.64,-268.75 1541.78,-274.11"/>
<polygon fill="blue" stroke="blue" points="1541.66,-277.62 1551.99,-275.3 1542.47,-270.67 1541.66,-277.62"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge81" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1183.88,-225C1275.31,-225 1467.72,-225 1547.81,-225"/>
<polygon fill="blue" stroke="blue" points="1547.9,-228.5 1557.9,-225 1547.9,-221.5 1547.9,-228.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge122" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1618.3,-287.18C1668.18,-301.49 1763.66,-335.85 1816,-400 1836.18,-424.74 1826.58,-438.49 1836,-469 1955.99,-857.79 2025.34,-943.52 2121,-1339 2166.35,-1526.49 2193.5,-1757.6 2202.05,-1837.36"/>
<polygon fill="blue" stroke="blue" points="2198.6,-1838.01 2203.14,-1847.59 2205.56,-1837.28 2198.6,-1838.01"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge143" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="blue" d="M1612.23,-223.81C1656.05,-222.74 1746.24,-224.5 1816,-252 1957.66,-307.85 1939.73,-455 2092,-455 2092,-455 2092,-455 2207,-455 2526.14,-455 2616.42,-991.52 2633.64,-1121.77"/>
<polygon fill="blue" stroke="blue" points="2630.18,-1122.29 2634.92,-1131.77 2637.12,-1121.4 2630.18,-1122.29"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge144" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1612.21,-218.78C1660.21,-209.12 1762.24,-196.88 1816,-252 1849.81,-286.67 1827.96,-421.25 1836,-469 1895.5,-822.44 1967.67,-898.87 2029,-1252 2067.86,-1475.75 2085.56,-1749.85 2090.5,-1837.58"/>
<polygon fill="blue" stroke="blue" points="2087.01,-1838 2091.06,-1847.79 2094,-1837.61 2087.01,-1838"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity(). -->
<g id="node66" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().</title>
<g id="a_node66"><a xlink:title=" &#160;&#160;&#160;fn default_is_identity() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(Endorsement::combine([]).R, Endorsement::default().R); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let root_key = ServerRo...">
<polygon fill="white" stroke="black" points="1204.5,-189 1061.5,-189 1061.5,-153 1204.5,-153 1204.5,-189"/>
<text text-anchor="middle" x="1133" y="-167.3" font-family="Helvetica,sans-Serif" font-size="14.00">default_is_identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge165" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1204.86,-163.51C1246.64,-162.92 1298.17,-169.31 1334,-198 1353.98,-214 1333.88,-236.18 1354,-252 1407.69,-294.23 1491.43,-292.3 1541.68,-286.22"/>
<polygon fill="blue" stroke="blue" points="1542.42,-289.65 1551.87,-284.88 1541.5,-282.71 1542.42,-289.65"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge166" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1204.81,-179.5C1302,-191.16 1473.16,-211.7 1547.66,-220.64"/>
<polygon fill="blue" stroke="blue" points="1547.58,-224.15 1557.93,-221.87 1548.41,-217.2 1547.58,-224.15"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements(). -->
<g id="node67" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().</title>
<g id="a_node67"><a xlink:title=" &#160;&#160;&#160;fn combining_endorsements() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let root_key = ServerRootKeyPair::generate([42; RANDOMNESS_LEN]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Client &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;l...">
<polygon fill="white" stroke="black" points="1231,-135 1035,-135 1035,-99 1231,-99 1231,-135"/>
<text text-anchor="middle" x="1133" y="-113.3" font-family="Helvetica,sans-Serif" font-size="14.00">combining_endorsements</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge175" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1231.05,-107.53C1267.64,-109.23 1306.91,-118.21 1334,-144 1369.35,-177.66 1318.36,-218.64 1354,-252 1404.26,-299.03 1490.16,-295.23 1541.56,-287.56"/>
<polygon fill="blue" stroke="blue" points="1542.35,-290.97 1551.66,-285.93 1541.23,-284.06 1542.35,-290.97"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge176" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1231.01,-126.55C1263.93,-130.73 1300.78,-136.44 1334,-144 1411.87,-161.72 1500.14,-193.08 1548.18,-211.14"/>
<polygon fill="blue" stroke="blue" points="1547.21,-214.52 1557.8,-214.78 1549.68,-207.97 1547.21,-214.52"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip(). -->
<g id="node68" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().</title>
<g id="a_node68"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn round_trip&lt;T: Serialize + for&lt;&#39;a&gt; Deserialize&lt;&#39;a&gt; + PartialDefault&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;value: &amp;T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expected_len: usize, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bincode_options = bincode::DefaultOp...">
<polygon fill="white" stroke="black" points="1177,-297 1089,-297 1089,-261 1177,-261 1177,-297"/>
<text text-anchor="middle" x="1133" y="-275.3" font-family="Helvetica,sans-Serif" font-size="14.00">round_trip</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge240" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1177.15,-279C1263.41,-279 1456.2,-279 1541.73,-279"/>
<polygon fill="blue" stroke="blue" points="1541.86,-282.5 1551.86,-279 1541.86,-275.5 1541.86,-282.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge239" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1177.4,-273.6C1221.77,-268.11 1292.68,-259.36 1354,-252 1422.51,-243.77 1502.54,-234.44 1547.85,-229.18"/>
<polygon fill="blue" stroke="blue" points="1548.25,-232.66 1557.78,-228.03 1547.44,-225.71 1548.25,-232.66"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="node69" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<g id="a_node69"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Even though it would work with a borrow, this deliberately consumes &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// IssuanceProof to indicate that ...">
<polygon fill="white" stroke="black" points="1964.5,-2021 1908.5,-2021 1908.5,-1985 1964.5,-1985 1964.5,-2021"/>
<text text-anchor="middle" x="1936.5" y="-1999.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge60" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.61,-1997.06C1983.2,-1992.49 2008.16,-1985.38 2029,-1976 2082.16,-1952.08 2138.43,-1914.46 2172.64,-1890.01"/>
<polygon fill="blue" stroke="blue" points="2174.78,-1892.78 2180.84,-1884.09 2170.68,-1887.1 2174.78,-1892.78"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="node70" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<g id="a_node70"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; IssuanceProof { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.finalize_public_attrs(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho ...">
<polygon fill="white" stroke="black" points="1963.5,-1967 1909.5,-1967 1909.5,-1931 1963.5,-1931 1963.5,-1967"/>
<text text-anchor="middle" x="1936.5" y="-1945.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge254" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.84,-1943.22C1982.74,-1938.4 2008.41,-1930.47 2029,-1919 2042.57,-1911.45 2055.96,-1900.76 2066.89,-1890.96"/>
<polygon fill="blue" stroke="blue" points="2069.41,-1893.39 2074.38,-1884.04 2064.66,-1888.25 2069.41,-1893.39"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="node71" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<g id="a_node71"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;blinding_key: &amp;BlindingPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; BlindedIssuanceProof { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;se...">
<polygon fill="white" stroke="black" points="1963.5,-1354 1909.5,-1354 1909.5,-1318 1963.5,-1318 1963.5,-1354"/>
<text text-anchor="middle" x="1936.5" y="-1332.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge107" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.71,-1343.95C1984.93,-1351.84 2013.71,-1366.1 2029,-1389 2078.63,-1463.36 2089.31,-1746.85 2091.48,-1837.76"/>
<polygon fill="blue" stroke="blue" points="2087.98,-1837.95 2091.7,-1847.87 2094.98,-1837.79 2087.98,-1837.95"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="node72" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<g id="a_node72"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;blinding_key: &amp;BlindingKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof: BlindedIssuanceProof, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Credential, VerificationFail...">
<polygon fill="white" stroke="black" points="1964.5,-1300 1908.5,-1300 1908.5,-1264 1964.5,-1264 1964.5,-1300"/>
<text text-anchor="middle" x="1936.5" y="-1278.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge192" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.81,-1284.6C1984.44,-1287.67 2010.57,-1294.38 2029,-1309 2093.87,-1360.46 2091.6,-1393.6 2121,-1471 2171.11,-1602.93 2194.35,-1771.6 2202,-1837.67"/>
<polygon fill="blue" stroke="blue" points="2198.53,-1838.18 2203.13,-1847.72 2205.49,-1837.4 2198.53,-1838.18"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="node73" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<g id="a_node73"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof: &amp;PresentationProof, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), VerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.finalize_public_attrs(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1964.5,-1437 1908.5,-1437 1908.5,-1401 1964.5,-1401 1964.5,-1437"/>
<text text-anchor="middle" x="1936.5" y="-1415.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge12" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.65,-1422.45C1983.95,-1425.93 2009.75,-1432.78 2029,-1446 2084.4,-1484.05 2090.95,-1505.89 2121,-1566 2167.82,-1659.66 2191.86,-1783.23 2200.8,-1837.91"/>
<polygon fill="blue" stroke="blue" points="2197.37,-1838.57 2202.39,-1847.89 2204.28,-1837.47 2197.37,-1838.57"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="node74" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<g id="a_node74"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential: &amp;Credential, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; PresentationProof { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credenti...">
<polygon fill="white" stroke="black" points="1971,-1491 1902,-1491 1902,-1455 1971,-1455 1971,-1491"/>
<text text-anchor="middle" x="1936.5" y="-1469.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge45" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1944.64,-1491.17C1969.35,-1554.01 2051.3,-1762.47 2081.07,-1838.2"/>
<polygon fill="blue" stroke="blue" points="2077.84,-1839.55 2084.76,-1847.57 2084.35,-1836.99 2077.84,-1839.55"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches(). -->
<g id="node75" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().</title>
<g id="a_node75"><a xlink:title="criterion_group!(benches, bench_server_param_serialization,); criterion_main!(benches);">
<polygon fill="white" stroke="black" points="271.5,-992 196.5,-992 196.5,-956 271.5,-956 271.5,-992"/>
<text text-anchor="middle" x="234" y="-970.3" font-family="Helvetica,sans-Serif" font-size="14.00">benches</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements(). -->
<g id="node76" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().</title>
<g id="a_node76"><a xlink:title="pub fn benchmark_group_send_endorsements(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;const DAY_ALIGNED_TIMESTAMP: zkgroup::Timestamp = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;zkgroup::Timestamp::from_epoch_seconds(1681344000); // 2023&#45;04&#45;13 00:00:00 U...">
<polygon fill="white" stroke="black" points="759,-938 469,-938 469,-902 759,-902 759,-938"/>
<text text-anchor="middle" x="614" y="-916.3" font-family="Helvetica,sans-Serif" font-size="14.00">benchmark_group_send_endorsements</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements(). -->
<g id="edge120" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M271.6,-959.8C285.34,-955.01 301.2,-950.1 316,-947 361.92,-937.4 412.53,-931.21 458.77,-927.22"/>
<polygon fill="blue" stroke="blue" points="459.2,-930.7 468.87,-926.38 458.62,-923.72 459.2,-930.7"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth(). -->
<g id="node77" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().</title>
<g id="a_node77"><a xlink:title="fn benchmark_integration_auth(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params.get...">
<polygon fill="white" stroke="black" points="722,-992 506,-992 506,-956 722,-956 722,-992"/>
<text text-anchor="middle" x="614" y="-970.3" font-family="Helvetica,sans-Serif" font-size="14.00">benchmark_integration_auth</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth(). -->
<g id="edge121" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M271.59,-974C322.92,-974 418.67,-974 495.74,-974"/>
<polygon fill="blue" stroke="blue" points="496,-977.5 506,-974 496,-970.5 496,-977.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile(). -->
<g id="node78" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().</title>
<g id="a_node78"><a xlink:title="pub fn benchmark_integration_profile(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;// SERVER &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = ser...">
<polygon fill="white" stroke="black" points="728,-1046 500,-1046 500,-1010 728,-1010 728,-1046"/>
<text text-anchor="middle" x="614" y="-1024.3" font-family="Helvetica,sans-Serif" font-size="14.00">benchmark_integration_profile</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile(). -->
<g id="edge119" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M271.6,-988.2C285.34,-992.99 301.2,-997.9 316,-1001 372.42,-1012.8 435.93,-1019.44 489.7,-1023.18"/>
<polygon fill="blue" stroke="blue" points="489.76,-1026.7 499.97,-1023.87 490.23,-1019.71 489.76,-1026.7"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded(). -->
<g id="node109" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().</title>
<g id="a_node109"><a xlink:title=" &#160;&#160;&#160;pub fn receive_with_service_ids_single_threaded( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_ids: impl IntoIterator&lt;Item = libsignal_core::ServiceId&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_params: &amp;GroupSecretPara...">
<polygon fill="white" stroke="black" points="1284,-944 982,-944 982,-908 1284,-908 1284,-944"/>
<text text-anchor="middle" x="1133" y="-922.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_with_service_ids_single_threaded</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded(). -->
<g id="edge194" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M759.01,-921.67C824.95,-922.44 903.33,-923.35 971.19,-924.13"/>
<polygon fill="blue" stroke="blue" points="971.51,-927.64 981.55,-924.25 971.59,-920.64 971.51,-927.64"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge197" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M720.5,-938C783.63,-942.49 861.21,-936.02 912,-890 945.27,-859.86 899.24,-821.69 932,-791 976.03,-749.75 1051.31,-751.78 1095.89,-757.52"/>
<polygon fill="blue" stroke="blue" points="1095.59,-761.02 1105.98,-758.96 1096.58,-754.09 1095.59,-761.02"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge196" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M759.36,-934.23C811.69,-932.38 868.55,-921.45 912,-890 929.73,-877.17 914.49,-858.13 932,-845 959.87,-824.1 996.27,-815.36 1030.36,-812.49"/>
<polygon fill="blue" stroke="blue" points="1030.64,-815.98 1040.38,-811.81 1030.16,-809 1030.64,-815.98"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts(). -->
<g id="edge195" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M759.01,-906.63C844.8,-898.66 951.66,-888.74 1028.98,-881.56"/>
<polygon fill="blue" stroke="blue" points="1029.58,-885.02 1039.22,-880.61 1028.94,-878.05 1029.58,-885.02"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="edge212" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691,-955.99C759.31,-944.8 857.1,-942.11 912,-1001 948.94,-1040.63 895.93,-1935.58 932,-1976 962.95,-2010.68 1015.53,-2016.67 1059.02,-2014.39"/>
<polygon fill="blue" stroke="blue" points="1059.25,-2017.88 1069,-2013.71 1058.78,-2010.9 1059.25,-2017.88"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="node84" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<g id="a_node84"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; AuthCredentialWithPniZkcPr...">
<polygon fill="white" stroke="black" points="1167.5,-1913 1098.5,-1913 1098.5,-1877 1167.5,-1877 1167.5,-1913"/>
<text text-anchor="middle" x="1133" y="-1891.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="edge213" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.29,-955.97C759.57,-944.85 857.12,-942.27 912,-1001 944.9,-1036.2 899.88,-1832.09 932,-1868 970.44,-1910.97 1042.1,-1909.85 1088.39,-1903.57"/>
<polygon fill="blue" stroke="blue" points="1089.06,-1907.01 1098.43,-1902.08 1088.02,-1900.09 1089.06,-1907.01"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="node88" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<g id="a_node88"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;AuthCredentialWithPniZkc, ZkGroupV...">
<polygon fill="white" stroke="black" points="1166,-2075 1100,-2075 1100,-2039 1166,-2039 1166,-2075"/>
<text text-anchor="middle" x="1133" y="-2053.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="edge211" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.01,-955.97C759.34,-944.78 857.13,-942.08 912,-1001 950.97,-1042.84 893.95,-1987.32 932,-2030 970.8,-2073.53 1043.67,-2071.87 1089.92,-2065.39"/>
<polygon fill="blue" stroke="blue" points="1090.58,-2068.83 1099.93,-2063.85 1089.51,-2061.91 1090.58,-2068.83"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="node89" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<g id="a_node89"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: &amp;GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailu...">
<polygon fill="white" stroke="black" points="1161,-1859 1105,-1859 1105,-1823 1161,-1823 1161,-1859"/>
<text text-anchor="middle" x="1133" y="-1837.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="edge214" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.84,-955.97C760.01,-945.01 857.05,-942.69 912,-1001 936.36,-1026.85 917.94,-1607.39 932,-1640 966.5,-1720 1048.89,-1785.46 1096.46,-1818.24"/>
<polygon fill="blue" stroke="blue" points="1094.68,-1821.26 1104.92,-1823.98 1098.61,-1815.47 1094.68,-1821.26"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="edge226" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M728.05,-1016.11C792.11,-1016.17 868.01,-1029.02 912,-1081 946.29,-1121.52 896.85,-2952.21 932,-2992 946.58,-3008.51 966.07,-3018.54 987.16,-3024.27"/>
<polygon fill="blue" stroke="blue" points="986.42,-3027.69 996.96,-3026.62 988.05,-3020.89 986.42,-3027.69"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge225" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M728.06,-1016.1C792.12,-1016.16 868.02,-1029.02 912,-1081 947.26,-1122.67 895.87,-3005.08 932,-3046 944.94,-3060.65 961.73,-3070.2 980.09,-3076.17"/>
<polygon fill="blue" stroke="blue" points="979.24,-3079.57 989.81,-3078.97 981.18,-3072.84 979.24,-3079.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge227" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M728.06,-1016.1C792.13,-1016.16 868.03,-1029.01 912,-1081 948.22,-1123.82 894.88,-3057.95 932,-3100 939.29,-3108.26 947.81,-3114.9 957.15,-3120.19"/>
<polygon fill="blue" stroke="blue" points="955.83,-3123.45 966.33,-3124.86 959,-3117.21 955.83,-3123.45"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="edge228" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M728.36,-1016.16C792.32,-1016.29 868.01,-1029.2 912,-1081 937.89,-1111.49 915.17,-2484.71 932,-2521 964.36,-2590.76 1039.69,-2643.59 1088.1,-2671.86"/>
<polygon fill="blue" stroke="blue" points="1086.4,-2674.92 1096.81,-2676.86 1089.88,-2668.85 1086.4,-2674.92"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation(). -->
<g id="node124" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().</title>
<g id="a_node124"><a xlink:title=" &#160;&#160;&#160;pub fn verify_expiring_profile_key_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: api::groups::GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::profiles::ExpiringProfileKeyCred...">
<polygon fill="white" stroke="black" points="1769.5,-2713 1400.5,-2713 1400.5,-2677 1769.5,-2677 1769.5,-2713"/>
<text text-anchor="middle" x="1585" y="-2691.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_expiring_profile_key_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation(). -->
<g id="edge229" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M728.2,-1035.82C785.16,-1042.79 854.19,-1056 912,-1081 1126.58,-1173.79 1227.41,-1186.93 1334,-1395 1366.17,-1457.8 1307.03,-2612.34 1354,-2665 1364.5,-2676.77 1377.17,-2685.64 1391.1,-2692.22"/>
<polygon fill="blue" stroke="blue" points="1389.86,-2695.5 1400.43,-2696.23 1392.62,-2689.07 1389.86,-2695.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="edge159" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1099.78,-2421.19C1047.74,-2430.29 950.04,-2437.96 922,-2375 911.24,-2350.84 911.52,-2280.28 922,-2256 956.63,-2175.75 1041.3,-2112.84 1092.24,-2080.64"/>
<polygon fill="blue" stroke="blue" points="1094.38,-2083.43 1101.03,-2075.18 1090.69,-2077.49 1094.38,-2083.43"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="edge177" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1098.49,-2475.96C1046.12,-2485.78 949.74,-2494.29 922,-2432 910.68,-2406.57 910.68,-1956.43 922,-1931 948.06,-1872.48 1034.71,-1876.45 1088.52,-1885.28"/>
<polygon fill="blue" stroke="blue" points="1088.04,-1888.75 1098.49,-1887.04 1089.25,-1881.86 1088.04,-1888.75"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key(). -->
<g id="node81" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().</title>
<g id="a_node81"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn present_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; AuthCredentia...">
<polygon fill="white" stroke="black" points="1648,-1913 1522,-1913 1522,-1877 1648,-1877 1648,-1913"/>
<text text-anchor="middle" x="1585" y="-1891.3" font-family="Helvetica,sans-Serif" font-size="14.00">present_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge13" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1648.11,-1904.88C1698.98,-1909.32 1769.83,-1906.64 1816,-1868 1823.35,-1861.85 1901.94,-1589.89 1927.51,-1500.88"/>
<polygon fill="blue" stroke="blue" points="1930.89,-1501.77 1930.29,-1491.19 1924.17,-1499.84 1930.89,-1501.77"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key(). -->
<g id="node82" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().</title>
<g id="a_node82"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn issue_credential_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_key: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1677.5,-1967 1492.5,-1967 1492.5,-1931 1677.5,-1931 1677.5,-1967"/>
<text text-anchor="middle" x="1585" y="-1945.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_credential_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge48" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1677.83,-1949C1750.3,-1949 1847.53,-1949 1899.38,-1949"/>
<polygon fill="blue" stroke="blue" points="1899.42,-1952.5 1909.42,-1949 1899.42,-1945.5 1899.42,-1952.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key(). -->
<g id="edge88" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1197.05,-1995.17C1241.03,-1989.73 1301.08,-1982.35 1354,-1976 1396.04,-1970.95 1442.42,-1965.49 1482.45,-1960.8"/>
<polygon fill="blue" stroke="blue" points="1482.96,-1964.27 1492.49,-1959.63 1482.15,-1957.32 1482.96,-1964.27"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key(). -->
<g id="edge130" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1167.82,-1895C1240.57,-1895 1413.28,-1895 1511.82,-1895"/>
<polygon fill="blue" stroke="blue" points="1512,-1898.5 1522,-1895 1512,-1891.5 1512,-1898.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key(). -->
<g id="node85" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().</title>
<g id="a_node85"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn receive_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;AuthCredentialWithPni...">
<polygon fill="white" stroke="black" points="1646.5,-2021 1523.5,-2021 1523.5,-1985 1646.5,-1985 1646.5,-2021"/>
<text text-anchor="middle" x="1585" y="-1999.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge158" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1646.88,-2003C1719.39,-2003 1838.22,-2003 1898.27,-2003"/>
<polygon fill="blue" stroke="blue" points="1898.43,-2006.5 1908.43,-2003 1898.43,-1999.5 1898.43,-2006.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key(). -->
<g id="node86" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().</title>
<g id="a_node86"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn verify_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_key: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: &amp;GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), Zk...">
<polygon fill="white" stroke="black" points="1641.5,-1859 1528.5,-1859 1528.5,-1823 1641.5,-1823 1641.5,-1859"/>
<text text-anchor="middle" x="1585" y="-1837.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge187" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1641.53,-1851.59C1694.52,-1858.14 1772.52,-1857.87 1816,-1811 1871.25,-1751.45 1784.9,-1509.15 1836,-1446 1850.71,-1427.82 1876.31,-1421.17 1897.86,-1419.01"/>
<polygon fill="blue" stroke="blue" points="1898.33,-1422.48 1908.05,-1418.28 1897.83,-1415.5 1898.33,-1422.48"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present(). -->
<g id="node87" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().</title>
<g id="a_node87"><a xlink:title=" &#160;&#160;&#160;fn issue_receive_present() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const ACI: Aci = Aci::from_uuid_bytes([b&#39;a&#39;; 16]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const PNI: Pni = Pni::from_uuid_bytes([b&#39;p&#39;; 16]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const REDEMPTION_TIME: Timestamp = Timest...">
<polygon fill="white" stroke="black" points="1217,-1967 1049,-1967 1049,-1931 1217,-1931 1217,-1967"/>
<text text-anchor="middle" x="1133" y="-1945.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_receive_present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key(). -->
<g id="edge207" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1217.04,-1938.7C1258.23,-1933.62 1308.73,-1927.44 1354,-1922 1406.7,-1915.67 1466.21,-1908.69 1511.49,-1903.41"/>
<polygon fill="blue" stroke="blue" points="1511.99,-1906.88 1521.51,-1902.25 1511.18,-1899.93 1511.99,-1906.88"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key(). -->
<g id="edge208" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1217.06,-1949C1291.83,-1949 1401.94,-1949 1482.02,-1949"/>
<polygon fill="blue" stroke="blue" points="1482.13,-1952.5 1492.13,-1949 1482.13,-1945.5 1482.13,-1952.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key(). -->
<g id="edge209" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1217.04,-1959.3C1258.23,-1964.38 1308.73,-1970.56 1354,-1976 1407.44,-1982.42 1467.89,-1989.51 1513.4,-1994.81"/>
<polygon fill="blue" stroke="blue" points="1513.12,-1998.3 1523.46,-1995.98 1513.93,-1991.35 1513.12,-1998.3"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key(). -->
<g id="edge210" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1217.06,-1956.46C1256.33,-1955.66 1301.59,-1947.95 1334,-1922 1353.98,-1906 1333.88,-1883.82 1354,-1868 1399.97,-1831.84 1467.97,-1828.06 1518.11,-1831.53"/>
<polygon fill="blue" stroke="blue" points="1517.96,-1835.03 1528.21,-1832.35 1518.52,-1828.05 1517.96,-1835.03"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key(). -->
<g id="edge237" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1166,-2053.16C1238.02,-2044.52 1414.28,-2023.37 1513.38,-2011.47"/>
<polygon fill="blue" stroke="blue" points="1513.79,-2014.95 1523.31,-2010.28 1512.96,-2008 1513.79,-2014.95"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key(). -->
<g id="edge244" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1161.14,-1841C1230.85,-1841 1417.8,-1841 1518.16,-1841"/>
<polygon fill="blue" stroke="blue" points="1518.19,-1844.5 1528.19,-1841 1518.19,-1837.5 1518.19,-1844.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp(). -->
<g id="node90" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().</title>
<g id="a_node90"><a xlink:title=" &#160;&#160;&#160;fn test_client_enforces_timestamp() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let redemption_time: Timestamp = DAY_ALIGNED_TIMESTAMP; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let request_context = BackupAuthCredentialRequestContext::new(&amp;KEY, ACI.into()); &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1250,-502 1016,-502 1016,-466 1250,-466 1250,-502"/>
<text text-anchor="middle" x="1133" y="-480.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_client_enforces_timestamp</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge2" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1250.16,-498.37C1283.67,-502.49 1320.28,-506.95 1354,-511 1422.51,-519.23 1502.54,-528.56 1547.85,-533.82"/>
<polygon fill="blue" stroke="blue" points="1547.44,-537.29 1557.78,-534.97 1548.25,-530.34 1547.44,-537.29"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1250.18,-484C1345.59,-484 1475.4,-484 1541.51,-484"/>
<polygon fill="blue" stroke="blue" points="1541.56,-487.5 1551.56,-484 1541.56,-480.5 1541.56,-487.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="node91" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<g id="a_node91"><a xlink:title=" &#160;&#160;&#160;fn generate_credential(redemption_time: Timestamp) &#45;&gt; BackupAuthCredential { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// client generated materials; issuance request &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let request_context = BackupAuthCredentialRequestContex...">
<polygon fill="white" stroke="black" points="1210,-556 1056,-556 1056,-520 1210,-520 1210,-556"/>
<text text-anchor="middle" x="1133" y="-534.3" font-family="Helvetica,sans-Serif" font-size="14.00">generate_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge9" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1210.08,-538C1308.02,-538 1474.28,-538 1547.52,-538"/>
<polygon fill="blue" stroke="blue" points="1547.63,-541.5 1557.63,-538 1547.63,-534.5 1547.63,-541.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge10" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1210.1,-528.56C1252.46,-523.33 1306.15,-516.75 1354,-511 1419.55,-503.13 1495.64,-494.25 1541.78,-488.89"/>
<polygon fill="blue" stroke="blue" points="1542.47,-492.33 1551.99,-487.7 1541.66,-485.38 1542.47,-492.33"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id(). -->
<g id="node92" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().</title>
<g id="a_node92"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_wrong_backup_id() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let valid_presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_params...">
<polygon fill="white" stroke="black" points="747,-502 481,-502 481,-466 747,-466 747,-502"/>
<text text-anchor="middle" x="614" y="-480.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_wrong_backup_id</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge15" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.04,-495.11C798.55,-499.67 858.07,-505.24 912,-511 956.18,-515.72 1005.26,-521.67 1045.84,-526.79"/>
<polygon fill="blue" stroke="blue" points="1045.6,-530.29 1055.96,-528.07 1046.48,-523.34 1045.6,-530.29"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge17" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M705.53,-465.98C771.02,-458.54 857.28,-461.12 912,-511 948.08,-543.89 896.65,-585.34 932,-619 973.31,-658.34 1042.98,-658.56 1088.22,-653.51"/>
<polygon fill="blue" stroke="blue" points="1088.83,-656.96 1098.32,-652.25 1087.96,-650.01 1088.83,-656.96"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge16" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.12,-466.56C803.07,-466.13 865.85,-475.67 912,-511 932.32,-526.56 912.02,-549 932,-565 978.34,-602.1 1050.94,-601.92 1094.74,-597.55"/>
<polygon fill="blue" stroke="blue" points="1095.15,-601.03 1104.7,-596.44 1094.37,-594.08 1095.15,-601.03"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration(). -->
<g id="node93" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().</title>
<g id="a_node93"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_expiration() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_params().get_publ...">
<polygon fill="white" stroke="black" points="722,-664 506,-664 506,-628 722,-628 722,-664"/>
<text text-anchor="middle" x="614" y="-642.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_expiration</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge20" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M722.25,-662.61C783.68,-666.16 858.86,-659.68 912,-619 932.32,-603.44 912.02,-581 932,-565 963.51,-539.77 1007.16,-531.78 1045.65,-530.62"/>
<polygon fill="blue" stroke="blue" points="1045.88,-534.12 1055.83,-530.47 1045.78,-527.12 1045.88,-534.12"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge21" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M722.12,-646C835.2,-646 1007.96,-646 1088.21,-646"/>
<polygon fill="blue" stroke="blue" points="1088.44,-649.5 1098.44,-646 1088.44,-642.5 1088.44,-649.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge19" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M722.31,-637.06C778.8,-632.15 849.19,-625.71 912,-619 976.33,-612.13 1051.06,-602.64 1094.78,-596.93"/>
<polygon fill="blue" stroke="blue" points="1095.48,-600.37 1104.94,-595.6 1094.57,-593.43 1095.48,-600.37"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity(). -->
<g id="node94" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().</title>
<g id="a_node94"><a xlink:title=" &#160;&#160;&#160;fn test_client_enforces_timestamp_granularity() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let redemption_time: Timestamp = DAY_ALIGNED_TIMESTAMP.add_seconds(60 * 60); // not on a day boundary! &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let request_context = Back...">
<polygon fill="white" stroke="black" points="1291.5,-448 974.5,-448 974.5,-412 1291.5,-412 1291.5,-448"/>
<text text-anchor="middle" x="1133" y="-426.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_client_enforces_timestamp_granularity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge43" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1291.55,-434.36C1306.9,-439.6 1321.42,-446.93 1334,-457 1353.98,-473 1333.88,-495.18 1354,-511 1409.94,-555 1498.48,-551.06 1547.8,-544.44"/>
<polygon fill="blue" stroke="blue" points="1548.6,-547.86 1557.99,-542.96 1547.59,-540.93 1548.6,-547.86"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge44" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1284.16,-448.02C1374.57,-458.87 1483.19,-471.9 1541.69,-478.92"/>
<polygon fill="blue" stroke="blue" points="1541.33,-482.4 1551.67,-480.12 1542.16,-475.45 1541.33,-482.4"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level(). -->
<g id="node95" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().</title>
<g id="a_node95"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_wrong_receipt_level() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let valid_presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_pa...">
<polygon fill="white" stroke="black" points="755,-610 473,-610 473,-574 755,-574 755,-610"/>
<text text-anchor="middle" x="614" y="-588.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_wrong_receipt_level</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge61" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M755.22,-580.17C804.79,-575.74 860.9,-570.46 912,-565 956.18,-560.28 1005.26,-554.33 1045.84,-549.21"/>
<polygon fill="blue" stroke="blue" points="1046.48,-552.66 1055.96,-547.93 1045.6,-545.71 1046.48,-552.66"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge63" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M755.22,-603.83C804.79,-608.26 860.9,-613.54 912,-619 973.28,-625.54 1044,-634.47 1088.35,-640.23"/>
<polygon fill="blue" stroke="blue" points="1088.12,-643.73 1098.49,-641.56 1089.03,-636.79 1088.12,-643.73"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge62" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M755.25,-592C870.16,-592 1024.8,-592 1094.81,-592"/>
<polygon fill="blue" stroke="blue" points="1094.91,-595.5 1104.91,-592 1094.91,-588.5 1094.91,-595.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge105" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1167.85,-659.33C1294.9,-710.12 1739.92,-894.99 1816,-1022 1840.24,-1062.46 1806.47,-1409.22 1836,-1446 1849.32,-1462.6 1871.74,-1469.6 1891.92,-1472.34"/>
<polygon fill="blue" stroke="blue" points="1891.6,-1475.83 1901.91,-1473.39 1892.33,-1468.87 1891.6,-1475.83"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge136" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1612.27,-544.77C1662.32,-559.22 1770.37,-598.3 1816,-676 1851.63,-736.68 1792.37,-1253.79 1836,-1309 1850.85,-1327.79 1877.36,-1334.32 1899.28,-1336.26"/>
<polygon fill="blue" stroke="blue" points="1899.09,-1339.76 1909.29,-1336.87 1899.52,-1332.77 1899.09,-1339.76"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge142" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1161.1,-587.55C1266.14,-572.01 1648.89,-531.83 1816,-739 1861.37,-795.24 1792.02,-1331.67 1836,-1389 1850.5,-1407.91 1876.53,-1415.29 1898.32,-1418.01"/>
<polygon fill="blue" stroke="blue" points="1898.01,-1421.49 1908.3,-1418.98 1898.68,-1414.53 1898.01,-1421.49"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption(). -->
<g id="node99" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().</title>
<g id="a_node99"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_wrong_redemption() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let valid_presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_param...">
<polygon fill="white" stroke="black" points="751.5,-556 476.5,-556 476.5,-520 751.5,-520 751.5,-556"/>
<text text-anchor="middle" x="614" y="-534.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_wrong_redemption</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge201" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M751.51,-538C844.75,-538 965.47,-538 1045.66,-538"/>
<polygon fill="blue" stroke="blue" points="1045.72,-541.5 1055.72,-538 1045.72,-534.5 1045.72,-541.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge200" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M751.62,-520.55C806.42,-520.66 867.09,-530.62 912,-565 932.32,-580.56 912.02,-603 932,-619 976.06,-654.28 1043.86,-655.85 1088.08,-652.16"/>
<polygon fill="blue" stroke="blue" points="1088.61,-655.63 1098.23,-651.19 1087.95,-648.66 1088.61,-655.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge202" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M751.86,-549.53C802.24,-554.02 859.75,-559.42 912,-565 976.33,-571.87 1051.06,-581.36 1094.78,-587.07"/>
<polygon fill="blue" stroke="blue" points="1094.57,-590.57 1104.94,-588.4 1095.48,-583.63 1094.57,-590.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge215" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1618,-476.41C1668.37,-466.59 1765.58,-456.6 1816,-511 1834.44,-530.9 1830.89,-972.35 1836,-999 1854.63,-1096.14 1900.38,-1204.9 1922.76,-1254.58"/>
<polygon fill="blue" stroke="blue" points="1919.71,-1256.33 1927.03,-1263.98 1926.08,-1253.43 1919.71,-1256.33"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge112" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1649.21,-1583.71C1701.65,-1577.53 1774.15,-1579.03 1816,-1623 1861.45,-1670.75 1794.92,-1867.44 1836,-1919 1851.04,-1937.88 1877.54,-1945.22 1899.42,-1947.93"/>
<polygon fill="blue" stroke="blue" points="1899.1,-1951.41 1909.39,-1948.89 1899.78,-1944.44 1899.1,-1951.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge123" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1618.25,-1642.49C1668.5,-1632.9 1765.02,-1623.4 1816,-1677 1861.89,-1725.25 1793.8,-1924.48 1836,-1976 1850.82,-1994.09 1876.42,-2000.75 1897.94,-2002.93"/>
<polygon fill="blue" stroke="blue" points="1897.89,-2006.44 1908.11,-2003.67 1898.4,-1999.45 1897.89,-2006.44"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge173" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1613.37,-1710.48C1661.88,-1720.15 1762.81,-1731.83 1816,-1677 1851.87,-1640.01 1802.96,-1485.54 1836,-1446 1850.99,-1428.06 1876.59,-1421.4 1898.07,-1419.18"/>
<polygon fill="blue" stroke="blue" points="1898.51,-1422.65 1908.22,-1418.41 1897.98,-1415.67 1898.51,-1422.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge199" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1619.68,-1763.55C1667.99,-1769.58 1757.56,-1773.34 1816,-1731 1893.58,-1674.8 1922.21,-1555.55 1931.52,-1501.13"/>
<polygon fill="blue" stroke="blue" points="1935,-1501.58 1933.14,-1491.15 1928.09,-1500.46 1935,-1501.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge5" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1612.24,-1213.03C1658.51,-1212.7 1755.45,-1218.39 1816,-1267 1832.12,-1279.94 1820.13,-1295.75 1836,-1309 1853.75,-1323.82 1878.92,-1330.56 1899.5,-1333.6"/>
<polygon fill="blue" stroke="blue" points="1899.13,-1337.08 1909.49,-1334.84 1900,-1330.13 1899.13,-1337.08"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge73" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1619.51,-1098.23C1670.12,-1088.71 1765.51,-1079.76 1816,-1133 1863.96,-1183.57 1791.91,-1392.02 1836,-1446 1849.3,-1462.29 1871.36,-1469.32 1891.33,-1472.15"/>
<polygon fill="blue" stroke="blue" points="1891.2,-1475.65 1901.53,-1473.27 1891.97,-1468.7 1891.2,-1475.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge184" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1618.26,-1158.35C1664.06,-1157.18 1749.74,-1159.43 1816,-1187 1853.81,-1202.73 1889.52,-1234.09 1911.88,-1256.47"/>
<polygon fill="blue" stroke="blue" points="1909.44,-1258.98 1918.94,-1263.68 1914.45,-1254.09 1909.44,-1258.98"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge186" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1613.11,-1045.49C1661.66,-1035.62 1763.28,-1023.44 1816,-1079 1863.52,-1129.08 1793.07,-1334.94 1836,-1389 1850.75,-1407.58 1876.6,-1414.99 1898.25,-1417.8"/>
<polygon fill="blue" stroke="blue" points="1898.17,-1421.31 1908.48,-1418.84 1898.88,-1414.34 1898.17,-1421.31"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge108" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1284.3,-929.2C1303.19,-923.3 1320.56,-913.77 1334,-899 1371.35,-857.96 1324.37,-446.92 1354,-400 1396.1,-333.34 1487.88,-301.31 1541.91,-287.69"/>
<polygon fill="blue" stroke="blue" points="1542.97,-291.03 1551.87,-285.28 1541.32,-284.23 1542.97,-291.03"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge110" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1160.04,-764.24C1204.05,-763.07 1292.43,-753.62 1334,-699 1364.11,-659.44 1320.14,-288.4 1354,-252 1403.19,-199.13 1496.59,-207.16 1547.94,-216.66"/>
<polygon fill="blue" stroke="blue" points="1547.43,-220.13 1557.92,-218.62 1548.78,-213.26 1547.43,-220.13"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge221" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1225.63,-829.42C1264.52,-828.92 1307.01,-820.33 1334,-791 1363.46,-758.99 1330.57,-436.65 1354,-400 1396.47,-333.57 1488.12,-301.45 1542.02,-287.76"/>
<polygon fill="blue" stroke="blue" points="1543.07,-291.1 1551.95,-285.33 1541.41,-284.3 1543.07,-291.1"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge232" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1226.74,-883.48C1265.37,-882.86 1307.34,-874.15 1334,-845 1367.4,-808.48 1327.47,-441.78 1354,-400 1396.26,-333.44 1487.99,-301.37 1541.96,-287.72"/>
<polygon fill="blue" stroke="blue" points="1543.01,-291.06 1551.9,-285.3 1541.36,-284.26 1543.01,-291.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign(). -->
<g id="node139" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().</title>
<g id="a_node139"><a xlink:title=" &#160;&#160;&#160;pub fn sign(&amp;self, message: &amp;[u8], sho: &amp;mut Sho) &#45;&gt; SignatureBytes { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let vec_bytes = poksho::sign( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.signing_key, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.public_key, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1612,-2295 1558,-2295 1558,-2259 1612,-2259 1612,-2295"/>
<text text-anchor="middle" x="1585" y="-2273.3" font-family="Helvetica,sans-Serif" font-size="14.00">sign</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign(). -->
<g id="edge4" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1160.17,-2916.76C1203.58,-2924.59 1290.04,-2932.58 1334,-2884 1377.27,-2836.19 1310.32,-2351.44 1354,-2304 1402.92,-2250.87 1496.42,-2259.01 1547.86,-2268.59"/>
<polygon fill="blue" stroke="blue" points="1547.38,-2272.06 1557.87,-2270.57 1548.74,-2265.2 1547.38,-2272.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify(). -->
<g id="node133" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().</title>
<g id="a_node133"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request_public_key: receipt_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: receipt_credential_request...">
<polygon fill="white" stroke="black" points="1964.5,-2824 1908.5,-2824 1908.5,-2788 1964.5,-2788 1964.5,-2824"/>
<text text-anchor="middle" x="1936.5" y="-2802.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify(). -->
<g id="edge14" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1230.7,-3292.66C1383.58,-3292.54 1677.9,-3267.02 1816,-3085 1849.95,-3040.25 1800.13,-2876.24 1836,-2833 1850.93,-2815.01 1876.53,-2808.34 1898.02,-2806.14"/>
<polygon fill="blue" stroke="blue" points="1898.47,-2809.61 1908.18,-2805.38 1897.95,-2802.63 1898.47,-2809.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new(). -->
<g id="node128" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().</title>
<g id="a_node128"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: credentials::KeyPair&lt;credentials::ExpiringProfileKeyCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request_public_key: profile_key_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: profile_key_c...">
<polygon fill="white" stroke="black" points="1963.5,-2608 1909.5,-2608 1909.5,-2572 1963.5,-2572 1963.5,-2608"/>
<text text-anchor="middle" x="1936.5" y="-2586.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new(). -->
<g id="edge42" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1269.25,-3018.64C1292.34,-3013.74 1314.98,-3005.45 1334,-2992 1349.9,-2980.75 1338.98,-2965.41 1354,-2953 1518.9,-2816.73 1679.36,-2982.6 1816,-2818 1873.34,-2748.92 1777.99,-2685.52 1836,-2617 1851.31,-2598.92 1877.38,-2592.32 1898.99,-2590.16"/>
<polygon fill="blue" stroke="blue" points="1899.46,-2593.63 1909.18,-2589.42 1898.96,-2586.65 1899.46,-2593.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify(). -->
<g id="node131" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify().</title>
<g id="a_node131"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: profile_key_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: profile_key_credential_request::Ciphertext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;commitment: profile_key_commitm...">
<polygon fill="white" stroke="black" points="1964.5,-2878 1908.5,-2878 1908.5,-2842 1964.5,-2842 1964.5,-2878"/>
<text text-anchor="middle" x="1936.5" y="-2856.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify(). -->
<g id="edge41" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1269.26,-3027.65C1410.71,-3031.8 1636.68,-3024.39 1816,-2953 1853.74,-2937.97 1889.46,-2907.2 1911.85,-2885.17"/>
<polygon fill="blue" stroke="blue" points="1914.34,-2887.62 1918.91,-2878.07 1909.38,-2882.69 1914.34,-2887.62"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify(). -->
<g id="node134" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().</title>
<g id="a_node134"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request_public_key: profile_key_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci_bytes: UidBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;re...">
<polygon fill="white" stroke="black" points="1964.5,-2716 1908.5,-2716 1908.5,-2680 1964.5,-2680 1964.5,-2716"/>
<text text-anchor="middle" x="1936.5" y="-2694.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify(). -->
<g id="edge58" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1276.38,-3067.92C1454.81,-3058.31 1745.8,-3030.84 1816,-2953 1850.06,-2915.23 1803.36,-2764.01 1836,-2725 1851,-2707.07 1876.6,-2700.41 1898.08,-2698.18"/>
<polygon fill="blue" stroke="blue" points="1898.51,-2701.66 1908.22,-2697.42 1897.99,-2694.68 1898.51,-2701.66"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify(). -->
<g id="node137" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().</title>
<g id="a_node137"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature: SignatureBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match poksho::verify_signature(&amp;signature, self.p...">
<polygon fill="white" stroke="black" points="1613,-2349 1557,-2349 1557,-2313 1613,-2313 1613,-2349"/>
<text text-anchor="middle" x="1585" y="-2327.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify(). -->
<g id="edge83" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1197.06,-2812.96C1241.63,-2816.13 1299.38,-2811.73 1334,-2776 1364.16,-2744.88 1336.24,-2621.53 1354,-2582 1398.74,-2482.41 1498.66,-2395.86 1550.84,-2355.38"/>
<polygon fill="blue" stroke="blue" points="1553.29,-2357.92 1559.09,-2349.05 1549.03,-2352.36 1553.29,-2357.92"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new(). -->
<g id="node136" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new().</title>
<g id="a_node136"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: profile_key_credential_request::KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: profile_key_credential_request::CiphertextWithSecretNonce, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;commitment: profile_key_commitment::Co...">
<polygon fill="white" stroke="black" points="1963.5,-2770 1909.5,-2770 1909.5,-2734 1963.5,-2734 1963.5,-2770"/>
<text text-anchor="middle" x="1936.5" y="-2748.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new(). -->
<g id="edge129" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1299.77,-3124.12C1478.99,-3117.19 1748.19,-3094.47 1816,-3021 1852.6,-2981.35 1801.48,-2820.47 1836,-2779 1851.15,-2760.79 1877.23,-2754.2 1898.89,-2752.07"/>
<polygon fill="blue" stroke="blue" points="1899.37,-2755.54 1909.1,-2751.35 1898.88,-2748.56 1899.37,-2755.54"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new(). -->
<g id="node132" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().</title>
<g id="a_node132"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_enc_key_pair: uid_encryption::KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;profile_key_enc_key_pair: profile_key_encryption::KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cr...">
<polygon fill="white" stroke="black" points="1963.5,-2392 1909.5,-2392 1909.5,-2356 1963.5,-2356 1963.5,-2392"/>
<text text-anchor="middle" x="1936.5" y="-2370.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new(). -->
<g id="edge151" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1258.83,-2713C1289.85,-2716.74 1323.08,-2720.11 1354,-2722 1558.95,-2734.53 1666.36,-2862.61 1816,-2722 1868.09,-2673.06 1790.84,-2456.39 1836,-2401 1851.07,-2382.52 1877.39,-2375.96 1899.18,-2373.92"/>
<polygon fill="blue" stroke="blue" points="1899.69,-2377.4 1909.44,-2373.25 1899.24,-2370.41 1899.69,-2377.4"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify(). -->
<g id="node130" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().</title>
<g id="a_node130"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_key_pair: credentials::KeyPair&lt;credentials::ReceiptCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_struct: ReceiptStruct, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFail...">
<polygon fill="white" stroke="black" points="1964.5,-2446 1908.5,-2446 1908.5,-2410 1964.5,-2410 1964.5,-2446"/>
<text text-anchor="middle" x="1936.5" y="-2424.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify(). -->
<g id="edge162" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1272.17,-2843.47C1466.09,-2823.85 1797.59,-2787.67 1816,-2768 1863.63,-2717.12 1791.91,-2508.98 1836,-2455 1850.79,-2436.89 1876.39,-2430.23 1897.92,-2428.05"/>
<polygon fill="blue" stroke="blue" points="1898.38,-2431.53 1908.1,-2427.31 1897.87,-2424.55 1898.38,-2431.53"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="edge163" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1001.29,-2762.06C967.07,-2757.66 935.91,-2744.23 922,-2713 912.55,-2691.79 912.55,-1898.21 922,-1877 949.07,-1816.21 1041.5,-1822.85 1094.62,-1832.33"/>
<polygon fill="blue" stroke="blue" points="1094.21,-1835.81 1104.68,-1834.24 1095.51,-1828.94 1094.21,-1835.81"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation(). -->
<g id="edge180" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1285.74,-2965.08C1303.6,-2959.43 1320.31,-2950.8 1334,-2938 1366.47,-2907.64 1328.72,-2876.57 1354,-2840 1395.52,-2779.93 1470.86,-2739.5 1523.98,-2716.92"/>
<polygon fill="blue" stroke="blue" points="1525.4,-2720.12 1533.29,-2713.05 1522.71,-2713.66 1525.4,-2720.12"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new(). -->
<g id="node135" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().</title>
<g id="a_node135"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: credentials::KeyPair&lt;credentials::ReceiptCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request_public_key: receipt_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: receipt_credential_request::...">
<polygon fill="white" stroke="black" points="1963.5,-2554 1909.5,-2554 1909.5,-2518 1963.5,-2518 1963.5,-2554"/>
<text text-anchor="middle" x="1936.5" y="-2532.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new(). -->
<g id="edge205" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1224.24,-3245.07C1262.85,-3244.3 1305.51,-3235.87 1334,-3208 1374.85,-3168.04 1319.53,-3126.57 1354,-3081 1490.39,-2900.66 1687.93,-3054.34 1816,-2868 1854.47,-2812.02 1792.99,-2615.57 1836,-2563 1851.1,-2544.55 1877.42,-2537.99 1899.2,-2535.94"/>
<polygon fill="blue" stroke="blue" points="1899.71,-2539.41 1909.46,-2535.26 1899.25,-2532.43 1899.71,-2539.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify(). -->
<g id="node127" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().</title>
<g id="a_node127"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_key_pair: credentials::KeyPair&lt;credentials::ExpiringProfileKeyCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_ciphertext: uid_encryption::Ciphertext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_enc_pub...">
<polygon fill="white" stroke="black" points="1964.5,-2662 1908.5,-2662 1908.5,-2626 1964.5,-2626 1964.5,-2662"/>
<text text-anchor="middle" x="1936.5" y="-2640.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify(). -->
<g id="edge233" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1731.84,-2676.97C1759.8,-2673.23 1788.83,-2669.16 1816,-2665 1843.57,-2660.78 1874.59,-2655.31 1898.11,-2651.01"/>
<polygon fill="blue" stroke="blue" points="1898.83,-2654.44 1908.03,-2649.18 1897.56,-2647.55 1898.83,-2654.44"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new(). -->
<g id="node129" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().</title>
<g id="a_node129"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential: credentials::ReceiptCredential, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sho: &amp;mut Sho, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credentials_system = cred...">
<polygon fill="white" stroke="black" points="1963.5,-2500 1909.5,-2500 1909.5,-2464 1963.5,-2464 1963.5,-2500"/>
<text text-anchor="middle" x="1936.5" y="-2478.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new(). -->
<g id="edge246" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1274.07,-3186.52C1296.75,-3181.06 1318,-3171.06 1334,-3154 1377.58,-3107.52 1310.01,-2914.09 1354,-2868 1496.74,-2718.46 1673.58,-2963.85 1816,-2814 1862.79,-2764.76 1792.99,-2561.57 1836,-2509 1851.1,-2490.55 1877.42,-2483.99 1899.2,-2481.94"/>
<polygon fill="blue" stroke="blue" points="1899.71,-2485.41 1909.46,-2481.26 1899.25,-2478.43 1899.71,-2485.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac(). -->
<g id="node126" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().</title>
<g id="a_node126"><a xlink:title=" &#160;&#160;&#160;fn test_mac() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// It doesn&#39;t really matter *which* credential we test here, we just want to generally know &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// we&#39;ve set things up correctly. (Also, the credentials hardcoded here ...">
<polygon fill="white" stroke="black" points="1624.5,-2630 1545.5,-2630 1545.5,-2594 1624.5,-2594 1624.5,-2630"/>
<text text-anchor="middle" x="1585" y="-2608.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_mac</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new(). -->
<g id="edge115" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1624.74,-2609.56C1692.75,-2605.28 1832.71,-2596.47 1899.06,-2592.29"/>
<polygon fill="blue" stroke="blue" points="1899.68,-2595.76 1909.44,-2591.64 1899.24,-2588.78 1899.68,-2595.76"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify(). -->
<g id="edge114" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1624.85,-2620.15C1670.73,-2629.95 1749.26,-2647.32 1816,-2665 1824.97,-2667.38 1827.08,-2668.45 1836,-2671 1856.72,-2676.92 1879.95,-2683.24 1898.75,-2688.28"/>
<polygon fill="blue" stroke="blue" points="1897.85,-2691.66 1908.42,-2690.86 1899.66,-2684.9 1897.85,-2691.66"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge49" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.92,-2642.58C1985.11,-2640.12 2011.93,-2633.66 2029,-2617 2135.98,-2512.59 2190.23,-2019.09 2202.35,-1894.58"/>
<polygon fill="blue" stroke="blue" points="2205.86,-1894.63 2203.33,-1884.34 2198.89,-1893.96 2205.86,-1894.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge72" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.89,-2589.79C1984.92,-2588.1 2013.35,-2582.08 2029,-2563 2072.06,-2510.51 2087.95,-2018.39 2091.29,-1894.3"/>
<polygon fill="blue" stroke="blue" points="2094.8,-1894.18 2091.56,-1884.1 2087.8,-1894 2094.8,-1894.18"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge104" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.81,-2481.72C1984.79,-2479.99 2013.19,-2473.95 2029,-2455 2065.3,-2411.48 2085.79,-2006.28 2090.79,-1894.46"/>
<polygon fill="blue" stroke="blue" points="2094.29,-1894.44 2091.24,-1884.29 2087.3,-1894.13 2094.29,-1894.44"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge113" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.88,-2426.55C1985.07,-2424.07 2011.88,-2417.6 2029,-2401 2178.43,-2256.11 2201.04,-1982.26 2204.42,-1894.1"/>
<polygon fill="blue" stroke="blue" points="2207.92,-1894.17 2204.75,-1884.06 2200.92,-1893.94 2207.92,-1894.17"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge137" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.78,-2857.36C1984.38,-2854.26 2010.52,-2847.54 2029,-2833 2093.17,-2782.52 2095.78,-2751.65 2121,-2674 2169.69,-2524.1 2197.39,-2020.05 2203.64,-1894.51"/>
<polygon fill="blue" stroke="blue" points="2207.15,-1894.35 2204.14,-1884.19 2200.16,-1894.01 2207.15,-1894.35"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge160" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1954.79,-2355.89C1975.92,-2332.65 2011.05,-2290.16 2029,-2247 2080.59,-2122.94 2090.02,-1959.63 2091.68,-1894.55"/>
<polygon fill="blue" stroke="blue" points="2095.18,-1894.34 2091.89,-1884.27 2088.18,-1894.19 2095.18,-1894.34"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge161" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.76,-2803.9C1984.61,-2801.08 2011.06,-2794.46 2029,-2779 2102.5,-2715.65 2094.56,-2674.36 2121,-2581 2194.45,-2321.62 2203.76,-1991.76 2204.87,-1894.31"/>
<polygon fill="blue" stroke="blue" points="2208.37,-1894.13 2204.97,-1884.1 2201.37,-1894.06 2208.37,-1894.13"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge216" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.9,-2695.51C1984.57,-2692.49 2010.72,-2685.8 2029,-2671 2095.76,-2616.92 2094.48,-2582.72 2121,-2501 2194.22,-2275.35 2203.74,-1984.83 2204.88,-1894.24"/>
<polygon fill="blue" stroke="blue" points="2208.38,-1894.24 2204.98,-1884.2 2201.38,-1894.17 2208.38,-1894.24"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge220" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.85,-2535.76C1984.86,-2534.05 2013.28,-2528.02 2029,-2509 2068.67,-2461 2086.92,-2012.44 2091.06,-1894.37"/>
<polygon fill="blue" stroke="blue" points="2094.56,-1894.41 2091.41,-1884.3 2087.57,-1894.17 2094.56,-1894.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge236" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.55,-2751.89C1984.67,-2750.29 2013.41,-2744.34 2029,-2725 2082.22,-2658.98 2090.59,-2035.5 2091.81,-1894.33"/>
<polygon fill="blue" stroke="blue" points="2095.31,-1894.32 2091.89,-1884.29 2088.31,-1894.26 2095.31,-1894.32"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature(). -->
<g id="edge111" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1613.3,-2333.07C1657.91,-2335.32 1748.22,-2335.12 1816,-2304 1857.39,-2285 1894.12,-2246.18 1915.6,-2220.12"/>
<polygon fill="blue" stroke="blue" points="1918.47,-2222.13 1922.02,-2212.15 1913.02,-2217.74 1918.47,-2222.13"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature(). -->
<g id="node138" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().</title>
<g id="a_node138"><a xlink:title=" &#160;&#160;&#160;fn test_signature() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let group_key = TEST_ARRAY_32; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new(b&#39; Test_Signature&#39; , &amp;group_key); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let key_pair = KeyPair::generate(&amp;mut sho); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Test s...">
<polygon fill="white" stroke="black" points="1190.5,-2322 1075.5,-2322 1075.5,-2286 1190.5,-2286 1190.5,-2322"/>
<text text-anchor="middle" x="1133" y="-2300.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify(). -->
<g id="edge118" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1190.54,-2307.39C1283.76,-2312.99 1467.27,-2324 1546.31,-2328.74"/>
<polygon fill="blue" stroke="blue" points="1546.56,-2332.26 1556.75,-2329.37 1546.98,-2325.27 1546.56,-2332.26"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign(). -->
<g id="edge117" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1190.54,-2300.61C1284.21,-2294.99 1469.04,-2283.9 1547.45,-2279.19"/>
<polygon fill="blue" stroke="blue" points="1548.02,-2282.67 1557.79,-2278.57 1547.6,-2275.68 1548.02,-2282.67"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/sign(). -->
<g id="edge145" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1612.22,-2282.13C1659.33,-2289.72 1758.72,-2298.03 1816,-2247 1843.37,-2222.62 1810.35,-2193.17 1836,-2167 1852.47,-2150.19 1878.27,-2143.53 1899.47,-2141.02"/>
<polygon fill="blue" stroke="blue" points="1899.81,-2144.5 1909.45,-2140.1 1899.17,-2137.53 1899.81,-2144.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key(). -->
<g id="node140" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().</title>
<g id="a_node140"><a xlink:title="fn test_profile_key_credential_only_verifying_one_encryption_key() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_a...">
<polygon fill="white" stroke="black" points="1808,-1315 1362,-1315 1362,-1279 1808,-1279 1808,-1315"/>
<text text-anchor="middle" x="1585" y="-1293.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_credential_only_verifying_one_encryption_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge33" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1747.45,-1315.02C1804.26,-1321.36 1862.96,-1327.91 1899.34,-1331.96"/>
<polygon fill="blue" stroke="blue" points="1899.11,-1335.46 1909.44,-1333.09 1899.89,-1328.5 1899.11,-1335.46"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge34" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1808.33,-1287.46C1843.12,-1285.96 1875.19,-1284.59 1898.42,-1283.59"/>
<polygon fill="blue" stroke="blue" points="1898.61,-1287.09 1908.45,-1283.16 1898.31,-1280.09 1898.61,-1287.09"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge35" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1803.93,-1315.08C1808.11,-1317.82 1812.14,-1320.78 1816,-1324 1839.22,-1343.35 1814.57,-1367.69 1836,-1389 1852.42,-1405.32 1877.38,-1412.82 1898.19,-1416.24"/>
<polygon fill="blue" stroke="blue" points="1897.93,-1419.74 1908.32,-1417.64 1898.9,-1412.8 1897.93,-1419.74"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge32" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1805.5,-1315.1C1809.15,-1317.84 1812.66,-1320.81 1816,-1324 1855.73,-1361.96 1799.19,-1405.21 1836,-1446 1849.99,-1461.5 1871.89,-1468.48 1891.59,-1471.49"/>
<polygon fill="blue" stroke="blue" points="1891.29,-1474.98 1901.64,-1472.72 1892.14,-1468.03 1891.29,-1474.98"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key(). -->
<g id="node141" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().</title>
<g id="a_node141"><a xlink:title="fn test_mac_generic_without_verifying_encryption_key() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1772.5,-1531 1397.5,-1531 1397.5,-1495 1772.5,-1495 1772.5,-1531"/>
<text text-anchor="middle" x="1585" y="-1509.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_mac_generic_without_verifying_encryption_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge53" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1769.51,-1531.1C1787.24,-1539.5 1803.32,-1550.83 1816,-1566 1874.52,-1635.97 1778.83,-1904.91 1836,-1976 1850.75,-1994.34 1876.59,-2000.96 1898.25,-2003.07"/>
<polygon fill="blue" stroke="blue" points="1898.26,-2006.58 1908.47,-2003.77 1898.74,-1999.59 1898.26,-2006.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge52" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1769.11,-1531.07C1786.98,-1539.47 1803.19,-1550.81 1816,-1566 1866.64,-1626.07 1787.38,-1857.28 1836,-1919 1850.94,-1937.96 1877.45,-1945.3 1899.35,-1947.98"/>
<polygon fill="blue" stroke="blue" points="1899.05,-1951.47 1909.34,-1948.93 1899.72,-1944.5 1899.05,-1951.47"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge51" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1772.51,-1507.6C1787.99,-1502.34 1802.75,-1495.3 1816,-1486 1832.27,-1474.58 1820.62,-1458.59 1836,-1446 1853.45,-1431.71 1877.84,-1424.95 1898.1,-1421.76"/>
<polygon fill="blue" stroke="blue" points="1898.81,-1425.2 1908.26,-1420.4 1897.88,-1418.26 1898.81,-1425.2"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge50" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1743.37,-1494.99C1797.69,-1488.77 1854.27,-1482.3 1891.84,-1478"/>
<polygon fill="blue" stroke="blue" points="1892.38,-1481.46 1901.92,-1476.84 1891.59,-1474.5 1892.38,-1481.46"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point(). -->
<g id="node142" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().</title>
<g id="a_node142"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn as_point(&amp;self) &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.opaque_id &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1622,-1423 1548,-1423 1548,-1387 1622,-1387 1622,-1423"/>
<text text-anchor="middle" x="1585" y="-1401.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_point</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge76" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.31,-1397.57C1672.57,-1389.57 1763.1,-1383.8 1816,-1432 1847.57,-1460.77 1807.81,-1493.91 1836,-1526 1896.03,-1594.32 1957.58,-1537.69 2029,-1594 2115.07,-1661.86 2172.09,-1784.02 2194.41,-1838.49"/>
<polygon fill="blue" stroke="blue" points="2191.19,-1839.87 2198.17,-1847.84 2197.69,-1837.26 2191.19,-1839.87"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge75" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.05,-1397.09C1672.85,-1388.28 1764.96,-1381.26 1816,-1432 1841.73,-1457.57 1820.58,-1561.17 1836,-1594 1887.64,-1703.99 2000.84,-1798.69 2057.81,-1841.56"/>
<polygon fill="blue" stroke="blue" points="2056.01,-1844.58 2066.13,-1847.74 2060.19,-1838.97 2056.01,-1844.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge77" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.28,-1403.22C1667.96,-1400.42 1748.63,-1393.59 1816,-1378 1844.87,-1371.32 1876.46,-1360.03 1899.9,-1350.84"/>
<polygon fill="blue" stroke="blue" points="1901.42,-1354.01 1909.42,-1347.05 1898.83,-1347.5 1901.42,-1354.01"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge79" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.26,-1411.95C1672.03,-1419.27 1761.55,-1424.12 1816,-1378 1840.36,-1357.36 1813.23,-1331.38 1836,-1309 1852.38,-1292.9 1877.34,-1286.16 1898.16,-1283.43"/>
<polygon fill="blue" stroke="blue" points="1898.72,-1286.89 1908.3,-1282.37 1897.99,-1279.93 1898.72,-1286.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge74" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.09,-1406.45C1688.8,-1409.12 1830.78,-1414.81 1898.31,-1417.51"/>
<polygon fill="blue" stroke="blue" points="1898.36,-1421.01 1908.49,-1417.92 1898.64,-1414.02 1898.36,-1421.01"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge78" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.36,-1403.87C1668.81,-1403.62 1751,-1407.25 1816,-1432 1826.14,-1435.86 1826.17,-1441.4 1836,-1446 1853.48,-1454.18 1873.89,-1460.26 1891.66,-1464.56"/>
<polygon fill="blue" stroke="blue" points="1891.24,-1468.06 1901.77,-1466.89 1892.81,-1461.23 1891.24,-1468.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic(). -->
<g id="node143" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().</title>
<g id="a_node143"><a xlink:title="fn test_mac_generic() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;&#160;&#160;let label = b&#39; 20221221_AuthCre...">
<polygon fill="white" stroke="black" points="1653.5,-1477 1516.5,-1477 1516.5,-1441 1653.5,-1441 1653.5,-1477"/>
<text text-anchor="middle" x="1585" y="-1455.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_mac_generic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge170" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1653.73,-1445.94C1705.95,-1440.18 1775.83,-1442.65 1816,-1486 1853.04,-1525.97 1802.02,-1933.4 1836,-1976 1850.68,-1994.4 1876.52,-2001.02 1898.2,-2003.11"/>
<polygon fill="blue" stroke="blue" points="1898.22,-2006.62 1908.43,-2003.8 1898.69,-1999.63 1898.22,-2006.62"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge167" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1653.67,-1446C1705.86,-1440.27 1775.71,-1442.76 1816,-1486 1848.83,-1521.24 1806.39,-1881.01 1836,-1919 1850.84,-1938.04 1877.35,-1945.37 1899.28,-1948.03"/>
<polygon fill="blue" stroke="blue" points="1899,-1951.52 1909.29,-1948.98 1899.66,-1944.56 1899,-1951.52"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge169" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1653.8,-1451.24C1726.68,-1442.9 1839.89,-1429.94 1898.12,-1423.28"/>
<polygon fill="blue" stroke="blue" points="1898.79,-1426.72 1908.33,-1422.11 1897.99,-1419.77 1898.79,-1426.72"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge168" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1653.8,-1461.72C1724.03,-1464.53 1831.69,-1468.84 1891.53,-1471.24"/>
<polygon fill="blue" stroke="blue" points="1891.64,-1474.75 1901.78,-1471.65 1891.92,-1467.75 1891.64,-1474.75"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential(). -->
<g id="node144" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().</title>
<g id="a_node144"><a xlink:title="fn test_profile_key_credential() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;&#160;let blinding_keypair ...">
<polygon fill="white" stroke="black" points="1684.5,-1369 1485.5,-1369 1485.5,-1333 1684.5,-1333 1684.5,-1369"/>
<text text-anchor="middle" x="1585" y="-1347.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge188" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1684.75,-1346.76C1756.36,-1343.69 1849.12,-1339.71 1899.34,-1337.55"/>
<polygon fill="blue" stroke="blue" points="1899.55,-1341.05 1909.39,-1337.12 1899.25,-1334.05 1899.55,-1341.05"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge191" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1684.74,-1350.71C1726.47,-1347.74 1774.84,-1340.45 1816,-1324 1826.32,-1319.88 1826.02,-1313.88 1836,-1309 1855.63,-1299.41 1879.16,-1292.83 1898.41,-1288.57"/>
<polygon fill="blue" stroke="blue" points="1899.26,-1291.97 1908.33,-1286.49 1897.82,-1285.11 1899.26,-1291.97"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge190" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1684.57,-1354.22C1725.93,-1357.7 1774.07,-1364.58 1816,-1378 1825.66,-1381.09 1826.65,-1385.07 1836,-1389 1856.16,-1397.47 1879.54,-1404.65 1898.57,-1409.85"/>
<polygon fill="blue" stroke="blue" points="1897.79,-1413.27 1908.36,-1412.47 1899.6,-1406.51 1897.79,-1413.27"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge189" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1684.57,-1339.41C1729.35,-1339.49 1780.2,-1347.8 1816,-1378 1840.08,-1398.31 1813.49,-1423.96 1836,-1446 1850.74,-1460.44 1872.39,-1467.35 1891.72,-1470.58"/>
<polygon fill="blue" stroke="blue" points="1891.49,-1474.08 1901.87,-1471.99 1892.45,-1467.15 1891.49,-1474.08"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response(). -->
<g id="node145" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().</title>
<g id="a_node145"><a xlink:title="fn test_backup_auth_request_response() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: Randomne...">
<polygon fill="white" stroke="black" points="747.5,-365 480.5,-365 480.5,-329 747.5,-329 747.5,-365"/>
<text text-anchor="middle" x="614" y="-343.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_backup_auth_request_response</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge138" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.84,-337.08C806.36,-340.23 871,-355.34 912,-400 945.05,-436 898.2,-583.71 932,-619 971.77,-660.52 1042.73,-659.91 1088.55,-654.11"/>
<polygon fill="blue" stroke="blue" points="1089.07,-657.58 1098.49,-652.73 1088.1,-650.64 1089.07,-657.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge141" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.52,-356.82C954.49,-372.22 1331.3,-400.57 1334,-403 1370.29,-435.65 1318.36,-477.64 1354,-511 1406.34,-559.99 1497.36,-553.83 1547.78,-545.58"/>
<polygon fill="blue" stroke="blue" points="1548.64,-548.98 1557.89,-543.81 1547.44,-542.09 1548.64,-548.98"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge140" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.63,-337.65C805.92,-340.96 870.44,-356.04 912,-400 962.75,-453.68 880.12,-512.41 932,-565 974.23,-607.81 1049.73,-605.35 1094.91,-599.08"/>
<polygon fill="blue" stroke="blue" points="1095.52,-602.53 1104.89,-597.57 1094.47,-595.61 1095.52,-602.53"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge139" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.78,-345.02C924.29,-343.46 1226.46,-344.83 1334,-370 1413.42,-388.59 1498.27,-433.2 1545.87,-460.78"/>
<polygon fill="blue" stroke="blue" points="1544.2,-463.86 1554.6,-465.89 1547.74,-457.82 1544.2,-463.86"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response(). -->
<g id="node146" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().</title>
<g id="a_node146"><a xlink:title="fn test_create_call_link_request_response() { &#160;&#160;&#160;&#160;let randomness0: RandomnessBytes = [0x42u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: Ran...">
<polygon fill="white" stroke="black" points="1274.5,-1443 991.5,-1443 991.5,-1407 1274.5,-1407 1274.5,-1443"/>
<text text-anchor="middle" x="1133" y="-1421.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_create_call_link_request_response</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="edge101" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1274.51,-1421.45C1296.8,-1414.99 1317.8,-1404.51 1334,-1388 1372.17,-1349.09 1316.68,-1306.73 1354,-1267 1404.15,-1213.6 1496.43,-1208.94 1547.54,-1210.98"/>
<polygon fill="blue" stroke="blue" points="1547.62,-1214.49 1557.79,-1211.51 1547.98,-1207.5 1547.62,-1214.49"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present(). -->
<g id="edge100" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1177.66,-1406.93C1224.67,-1385.01 1297.59,-1343.34 1334,-1283 1368.75,-1225.42 1306.07,-1180.18 1354,-1133 1402.75,-1085.01 1488.31,-1088.89 1540.2,-1096.88"/>
<polygon fill="blue" stroke="blue" points="1539.68,-1100.34 1550.11,-1098.52 1540.82,-1093.44 1539.68,-1100.34"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="edge102" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1227.11,-1406.93C1266.04,-1394.58 1308.16,-1374.03 1334,-1340 1375.47,-1285.38 1305.19,-1235.17 1354,-1187 1403.12,-1138.52 1489.79,-1142.92 1541.56,-1151.08"/>
<polygon fill="blue" stroke="blue" points="1541.3,-1154.58 1551.74,-1152.8 1542.47,-1147.68 1541.3,-1154.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify(). -->
<g id="edge103" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1157.89,-1406.96C1201.03,-1372.92 1291.39,-1294.63 1334,-1206 1358.76,-1154.5 1312.81,-1118.6 1354,-1079 1405.38,-1029.6 1495.9,-1035.67 1546.71,-1044.08"/>
<polygon fill="blue" stroke="blue" points="1546.16,-1047.53 1556.62,-1045.83 1547.38,-1040.64 1546.16,-1047.53"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity(). -->
<g id="node147" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().</title>
<g id="a_node147"><a xlink:title="fn test_auth_credential_enforces_timestamp_granularity() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;&#160;// cli...">
<polygon fill="white" stroke="black" points="1326,-1551 940,-1551 940,-1515 1326,-1515 1326,-1551"/>
<text text-anchor="middle" x="1133" y="-1529.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_auth_credential_enforces_timestamp_granularity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="edge203" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1286.23,-1551C1302.42,-1553.68 1318.59,-1556.67 1334,-1560 1343.07,-1561.96 1344.92,-1564.06 1354,-1566 1405.8,-1577.07 1465.1,-1584.69 1510.51,-1589.47"/>
<polygon fill="blue" stroke="blue" points="1510.26,-1592.97 1520.57,-1590.51 1510.98,-1586 1510.26,-1592.97"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="edge204" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1321.76,-1551.02C1326.02,-1553.75 1330.11,-1556.73 1334,-1560 1356.49,-1578.9 1331.35,-1604.3 1354,-1623 1406.79,-1666.58 1491.1,-1664.13 1541.66,-1657.61"/>
<polygon fill="blue" stroke="blue" points="1542.18,-1661.07 1551.6,-1656.21 1541.21,-1654.13 1542.18,-1661.07"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential(). -->
<g id="node148" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().</title>
<g id="a_node148"><a xlink:title="fn test_auth_credential() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: RandomnessBytes = [0x...">
<polygon fill="white" stroke="black" points="1211,-1605 1055,-1605 1055,-1569 1211,-1569 1211,-1605"/>
<text text-anchor="middle" x="1133" y="-1583.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_auth_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="edge248" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1211.1,-1588.54C1295.13,-1590.22 1428.55,-1592.89 1510.95,-1594.54"/>
<polygon fill="blue" stroke="blue" points="1510.92,-1598.04 1520.98,-1594.74 1511.06,-1591.04 1510.92,-1598.04"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="edge250" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1211.25,-1600.52C1253.37,-1607.67 1306.48,-1616.33 1354,-1623 1419.38,-1632.18 1495.52,-1640.69 1541.71,-1645.62"/>
<polygon fill="blue" stroke="blue" points="1541.63,-1649.13 1551.94,-1646.7 1542.37,-1642.17 1541.63,-1649.13"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify(). -->
<g id="edge251" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1169.56,-1605.08C1212.22,-1625.93 1286.47,-1659.57 1354,-1677 1420.45,-1694.15 1500.55,-1700.43 1546.55,-1702.72"/>
<polygon fill="blue" stroke="blue" points="1546.5,-1706.22 1556.65,-1703.18 1546.82,-1699.23 1546.5,-1706.22"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present(). -->
<g id="edge249" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1154.36,-1605.13C1191.21,-1636.76 1272.69,-1701.48 1354,-1731 1415.84,-1753.45 1492.59,-1758.23 1539.93,-1758.76"/>
<polygon fill="blue" stroke="blue" points="1540.12,-1762.26 1550.14,-1758.81 1540.16,-1755.26 1540.12,-1762.26"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity(). -->
<g id="node149" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().</title>
<g id="a_node149"><a xlink:title="fn test_create_call_link_enforces_timestamp_granularity() { &#160;&#160;&#160;&#160;let randomness0: RandomnessBytes = [0x42u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let ra...">
<polygon fill="white" stroke="black" points="1325,-1497 941,-1497 941,-1461 1325,-1461 1325,-1497"/>
<text text-anchor="middle" x="1133" y="-1475.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_create_call_link_enforces_timestamp_granularity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="edge253" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1324.32,-1460.7C1327.71,-1458.03 1330.94,-1455.14 1334,-1452 1391.7,-1392.75 1299.1,-1328.85 1354,-1267 1402.87,-1211.96 1496.39,-1208.06 1547.85,-1210.64"/>
<polygon fill="blue" stroke="blue" points="1547.66,-1214.13 1557.86,-1211.25 1548.09,-1207.15 1547.66,-1214.13"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="edge252" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1324.46,-1460.84C1327.81,-1458.13 1331,-1455.19 1334,-1452 1374.51,-1409.03 1313.12,-1229.62 1354,-1187 1402.01,-1136.95 1489.75,-1142.09 1541.88,-1150.77"/>
<polygon fill="blue" stroke="blue" points="1541.35,-1154.23 1551.81,-1152.54 1542.57,-1147.34 1541.35,-1154.23"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group(). -->
<g id="node150" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().</title>
<g id="a_node150"><a xlink:title="fn test_single_member_group() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: RandomnessBytes =...">
<polygon fill="white" stroke="black" points="715.5,-801 512.5,-801 512.5,-765 715.5,-765 715.5,-801"/>
<text text-anchor="middle" x="614" y="-779.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_single_member_group</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge7" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M715.6,-779.3C832.03,-775.02 1017.74,-768.2 1095.69,-765.33"/>
<polygon fill="blue" stroke="blue" points="1096.09,-768.82 1105.95,-764.96 1095.83,-761.83 1096.09,-768.82"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge6" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M715.6,-789.81C806.35,-795.95 939.18,-804.95 1030.27,-811.11"/>
<polygon fill="blue" stroke="blue" points="1030.12,-814.61 1040.33,-811.79 1030.59,-807.63 1030.12,-814.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations(). -->
<g id="node151" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().</title>
<g id="a_node151"><a xlink:title="fn test_client_rejects_bad_expirations() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: Random...">
<polygon fill="white" stroke="black" points="742.5,-747 485.5,-747 485.5,-711 742.5,-711 742.5,-747"/>
<text text-anchor="middle" x="614" y="-725.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_client_rejects_bad_expirations</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge64" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M742.8,-737.65C859.13,-745.53 1023.37,-756.65 1095.56,-761.53"/>
<polygon fill="blue" stroke="blue" points="1095.72,-765.05 1105.93,-762.24 1096.19,-758.07 1095.72,-765.05"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge65" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M742.67,-715.25C798.58,-715.33 862.56,-724.23 912,-756 927.07,-765.69 917.14,-780.99 932,-791 960.51,-810.21 996.53,-818.66 1030.13,-821.78"/>
<polygon fill="blue" stroke="blue" points="1030.23,-825.29 1040.47,-822.58 1030.77,-818.32 1030.23,-825.29"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement(). -->
<g id="node152" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().</title>
<g id="a_node152"><a xlink:title="fn test_endorsement() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: RandomnessBytes = [0x45u8...">
<polygon fill="white" stroke="black" points="685,-855 543,-855 543,-819 685,-819 685,-855"/>
<text text-anchor="middle" x="614" y="-833.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_endorsement</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge224" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M685.2,-843.26C747.55,-845.95 839.72,-842.73 912,-810 923.17,-804.94 920.94,-796.3 932,-791 984.9,-765.64 1054.15,-761.91 1095.74,-762.35"/>
<polygon fill="blue" stroke="blue" points="1095.87,-765.86 1105.94,-762.55 1096.01,-758.86 1095.87,-765.86"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge223" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M685.26,-834.42C774.24,-831.15 928.2,-825.49 1030.08,-821.75"/>
<polygon fill="blue" stroke="blue" points="1030.22,-825.24 1040.08,-821.38 1029.96,-818.25 1030.22,-825.24"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts(). -->
<g id="edge222" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M685.26,-841.76C773.97,-847.76 927.27,-858.14 1029.16,-865.04"/>
<polygon fill="blue" stroke="blue" points="1028.95,-868.53 1039.17,-865.72 1029.42,-861.55 1028.95,-868.53"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify(). -->
<g id="node153" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().</title>
<g id="a_node153"><a xlink:title="fn test_profile_key_credential_presentation_v1_does_not_verify() { &#160;&#160;&#160;&#160;// Originally from test_integration_profile. &#160;&#160;&#160;&#160;// SERVER &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(z...">
<polygon fill="white" stroke="black" points="829.5,-3023 398.5,-3023 398.5,-2987 829.5,-2987 829.5,-3023"/>
<text text-anchor="middle" x="614" y="-3001.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_credential_presentation_v1_does_not_verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="edge30" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M829.76,-2988.38C876.83,-2984.74 925.9,-2980.95 970.47,-2977.5"/>
<polygon fill="blue" stroke="blue" points="970.8,-2980.98 980.5,-2976.72 970.26,-2974 970.8,-2980.98"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile(). -->
<g id="node154" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().</title>
<g id="a_node154"><a xlink:title="fn test_integration_expiring_profile() { &#160;&#160;&#160;&#160;// SERVER &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params...">
<polygon fill="white" stroke="black" points="733.5,-3077 494.5,-3077 494.5,-3041 733.5,-3041 733.5,-3077"/>
<text text-anchor="middle" x="614" y="-3055.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_integration_expiring_profile</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="edge71" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M733.61,-3049.82C808.8,-3044.01 906.58,-3036.44 986.46,-3030.26"/>
<polygon fill="blue" stroke="blue" points="986.9,-3033.74 996.6,-3029.48 986.36,-3026.76 986.9,-3033.74"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge67" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M733.61,-3062.21C806.51,-3064.19 900.64,-3066.73 979.1,-3068.86"/>
<polygon fill="blue" stroke="blue" points="979.48,-3072.37 989.57,-3069.14 979.67,-3065.37 979.48,-3072.37"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge68" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M733.61,-3074.6C808.23,-3084.41 905.1,-3097.16 984.63,-3107.62"/>
<polygon fill="blue" stroke="blue" points="984.37,-3111.11 994.74,-3108.95 985.28,-3104.17 984.37,-3111.11"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="edge69" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M694.04,-3077.01C761.75,-3087.31 856.82,-3088.65 912,-3032 960.17,-2982.55 884.92,-2772.49 932,-2722 934.07,-2719.78 936.23,-2717.68 938.48,-2715.69"/>
<polygon fill="blue" stroke="blue" points="940.77,-2718.33 946.4,-2709.36 936.4,-2712.87 940.77,-2718.33"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="edge70" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M733.59,-3073.88C791.93,-3075.18 860.58,-3067.1 912,-3032 928.42,-3020.8 915.83,-3003.56 932,-2992 943.75,-2983.6 956.91,-2977.2 970.71,-2972.38"/>
<polygon fill="blue" stroke="blue" points="971.9,-2975.68 980.36,-2969.29 969.77,-2969.01 971.9,-2975.68"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs(). -->
<g id="node155" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().</title>
<g id="a_node155"><a xlink:title="fn test_server_sigs() { &#160;&#160;&#160;&#160;let server_secret_params = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;zkgroup::api::server_params::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params.ge...">
<polygon fill="white" stroke="black" points="678,-2969 550,-2969 550,-2933 678,-2933 678,-2969"/>
<text text-anchor="middle" x="614" y="-2947.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_sigs</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign(). -->
<g id="edge128" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M678.14,-2946.12C787.52,-2937.65 1008.88,-2920.53 1095.8,-2913.8"/>
<polygon fill="blue" stroke="blue" points="1096.25,-2917.28 1105.95,-2913.02 1095.71,-2910.3 1096.25,-2917.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature(). -->
<g id="edge127" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M678.2,-2964.93C744.78,-2975.61 848.59,-2980.28 912,-2924 943.94,-2895.65 900.68,-2859.04 932,-2830 965.35,-2799.08 1016.29,-2792.57 1058.42,-2793.67"/>
<polygon fill="blue" stroke="blue" points="1058.51,-2797.18 1068.65,-2794.09 1058.8,-2790.18 1058.51,-2797.18"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc(). -->
<g id="node156" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().</title>
<g id="a_node156"><a xlink:title="fn test_integration_auth_zkc() { &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params.get_public_params(); ...">
<polygon fill="white" stroke="black" points="711,-2915 517,-2915 517,-2879 711,-2879 711,-2915"/>
<text text-anchor="middle" x="614" y="-2893.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_integration_auth_zkc</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="edge149" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M697.41,-2915.02C765.36,-2924.54 858.92,-2924.32 912,-2867 943.6,-2832.87 900.97,-2064.65 932,-2030 962.83,-1995.56 1015,-1989.45 1058.33,-1991.61"/>
<polygon fill="blue" stroke="blue" points="1058.35,-1995.12 1068.56,-1992.28 1058.81,-1988.14 1058.35,-1995.12"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="edge147" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M697.11,-2915.01C765.12,-2924.6 858.91,-2924.49 912,-2867 947.63,-2828.42 897.03,-1961.17 932,-1922 970.4,-1878.99 1042.07,-1880.12 1088.37,-1886.41"/>
<polygon fill="blue" stroke="blue" points="1088.01,-1889.9 1098.42,-1887.91 1089.04,-1882.97 1088.01,-1889.9"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="edge150" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M697.96,-2915.01C765.79,-2924.35 858.86,-2923.91 912,-2867 959.04,-2816.62 903.79,-2309.89 932,-2247 965.77,-2171.72 1044.66,-2111.71 1092.65,-2080.52"/>
<polygon fill="blue" stroke="blue" points="1094.7,-2083.37 1101.24,-2075.03 1090.93,-2077.47 1094.7,-2083.37"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="edge146" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M697.13,-2915.03C765.14,-2924.62 858.94,-2924.52 912,-2867 949.64,-2826.2 895.05,-1909.43 932,-1868 972.13,-1823 1048.69,-1826.3 1094.56,-1833.3"/>
<polygon fill="blue" stroke="blue" points="1094.25,-1836.79 1104.69,-1834.98 1095.4,-1829.89 1094.25,-1836.79"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation(). -->
<g id="edge148" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M711.04,-2913.98C775.56,-2919.62 858.3,-2914.82 912,-2867 942.92,-2839.46 901.54,-2804.05 932,-2776 948.61,-2760.7 969.54,-2751.39 991.56,-2746.03"/>
<polygon fill="blue" stroke="blue" points="992.36,-2749.44 1001.39,-2743.9 990.88,-2742.6 992.36,-2749.44"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response(). -->
<g id="node157" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().</title>
<g id="a_node157"><a xlink:title="fn test_request_response() { &#160;&#160;&#160;&#160;let mut sho = Sho::new(b&#39; Test_Receipt_Credential_Request&#39; , b&#39; &#39; ); &#160;&#160;&#160;&#160;&#160;// client receives in response to initial request &#160;&#160;&#160;&#160;let receipt_expiration_time: Timestamp ...">
<polygon fill="white" stroke="black" points="700,-2778 528,-2778 528,-2742 700,-2742 700,-2778"/>
<text text-anchor="middle" x="614" y="-2756.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_request_response</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new(). -->
<g id="edge97" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M700.15,-2776.97C766.72,-2784.89 856.92,-2783.01 912,-2730 958.24,-2685.5 885.62,-2631.35 932,-2587 996.85,-2524.98 1258.29,-2597.17 1334,-2549 1348.79,-2539.59 1339.03,-2524.13 1354,-2515 1445.77,-2459 1786.29,-2473.26 1899,-2479.7"/>
<polygon fill="blue" stroke="blue" points="1899,-2483.21 1909.19,-2480.3 1899.41,-2476.22 1899,-2483.21"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify(). -->
<g id="edge96" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M700.22,-2777.35C767.07,-2785.57 857.6,-2783.89 912,-2730 969.5,-2673.04 873.62,-2605.06 932,-2549 996.59,-2486.97 1261.99,-2574.23 1334,-2521 1353.91,-2506.28 1334.09,-2483.73 1354,-2469 1522.55,-2344.29 1799.12,-2394.57 1898.5,-2418.29"/>
<polygon fill="blue" stroke="blue" points="1897.82,-2421.73 1908.37,-2420.7 1899.48,-2414.93 1897.82,-2421.73"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify(). -->
<g id="edge95" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M700.3,-2774.74C765.41,-2780.96 853.58,-2777.88 912,-2730 935.38,-2710.84 908.61,-2684.14 932,-2665 1070.96,-2551.3 1187.59,-2728.93 1334,-2625 1351.19,-2612.8 1336.23,-2593.33 1354,-2582 1397.28,-2554.4 1777.91,-2547.58 1816,-2582 1848.65,-2611.5 1807.54,-2745.44 1836,-2779 1851.12,-2796.83 1876.72,-2803.49 1898.16,-2805.74"/>
<polygon fill="blue" stroke="blue" points="1898.05,-2809.25 1908.29,-2806.52 1898.59,-2802.27 1898.05,-2809.25"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new(). -->
<g id="edge98" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M700.13,-2776.3C766.23,-2783.71 855.82,-2781.46 912,-2730 947.03,-2697.91 896.87,-2656.98 932,-2625 998.36,-2564.6 1257.98,-2634.67 1334,-2587 1348.53,-2577.89 1339.19,-2562.65 1354,-2554 1446.74,-2499.86 1786.62,-2523.24 1899.09,-2532.71"/>
<polygon fill="blue" stroke="blue" points="1898.98,-2536.22 1909.25,-2533.58 1899.58,-2529.24 1898.98,-2536.22"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api(). -->
<g id="node158" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().</title>
<g id="a_node158"><a xlink:title="fn test_api() { &#160;&#160;&#160;&#160;let randomness0: RandomnessBytes = [0x42u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOM...">
<polygon fill="white" stroke="black" points="649.5,-2832 578.5,-2832 578.5,-2796 649.5,-2796 649.5,-2832"/>
<text text-anchor="middle" x="614" y="-2810.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_api</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="edge155" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M649.93,-2808C713.08,-2799.38 845.85,-2791.95 912,-2867 941.06,-2899.97 902.25,-3229.65 932,-3262 955.53,-3287.58 990.86,-3297.39 1025.31,-3299.81"/>
<polygon fill="blue" stroke="blue" points="1025.31,-3303.32 1035.47,-3300.32 1025.66,-3296.33 1025.31,-3303.32"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation(). -->
<g id="edge156" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M649.72,-2816.89C716.99,-2822.48 868.57,-2835.09 983.97,-2844.69"/>
<polygon fill="blue" stroke="blue" points="983.71,-2848.18 993.97,-2845.52 984.29,-2841.2 983.71,-2848.18"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="edge154" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M649.87,-2808.05C712.93,-2799.52 845.56,-2792.21 912,-2867 962.42,-2923.75 880.39,-3152.33 932,-3208 957.04,-3235.01 995.24,-3244.39 1031.56,-3246.06"/>
<polygon fill="blue" stroke="blue" points="1031.66,-3249.57 1041.75,-3246.34 1031.85,-3242.57 1031.66,-3249.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="edge157" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M649.79,-2808.12C712.72,-2799.71 845.15,-2792.58 912,-2867 954.72,-2914.56 888.28,-3107.36 932,-3154 945.68,-3168.6 963.21,-3178.03 982.19,-3183.86"/>
<polygon fill="blue" stroke="blue" points="981.36,-3187.26 991.92,-3186.52 983.2,-3180.51 981.36,-3187.26"/>
</g>
</g>
</svg>
