<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: function_subgraph Pages: 1 -->
<svg width="3114pt" height="7587pt"
 viewBox="0.00 0.00 3114.00 7587.07" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 7583.07)">
<title>function_subgraph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-7583.07 3110,-7583.07 3110,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="2365,-5818.78 2365,-6001.78 3098,-6001.78 3098,-5818.78 2365,-5818.78"/>
<text text-anchor="middle" x="2731.5" y="-5986.58" font-family="Helvetica,sans-Serif" font-size="14.00">scalar.rs</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="lightblue" stroke="lightblue" points="1313.5,-4272.78 1313.5,-4401.78 1462.5,-4401.78 1462.5,-4272.78 1313.5,-4272.78"/>
<text text-anchor="middle" x="1388" y="-4386.58" font-family="Helvetica,sans-Serif" font-size="14.00">usernames.rs</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_2</title>
<polygon fill="lightblue" stroke="lightblue" points="119,-1411.78 119,-3322.78 715,-3322.78 715,-1411.78 119,-1411.78"/>
<text text-anchor="middle" x="417" y="-3307.58" font-family="Helvetica,sans-Serif" font-size="14.00">zkgroup.rs</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_3</title>
<polygon fill="lightblue" stroke="lightblue" points="1298,-6283.78 1298,-6452.78 2345,-6452.78 2345,-6283.78 1298,-6283.78"/>
<text text-anchor="middle" x="1821.5" y="-6437.58" font-family="Helvetica,sans-Serif" font-size="14.00">curve.rs</text>
</g>
<g id="clust5" class="cluster">
<title>cluster_4</title>
<polygon fill="lightblue" stroke="lightblue" points="2079.5,-6042.78 2079.5,-6171.78 2539,-6171.78 2539,-6042.78 2079.5,-6042.78"/>
<text text-anchor="middle" x="2309.25" y="-6156.58" font-family="Helvetica,sans-Serif" font-size="14.00">curve25519.rs</text>
</g>
<g id="clust6" class="cluster">
<title>cluster_5</title>
<polygon fill="lightblue" stroke="lightblue" points="1735.5,-5822.78 1735.5,-5897.78 1896.5,-5897.78 1896.5,-5822.78 1735.5,-5822.78"/>
<text text-anchor="middle" x="1816" y="-5882.58" font-family="Helvetica,sans-Serif" font-size="14.00">verify.rs</text>
</g>
<g id="clust7" class="cluster">
<title>cluster_6</title>
<polygon fill="lightblue" stroke="lightblue" points="1717,-5905.78 1717,-6034.78 2243.5,-6034.78 2243.5,-5905.78 1717,-5905.78"/>
<text text-anchor="middle" x="1980.25" y="-6019.58" font-family="Helvetica,sans-Serif" font-size="14.00">vrf.rs</text>
</g>
<g id="clust8" class="cluster">
<title>cluster_7</title>
<polygon fill="lightblue" stroke="lightblue" points="322,-3604.78 322,-3679.78 512,-3679.78 512,-3604.78 322,-3604.78"/>
<text text-anchor="middle" x="417" y="-3664.58" font-family="Helvetica,sans-Serif" font-size="14.00">gift_badge.rs</text>
</g>
<g id="clust9" class="cluster">
<title>cluster_8</title>
<polygon fill="lightblue" stroke="lightblue" points="368,-3853.78 368,-3928.78 466,-3928.78 466,-3853.78 368,-3853.78"/>
<text text-anchor="middle" x="417" y="-3913.58" font-family="Helvetica,sans-Serif" font-size="14.00">scramble.rs</text>
</g>
<g id="clust10" class="cluster">
<title>cluster_9</title>
<polygon fill="lightblue" stroke="lightblue" points="304,-3770.78 304,-3845.78 530,-3845.78 530,-3770.78 304,-3770.78"/>
<text text-anchor="middle" x="417" y="-3830.58" font-family="Helvetica,sans-Serif" font-size="14.00">fetch_profile_key_credential.rs</text>
</g>
<g id="clust11" class="cluster">
<title>cluster_10</title>
<polygon fill="lightblue" stroke="lightblue" points="305.5,-4235.78 305.5,-4364.78 528.5,-4364.78 528.5,-4235.78 305.5,-4235.78"/>
<text text-anchor="middle" x="417" y="-4349.58" font-family="Helvetica,sans-Serif" font-size="14.00">profiles.rs</text>
</g>
<g id="clust12" class="cluster">
<title>cluster_11</title>
<polygon fill="lightblue" stroke="lightblue" points="795,-5034.78 795,-5163.78 1443,-5163.78 1443,-5034.78 795,-5034.78"/>
<text text-anchor="middle" x="1119" y="-5148.58" font-family="Helvetica,sans-Serif" font-size="14.00">ppss_ops.rs</text>
</g>
<g id="clust13" class="cluster">
<title>cluster_12</title>
<polygon fill="lightblue" stroke="lightblue" points="893,-5171.78 893,-5300.78 979,-5300.78 979,-5171.78 893,-5171.78"/>
<text text-anchor="middle" x="936" y="-5285.58" font-family="Helvetica,sans-Serif" font-size="14.00">traits.rs</text>
</g>
<g id="clust14" class="cluster">
<title>cluster_13</title>
<polygon fill="lightblue" stroke="lightblue" points="2611.5,-4426.78 2611.5,-4501.78 2713.5,-4501.78 2713.5,-4426.78 2611.5,-4426.78"/>
<text text-anchor="middle" x="2662.5" y="-4486.58" font-family="Helvetica,sans-Serif" font-size="14.00">proof.rs</text>
</g>
<g id="clust15" class="cluster">
<title>cluster_14</title>
<polygon fill="lightblue" stroke="lightblue" points="2068,-5362.78 2068,-5491.78 2290,-5491.78 2290,-5362.78 2068,-5362.78"/>
<text text-anchor="middle" x="2179" y="-5476.58" font-family="Helvetica,sans-Serif" font-size="14.00">scalar.rs</text>
</g>
<g id="clust16" class="cluster">
<title>cluster_15</title>
<polygon fill="lightblue" stroke="lightblue" points="1322.5,-4135.78 1322.5,-4264.78 1888,-4264.78 1888,-4135.78 1322.5,-4135.78"/>
<text text-anchor="middle" x="1605.25" y="-4249.58" font-family="Helvetica,sans-Serif" font-size="14.00">sign.rs</text>
</g>
<g id="clust17" class="cluster">
<title>cluster_16</title>
<polygon fill="lightblue" stroke="lightblue" points="1715.5,-2734.78 1715.5,-2829.78 2513,-2829.78 2513,-2734.78 1715.5,-2734.78"/>
<text text-anchor="middle" x="2114.25" y="-2814.58" font-family="Helvetica,sans-Serif" font-size="14.00">statement.rs</text>
</g>
<g id="clust18" class="cluster">
<title>cluster_17</title>
<polygon fill="lightblue" stroke="lightblue" points="1716.5,-6146.78 1716.5,-6275.78 1915.5,-6275.78 1915.5,-6146.78 1716.5,-6146.78"/>
<text text-anchor="middle" x="1816" y="-6260.58" font-family="Helvetica,sans-Serif" font-size="14.00">identity_key.rs</text>
</g>
<g id="clust19" class="cluster">
<title>cluster_18</title>
<polygon fill="lightblue" stroke="lightblue" points="1308.5,-5499.78 1308.5,-5810.78 2523.5,-5810.78 2523.5,-5499.78 1308.5,-5499.78"/>
<text text-anchor="middle" x="1916" y="-5795.58" font-family="Helvetica,sans-Serif" font-size="14.00">lib.rs</text>
</g>
<g id="clust20" class="cluster">
<title>cluster_19</title>
<polygon fill="lightblue" stroke="lightblue" points="371.5,-4654.78 371.5,-4729.78 1460,-4729.78 1460,-4654.78 371.5,-4654.78"/>
<text text-anchor="middle" x="915.75" y="-4714.58" font-family="Helvetica,sans-Serif" font-size="14.00">usernames_benchmarks.rs</text>
</g>
<g id="clust21" class="cluster">
<title>cluster_20</title>
<polygon fill="lightblue" stroke="lightblue" points="1234.5,-4409.78 1234.5,-4646.78 2269.5,-4646.78 2269.5,-4409.78 1234.5,-4409.78"/>
<text text-anchor="middle" x="1752" y="-4631.58" font-family="Helvetica,sans-Serif" font-size="14.00">username.rs</text>
</g>
<g id="clust22" class="cluster">
<title>cluster_21</title>
<polygon fill="lightblue" stroke="lightblue" points="890.5,-125.78 890.5,-254.78 1468,-254.78 1468,-125.78 890.5,-125.78"/>
<text text-anchor="middle" x="1179.25" y="-239.58" font-family="Helvetica,sans-Serif" font-size="14.00">endorsements.rs</text>
</g>
<g id="clust23" class="cluster">
<title>cluster_22</title>
<polygon fill="lightblue" stroke="lightblue" points="1282,-2374.78 1282,-2449.78 1494,-2449.78 1494,-2374.78 1282,-2374.78"/>
<text text-anchor="middle" x="1388" y="-2434.58" font-family="Helvetica,sans-Serif" font-size="14.00">zkcredential_benchmarks.rs</text>
</g>
<g id="clust24" class="cluster">
<title>cluster_23</title>
<polygon fill="lightblue" stroke="lightblue" points="1758.5,-2974.78 1758.5,-3103.78 1873.5,-3103.78 1873.5,-2974.78 1758.5,-2974.78"/>
<text text-anchor="middle" x="1816" y="-3088.58" font-family="Helvetica,sans-Serif" font-size="14.00">attributes.rs</text>
</g>
<g id="clust25" class="cluster">
<title>cluster_24</title>
<polygon fill="lightblue" stroke="lightblue" points="2095,-1677.78 2095,-1806.78 2710,-1806.78 2710,-1677.78 2095,-1677.78"/>
<text text-anchor="middle" x="2402.5" y="-1791.58" font-family="Helvetica,sans-Serif" font-size="14.00">credentials.rs</text>
</g>
<g id="clust26" class="cluster">
<title>cluster_25</title>
<polygon fill="lightblue" stroke="lightblue" points="1280,-262.78 1280,-607.78 2291.5,-607.78 2291.5,-262.78 1280,-262.78"/>
<text text-anchor="middle" x="1785.75" y="-592.58" font-family="Helvetica,sans-Serif" font-size="14.00">endorsements.rs</text>
</g>
<g id="clust27" class="cluster">
<title>cluster_26</title>
<polygon fill="lightblue" stroke="lightblue" points="1769,-2837.78 1769,-2966.78 1864,-2966.78 1864,-2837.78 1769,-2837.78"/>
<text text-anchor="middle" x="1816.5" y="-2951.58" font-family="Helvetica,sans-Serif" font-size="14.00">issuance.rs</text>
</g>
<g id="clust28" class="cluster">
<title>cluster_27</title>
<polygon fill="lightblue" stroke="lightblue" points="1732,-1290.78 1732,-1527.78 2503.5,-1527.78 2503.5,-1290.78 1732,-1290.78"/>
<text text-anchor="middle" x="2117.75" y="-1512.58" font-family="Helvetica,sans-Serif" font-size="14.00">blind.rs</text>
</g>
<g id="clust29" class="cluster">
<title>cluster_28</title>
<polygon fill="lightblue" stroke="lightblue" points="1755.5,-2203.78 1755.5,-2332.78 1877.5,-2332.78 1877.5,-2203.78 1755.5,-2203.78"/>
<text text-anchor="middle" x="1816.5" y="-2317.58" font-family="Helvetica,sans-Serif" font-size="14.00">presentation.rs</text>
</g>
<g id="clust30" class="cluster">
<title>cluster_29</title>
<polygon fill="lightblue" stroke="lightblue" points="2611,-374.78 2611,-449.78 2714,-449.78 2714,-374.78 2611,-374.78"/>
<text text-anchor="middle" x="2662.5" y="-434.58" font-family="Helvetica,sans-Serif" font-size="14.00">sho.rs</text>
</g>
<g id="clust31" class="cluster">
<title>cluster_30</title>
<polygon fill="lightblue" stroke="lightblue" points="8,-3687.78 8,-3762.78 551,-3762.78 551,-3687.78 8,-3687.78"/>
<text text-anchor="middle" x="279.5" y="-3747.58" font-family="Helvetica,sans-Serif" font-size="14.00">serialization.rs</text>
</g>
<g id="clust32" class="cluster">
<title>cluster_31</title>
<polygon fill="lightblue" stroke="lightblue" points="264,-3413.78 264,-3596.78 570,-3596.78 570,-3413.78 264,-3413.78"/>
<text text-anchor="middle" x="417" y="-3581.58" font-family="Helvetica,sans-Serif" font-size="14.00">zkgroup_benchmarks.rs</text>
</g>
<g id="clust33" class="cluster">
<title>cluster_32</title>
<polygon fill="lightblue" stroke="lightblue" points="844,-2702.78 844,-2993.78 1488.5,-2993.78 1488.5,-2702.78 844,-2702.78"/>
<text text-anchor="middle" x="1166.25" y="-2978.58" font-family="Helvetica,sans-Serif" font-size="14.00">zkc.rs</text>
</g>
<g id="clust34" class="cluster">
<title>cluster_33</title>
<polygon fill="lightblue" stroke="lightblue" points="268,-1112.78 268,-1403.78 1429,-1403.78 1429,-1112.78 268,-1112.78"/>
<text text-anchor="middle" x="848.5" y="-1388.58" font-family="Helvetica,sans-Serif" font-size="14.00">auth_credential.rs</text>
</g>
<g id="clust35" class="cluster">
<title>cluster_34</title>
<polygon fill="lightblue" stroke="lightblue" points="1316,-2457.78 1316,-2694.78 1460,-2694.78 1460,-2457.78 1316,-2457.78"/>
<text text-anchor="middle" x="1388" y="-2679.58" font-family="Helvetica,sans-Serif" font-size="14.00">auth_credential.rs</text>
</g>
<g id="clust36" class="cluster">
<title>cluster_35</title>
<polygon fill="lightblue" stroke="lightblue" points="1312.5,-1411.78 1312.5,-1702.78 1464.5,-1702.78 1464.5,-1411.78 1312.5,-1411.78"/>
<text text-anchor="middle" x="1388.5" y="-1687.58" font-family="Helvetica,sans-Serif" font-size="14.00">create_credential.rs</text>
</g>
<g id="clust37" class="cluster">
<title>cluster_36</title>
<polygon fill="lightblue" stroke="lightblue" points="1298,-4867.78 1298,-4996.78 1478,-4996.78 1478,-4867.78 1298,-4867.78"/>
<text text-anchor="middle" x="1388" y="-4981.58" font-family="Helvetica,sans-Serif" font-size="14.00">params.rs</text>
</g>
<g id="clust38" class="cluster">
<title>cluster_37</title>
<polygon fill="lightblue" stroke="lightblue" points="1289.5,-1710.78 1289.5,-1785.78 1486.5,-1785.78 1486.5,-1710.78 1289.5,-1710.78"/>
<text text-anchor="middle" x="1388" y="-1770.58" font-family="Helvetica,sans-Serif" font-size="14.00">generic_server_params.rs</text>
</g>
<g id="clust39" class="cluster">
<title>cluster_38</title>
<polygon fill="lightblue" stroke="lightblue" points="852.5,-3944.78 852.5,-4127.78 1488.5,-4127.78 1488.5,-3944.78 852.5,-3944.78"/>
<text text-anchor="middle" x="1170.5" y="-4112.58" font-family="Helvetica,sans-Serif" font-size="14.00">group_params.rs</text>
</g>
<g id="clust40" class="cluster">
<title>cluster_39</title>
<polygon fill="lightblue" stroke="lightblue" points="777,-615.78 777,-960.78 1552.5,-960.78 1552.5,-615.78 777,-615.78"/>
<text text-anchor="middle" x="1164.75" y="-945.58" font-family="Helvetica,sans-Serif" font-size="14.00">group_send_endorsement.rs</text>
</g>
<g id="clust41" class="cluster">
<title>cluster_40</title>
<polygon fill="lightblue" stroke="lightblue" points="861,-5499.78 861,-5574.78 1011,-5574.78 1011,-5499.78 861,-5499.78"/>
<text text-anchor="middle" x="936" y="-5559.58" font-family="Helvetica,sans-Serif" font-size="14.00">profile_key.rs</text>
</g>
<g id="clust42" class="cluster">
<title>cluster_41</title>
<polygon fill="lightblue" stroke="lightblue" points="741.5,-3031.78 741.5,-3754.78 1580.5,-3754.78 1580.5,-3031.78 741.5,-3031.78"/>
<text text-anchor="middle" x="1161" y="-3739.58" font-family="Helvetica,sans-Serif" font-size="14.00">server_params.rs</text>
</g>
<g id="clust43" class="cluster">
<title>cluster_42</title>
<polygon fill="lightblue" stroke="lightblue" points="284,-3330.78 284,-3405.78 550,-3405.78 550,-3330.78 284,-3330.78"/>
<text text-anchor="middle" x="417" y="-3390.58" font-family="Helvetica,sans-Serif" font-size="14.00">generate_generic_server_params.rs</text>
</g>
<g id="clust44" class="cluster">
<title>cluster_43</title>
<polygon fill="lightblue" stroke="lightblue" points="2404.5,-6917.78 2404.5,-6992.78 2507.5,-6992.78 2507.5,-6917.78 2404.5,-6917.78"/>
<text text-anchor="middle" x="2456" y="-6977.58" font-family="Helvetica,sans-Serif" font-size="14.00">sho.rs</text>
</g>
<g id="clust45" class="cluster">
<title>cluster_44</title>
<polygon fill="lightblue" stroke="lightblue" points="1703,-6460.78 1703,-6589.78 1929,-6589.78 1929,-6460.78 1703,-6460.78"/>
<text text-anchor="middle" x="1816" y="-6574.58" font-family="Helvetica,sans-Serif" font-size="14.00">simple_types.rs</text>
</g>
<g id="clust46" class="cluster">
<title>cluster_45</title>
<polygon fill="lightblue" stroke="lightblue" points="1229,-6772.78 1229,-6955.78 2247.5,-6955.78 2247.5,-6772.78 1229,-6772.78"/>
<text text-anchor="middle" x="1738.25" y="-6940.58" font-family="Helvetica,sans-Serif" font-size="14.00">credentials.rs</text>
</g>
<g id="clust47" class="cluster">
<title>cluster_46</title>
<polygon fill="lightblue" stroke="lightblue" points="1311.5,-6680.78 1311.5,-6755.78 2218.5,-6755.78 2218.5,-6680.78 1311.5,-6680.78"/>
<text text-anchor="middle" x="1765" y="-6740.58" font-family="Helvetica,sans-Serif" font-size="14.00">profile_key_commitment.rs</text>
</g>
<g id="clust48" class="cluster">
<title>cluster_47</title>
<polygon fill="lightblue" stroke="lightblue" points="1294,-7122.78 1294,-7251.78 1863.5,-7251.78 1863.5,-7122.78 1294,-7122.78"/>
<text text-anchor="middle" x="1578.75" y="-7236.58" font-family="Helvetica,sans-Serif" font-size="14.00">profile_key_credential_request.rs</text>
</g>
<g id="clust49" class="cluster">
<title>cluster_48</title>
<polygon fill="lightblue" stroke="lightblue" points="1277.5,-4784.78 1277.5,-4859.78 1859,-4859.78 1859,-4784.78 1277.5,-4784.78"/>
<text text-anchor="middle" x="1568.25" y="-4844.58" font-family="Helvetica,sans-Serif" font-size="14.00">profile_key_encryption.rs</text>
</g>
<g id="clust50" class="cluster">
<title>cluster_49</title>
<polygon fill="lightblue" stroke="lightblue" points="1777,-3193.78 1777,-3754.78 1855,-3754.78 1855,-3193.78 1777,-3193.78"/>
<text text-anchor="middle" x="1816" y="-3739.58" font-family="Helvetica,sans-Serif" font-size="14.00">proofs.rs</text>
</g>
<g id="clust51" class="cluster">
<title>cluster_50</title>
<polygon fill="lightblue" stroke="lightblue" points="1280.5,-7259.78 1280.5,-7388.78 1496.5,-7388.78 1496.5,-7259.78 1280.5,-7259.78"/>
<text text-anchor="middle" x="1388.5" y="-7373.58" font-family="Helvetica,sans-Serif" font-size="14.00">receipt_credential_request.rs</text>
</g>
<g id="clust52" class="cluster">
<title>cluster_51</title>
<polygon fill="lightblue" stroke="lightblue" points="1771.5,-6597.78 1771.5,-6672.78 2243,-6672.78 2243,-6597.78 1771.5,-6597.78"/>
<text text-anchor="middle" x="2007.25" y="-6657.58" font-family="Helvetica,sans-Serif" font-size="14.00">receipt_struct.rs</text>
</g>
<g id="clust53" class="cluster">
<title>cluster_52</title>
<polygon fill="lightblue" stroke="lightblue" points="870.5,-5308.78 870.5,-5491.78 1435.5,-5491.78 1435.5,-5308.78 870.5,-5308.78"/>
<text text-anchor="middle" x="1153" y="-5476.58" font-family="Helvetica,sans-Serif" font-size="14.00">signature.rs</text>
</g>
<g id="clust54" class="cluster">
<title>cluster_53</title>
<polygon fill="lightblue" stroke="lightblue" points="1776,-6963.78 1776,-7038.78 2238.5,-7038.78 2238.5,-6963.78 1776,-6963.78"/>
<text text-anchor="middle" x="2007.25" y="-7023.58" font-family="Helvetica,sans-Serif" font-size="14.00">timestamp_struct.rs</text>
</g>
<g id="clust55" class="cluster">
<title>cluster_54</title>
<polygon fill="lightblue" stroke="lightblue" points="1304,-7396.78 1304,-7525.78 1859,-7525.78 1859,-7396.78 1304,-7396.78"/>
<text text-anchor="middle" x="1581.5" y="-7510.58" font-family="Helvetica,sans-Serif" font-size="14.00">uid_encryption.rs</text>
</g>
<g id="clust56" class="cluster">
<title>cluster_55</title>
<polygon fill="lightblue" stroke="lightblue" points="1157,-1899.78 1157,-2298.78 1619,-2298.78 1619,-1899.78 1157,-1899.78"/>
<text text-anchor="middle" x="1388" y="-2283.58" font-family="Helvetica,sans-Serif" font-size="14.00">zkcredential_examples.rs</text>
</g>
<g id="clust57" class="cluster">
<title>cluster_56</title>
<polygon fill="lightblue" stroke="lightblue" points="275.5,-1028.78 275.5,-1103.78 558.5,-1103.78 558.5,-1028.78 275.5,-1028.78"/>
<text text-anchor="middle" x="417" y="-1088.58" font-family="Helvetica,sans-Serif" font-size="14.00">backup_auth_flow.rs</text>
</g>
<g id="clust58" class="cluster">
<title>cluster_57</title>
<polygon fill="lightblue" stroke="lightblue" points="735,-1754.78 735,-1991.78 1137,-1991.78 1137,-1754.78 735,-1754.78"/>
<text text-anchor="middle" x="936" y="-1976.58" font-family="Helvetica,sans-Serif" font-size="14.00">call_link_flow.rs</text>
</g>
<g id="clust59" class="cluster">
<title>cluster_58</title>
<polygon fill="lightblue" stroke="lightblue" points="280.5,-669.78 280.5,-852.78 553.5,-852.78 553.5,-669.78 280.5,-669.78"/>
<text text-anchor="middle" x="417" y="-837.58" font-family="Helvetica,sans-Serif" font-size="14.00">group_send_endorsements.rs</text>
</g>
<g id="clust60" class="cluster">
<title>cluster_59</title>
<polygon fill="lightblue" stroke="lightblue" points="193.5,-3936.78 193.5,-4227.78 640.5,-4227.78 640.5,-3936.78 193.5,-3936.78"/>
<text text-anchor="middle" x="417" y="-4212.58" font-family="Helvetica,sans-Serif" font-size="14.00">integration_tests.rs</text>
</g>
<g id="clust61" class="cluster">
<title>cluster_60</title>
<polygon fill="lightblue" stroke="lightblue" points="323,-4372.78 323,-4501.78 511,-4501.78 511,-4372.78 323,-4372.78"/>
<text text-anchor="middle" x="417" y="-4486.58" font-family="Helvetica,sans-Serif" font-size="14.00">receipt_flow.rs</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().</title>
<g id="a_node1"><a xlink:title=" &#160;&#160;&#160;fn pack(&amp;self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bytes: self.as_bytes(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="green" stroke="black" stroke-dasharray="1,5" points="3090,-5916.78 3036,-5916.78 3036,-5880.78 3090,-5880.78 3090,-5916.78"/>
<text text-anchor="middle" x="3063" y="-5895.08" font-family="Helvetica,sans-Serif" font-size="14.00">pack</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]hash_from_bytes(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]hash_from_bytes().</title>
<g id="a_node2"><a xlink:title=" &#160;&#160;&#160;pub fn hash_from_bytes&lt;D&gt;(input: &amp;[u8]) &#45;&gt; Scalar &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;D: Digest&lt;OutputSize = U64&gt; + Default, &#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut hash = D::default(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hash.update(input); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar::fr...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2523,-5916.78 2389,-5916.78 2389,-5880.78 2523,-5880.78 2523,-5916.78"/>
<text text-anchor="middle" x="2456" y="-5895.08" font-family="Helvetica,sans-Serif" font-size="14.00">hash_from_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash(). -->
<g id="node7" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash().</title>
<g id="a_node7"><a xlink:title=" &#160;&#160;&#160;pub fn from_hash&lt;D&gt;(hash: D) &#45;&gt; Scalar &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;D: Digest&lt;OutputSize = U64&gt;, &#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut output = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;output.copy_from_slice(hash.finalize().as_slice()); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2707,-5916.78 2618,-5916.78 2618,-5880.78 2707,-5880.78 2707,-5916.78"/>
<text text-anchor="middle" x="2662.5" y="-5895.08" font-family="Helvetica,sans-Serif" font-size="14.00">from_hash</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]hash_from_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash(). -->
<g id="edge37" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]hash_from_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2523.11,-5898.78C2550.52,-5898.78 2581.89,-5898.78 2607.83,-5898.78"/>
<polygon fill="gray" stroke="gray" points="2607.86,-5902.28 2617.86,-5898.78 2607.86,-5895.28 2607.86,-5902.28"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="node3" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<g id="a_node3"><a xlink:title=" &#160;&#160;&#160;pub fn from_bytes_mod_order_wide(input: &amp;[u8; 64]) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;UnpackedScalar::from_bytes_wide(input).pack() &#160;&#160;&#160;&#160;}">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="3000,-5916.78 2786,-5916.78 2786,-5880.78 3000,-5880.78 3000,-5916.78"/>
<text text-anchor="middle" x="2893" y="-5895.08" font-family="Helvetica,sans-Serif" font-size="14.00">from_bytes_mod_order_wide</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack(). -->
<g id="edge192" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M3000.4,-5898.78C3009.35,-5898.78 3017.94,-5898.78 3025.71,-5898.78"/>
<polygon fill="gray" stroke="gray" points="3025.76,-5902.28 3035.76,-5898.78 3025.76,-5895.28 3025.76,-5902.28"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order(). -->
<g id="node4" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().</title>
<g id="a_node4"><a xlink:title=" &#160;&#160;&#160;pub fn from_bytes_mod_order(bytes: [u8; 32]) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Temporarily allow s_unreduced.bytes &gt; 2^255 ... &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let s_unreduced = Scalar { bytes }; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Then reduce mod the grou...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2750,-5970.78 2575,-5970.78 2575,-5934.78 2750,-5934.78 2750,-5970.78"/>
<text text-anchor="middle" x="2662.5" y="-5949.08" font-family="Helvetica,sans-Serif" font-size="14.00">from_bytes_mod_order</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce(). -->
<g id="node9" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().</title>
<g id="a_node9"><a xlink:title=" &#160;&#160;&#160;fn reduce(&amp;self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let x = self.unpack(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let xR = UnpackedScalar::mul_internal(&amp;x, &amp;constants::R); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let x_mod_l = UnpackedScalar::montgomery_reduce(&amp;xR); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2925,-5970.78 2861,-5970.78 2861,-5934.78 2925,-5934.78 2925,-5970.78"/>
<text text-anchor="middle" x="2893" y="-5949.08" font-family="Helvetica,sans-Serif" font-size="14.00">reduce</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce(). -->
<g id="edge293" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2750.21,-5952.78C2784.69,-5952.78 2822.73,-5952.78 2850.72,-5952.78"/>
<polygon fill="gray" stroke="gray" points="2850.93,-5956.28 2860.93,-5952.78 2850.93,-5949.28 2850.93,-5956.28"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical(). -->
<g id="node5" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().</title>
<g id="a_node5"><a xlink:title=" &#160;&#160;&#160;fn is_canonical(&amp;self) &#45;&gt; Choice { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.ct_eq(&amp;self.reduce()) &#160;&#160;&#160;&#160;}">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2712.5,-5862.78 2612.5,-5862.78 2612.5,-5826.78 2712.5,-5826.78 2712.5,-5862.78"/>
<text text-anchor="middle" x="2662.5" y="-5841.08" font-family="Helvetica,sans-Serif" font-size="14.00">is_canonical</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce(). -->
<g id="edge365" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2712.95,-5853.95C2725.85,-5857.96 2739.17,-5863.67 2750,-5871.78 2773.09,-5889.06 2762.46,-5909.11 2786,-5925.78 2804.91,-5939.17 2829.88,-5945.93 2850.83,-5949.33"/>
<polygon fill="gray" stroke="gray" points="2850.36,-5952.8 2860.75,-5950.75 2851.35,-5945.87 2850.36,-5952.8"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="node6" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<g id="a_node6"><a xlink:title=" &#160;&#160;&#160;pub fn invert(&amp;self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.unpack().invert().pack() &#160;&#160;&#160;&#160;}">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2921.5,-5862.78 2864.5,-5862.78 2864.5,-5826.78 2921.5,-5826.78 2921.5,-5862.78"/>
<text text-anchor="middle" x="2893" y="-5841.08" font-family="Helvetica,sans-Serif" font-size="14.00">invert</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack(). -->
<g id="edge374" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2921.81,-5850.57C2943.4,-5855.37 2973.95,-5862.85 3000,-5871.78 3008.72,-5874.76 3017.91,-5878.45 3026.48,-5882.14"/>
<polygon fill="gray" stroke="gray" points="3025.26,-5885.43 3035.82,-5886.26 3028.08,-5879.02 3025.26,-5885.43"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge463" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2707.02,-5898.78C2726.71,-5898.78 2751.01,-5898.78 2775.46,-5898.78"/>
<polygon fill="gray" stroke="gray" points="2775.56,-5902.28 2785.56,-5898.78 2775.56,-5895.28 2775.56,-5902.28"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes(). -->
<g id="node8" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().</title>
<g id="a_node8"><a xlink:title=" &#160;&#160;&#160;pub fn from_canonical_bytes(bytes: [u8; 32]) &#45;&gt; CtOption&lt;Scalar&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let high_bit_unset = (bytes[31] &gt;&gt; 7).ct_eq(&amp;0); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let candidate = Scalar { bytes }; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CtOption::new(candidat...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2539,-5862.78 2373,-5862.78 2373,-5826.78 2539,-5826.78 2539,-5862.78"/>
<text text-anchor="middle" x="2456" y="-5841.08" font-family="Helvetica,sans-Serif" font-size="14.00">from_canonical_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical(). -->
<g id="edge466" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]is_canonical().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2539.29,-5844.78C2560.37,-5844.78 2582.62,-5844.78 2602.28,-5844.78"/>
<polygon fill="gray" stroke="gray" points="2602.3,-5848.28 2612.3,-5844.78 2602.3,-5841.28 2602.3,-5848.28"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack(). -->
<g id="edge480" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]reduce().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[`backend::serial::u64::scalar::Scalar52`]pack().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2925.46,-5946.16C2946.76,-5941.35 2975.39,-5934.21 3000,-5925.78 3008.72,-5922.79 3017.91,-5919.1 3026.48,-5915.41"/>
<polygon fill="gray" stroke="gray" points="3028.08,-5918.53 3035.82,-5911.29 3025.26,-5912.13 3028.08,-5918.53"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Proof(). -->
<g id="node10" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Proof().</title>
<g id="a_node10"><a xlink:title="pub fn Username_Proof(username: String, randomness: &amp;[u8; 32]) &#45;&gt; Result&lt;Vec&lt;u8&gt;, UsernameError&gt; { &#160;&#160;&#160;&#160;Username::new(&amp;username)?.proof(randomness) }">
<polygon fill="white" stroke="black" points="1452.5,-4370.78 1323.5,-4370.78 1323.5,-4334.78 1452.5,-4334.78 1452.5,-4370.78"/>
<text text-anchor="middle" x="1388" y="-4349.08" font-family="Helvetica,sans-Serif" font-size="14.00">Username_Proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="node96" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<g id="a_node96"><a xlink:title=" &#160;&#160;&#160;pub fn proof(&amp;self, randomness: &amp;[u8; 32]) &#45;&gt; Result&lt;Vec&lt;u8&gt;, UsernameError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let hash = Self::hash_from_scalars(&amp;self.scalars); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let scalar_args = Self::make_scalar_args(&amp;self.sca...">
<polygon fill="white" stroke="black" points="1843,-4507.78 1789,-4507.78 1789,-4471.78 1843,-4471.78 1843,-4507.78"/>
<text text-anchor="middle" x="1816" y="-4486.08" font-family="Helvetica,sans-Serif" font-size="14.00">proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Proof().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge313" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Proof().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1452.66,-4353.05C1502.73,-4356.39 1571.72,-4368.29 1619,-4405.78 1641.12,-4423.31 1624.31,-4445.99 1647,-4462.78 1685.26,-4491.07 1741.9,-4494.45 1778.63,-4493.06"/>
<polygon fill="blue" stroke="blue" points="1779.08,-4496.54 1788.89,-4492.53 1778.72,-4489.55 1779.08,-4496.54"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Verify(). -->
<g id="node11" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Verify().</title>
<g id="a_node11"><a xlink:title="pub fn Username_Verify( &#160;&#160;&#160;&#160;proof: &amp;[u8], &#160;&#160;&#160;&#160;hash: &amp;[u8], ) &#45;&gt; Result&lt;(), ::usernames::ProofVerificationFailure&gt; { &#160;&#160;&#160;&#160;if hash.len() != 32 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return Err(::usernames::ProofVerificationFailure);...">
<polygon fill="white" stroke="black" points="1454.5,-4316.78 1321.5,-4316.78 1321.5,-4280.78 1454.5,-4280.78 1454.5,-4316.78"/>
<text text-anchor="middle" x="1388" y="-4295.08" font-family="Helvetica,sans-Serif" font-size="14.00">Username_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="node101" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<g id="a_node101"><a xlink:title=" &#160;&#160;&#160;pub fn verify_proof(proof: &amp;[u8], hash: [u8; 32]) &#45;&gt; Result&lt;(), ProofVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let hash_point = CompressedRistretto(hash) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.decompress() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.ok_or(ProofVer...">
<polygon fill="white" stroke="black" points="1865,-4453.78 1767,-4453.78 1767,-4417.78 1865,-4417.78 1865,-4453.78"/>
<text text-anchor="middle" x="1816" y="-4432.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="edge517" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1454.9,-4299.67C1501.7,-4301.94 1565.47,-4308.38 1619,-4325.78 1680.5,-4345.76 1744.51,-4385.96 1782.01,-4411.84"/>
<polygon fill="blue" stroke="blue" points="1780.3,-4414.91 1790.5,-4417.76 1784.3,-4409.17 1780.3,-4414.91"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialRequestContextDeterministic(). -->
<g id="node12" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialRequestContextDeterministic().</title>
<g id="a_node12"><a xlink:title="fn ServerPublicParams_CreateReceiptCredentialRequestContextDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;receipt_serial: &amp;[u8; RECEIPT_SERIAL...">
<polygon fill="white" stroke="black" points="682,-3021.78 152,-3021.78 152,-2985.78 682,-2985.78 682,-3021.78"/>
<text text-anchor="middle" x="417" y="-3000.08" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateReceiptCredentialRequestContextDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context(). -->
<g id="node193" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context().</title>
<g id="a_node193"><a xlink:title=" &#160;&#160;&#160;pub fn create_receipt_credential_request_context( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_serial_bytes: ReceiptSerialBytes, &#160;&#160;&#160;&#160;) &#45;&gt; api::receipts::ReceiptCredentialReq...">
<polygon fill="white" stroke="black" points="1089,-3723.78 783,-3723.78 783,-3687.78 1089,-3687.78 1089,-3723.78"/>
<text text-anchor="middle" x="936" y="-3702.08" font-family="Helvetica,sans-Serif" font-size="14.00">create_receipt_credential_request_context</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialRequestContextDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context(). -->
<g id="edge3" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialRequestContextDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.85,-2985.74C563.02,-2974.77 660.06,-2972.45 715,-3030.78 764.39,-3083.21 686.76,-3625.28 735,-3678.78 745.59,-3690.52 758.65,-3698.96 773,-3704.9"/>
<polygon fill="blue" stroke="blue" points="772,-3708.26 782.59,-3708.45 774.43,-3701.69 772,-3708.26"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkSecretParams_DecryptUserId(). -->
<g id="node13" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkSecretParams_DecryptUserId().</title>
<g id="a_node13"><a xlink:title="fn CallLinkSecretParams_DecryptUserId( &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Serialized&lt;UuidCiphertext&gt;, ) &#45;&gt; Result&lt;Aci, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;let params = zkgroup::deserialize::&lt;CallLink...">
<polygon fill="white" stroke="black" points="553,-3291.78 281,-3291.78 281,-3255.78 553,-3255.78 553,-3291.78"/>
<text text-anchor="middle" x="417" y="-3270.08" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkSecretParams_DecryptUserId</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid(). -->
<g id="node173" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid().</title>
<g id="a_node173"><a xlink:title=" &#160;&#160;&#160;pub fn decrypt_uid( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: api::groups::UuidCiphertext, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;libsignal_core::Aci, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let uid = crypto::uid_encryption::Uid...">
<polygon fill="white" stroke="black" points="1437,-4965.78 1339,-4965.78 1339,-4929.78 1437,-4929.78 1437,-4965.78"/>
<text text-anchor="middle" x="1388" y="-4944.08" font-family="Helvetica,sans-Serif" font-size="14.00">decrypt_uid</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkSecretParams_DecryptUserId().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid(). -->
<g id="edge5" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkSecretParams_DecryptUserId().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M553.19,-3262.49C611.85,-3265.43 675.94,-3280.75 715,-3326.78 769.21,-3390.66 681.57,-4770.24 735,-4834.78 881.76,-5012.05 1198.08,-4981.08 1328.72,-4959.22"/>
<polygon fill="blue" stroke="blue" points="1329.66,-4962.61 1338.92,-4957.47 1328.47,-4955.71 1329.66,-4962.61"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify(). -->
<g id="node14" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify().</title>
<g id="a_node14"><a xlink:title="fn CallLinkAuthCredentialPresentation_Verify( &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;(), ZkGroupVerificationF...">
<polygon fill="white" stroke="black" points="570,-2481.78 264,-2481.78 264,-2445.78 570,-2445.78 570,-2481.78"/>
<text text-anchor="middle" x="417" y="-2460.08" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredentialPresentation_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify(). -->
<g id="node167" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().</title>
<g id="a_node167"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerifi...">
<polygon fill="white" stroke="black" points="1416,-2663.78 1360,-2663.78 1360,-2627.78 1416,-2627.78 1416,-2663.78"/>
<text text-anchor="middle" x="1388" y="-2642.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify(). -->
<g id="edge21" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M570.12,-2453.24C619.06,-2456.02 671.77,-2465.99 715,-2490.78 728.27,-2498.38 722.31,-2510.25 735,-2518.78 894.99,-2626.27 967.19,-2585.26 1157,-2618.78 1224.59,-2630.71 1304.3,-2638.73 1349.92,-2642.76"/>
<polygon fill="blue" stroke="blue" points="1349.68,-2646.25 1359.94,-2643.62 1350.28,-2639.27 1349.68,-2646.25"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive(). -->
<g id="node15" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive().</title>
<g id="a_node15"><a xlink:title="fn CallLinkAuthCredentialResponse_Receive( &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="567.5,-2373.78 266.5,-2373.78 266.5,-2337.78 567.5,-2337.78 567.5,-2373.78"/>
<text text-anchor="middle" x="417" y="-2352.08" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredentialResponse_Receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="node164" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<g id="a_node164"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;CallLinkAuthCredential, ZkGroupV...">
<polygon fill="white" stroke="black" points="1421,-2555.78 1355,-2555.78 1355,-2519.78 1421,-2519.78 1421,-2555.78"/>
<text text-anchor="middle" x="1388" y="-2534.08" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="edge24" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M567.8,-2364.7C615.1,-2368.77 667.42,-2374.58 715,-2382.78 905.79,-2415.64 968.8,-2394.92 1137,-2490.78 1147.92,-2497 1145.69,-2505.3 1157,-2510.78 1217.34,-2540.01 1296.67,-2542.61 1344.64,-2540.88"/>
<polygon fill="blue" stroke="blue" points="1344.84,-2544.37 1354.67,-2540.43 1344.53,-2537.38 1344.84,-2544.37"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic(). -->
<g id="node16" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic().</title>
<g id="a_node16"><a xlink:title="fn BackupAuthCredential_PresentDeterministic( &#160;&#160;&#160;&#160;credential_bytes: &amp;[u8], &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="577.5,-1779.78 256.5,-1779.78 256.5,-1743.78 577.5,-1743.78 577.5,-1779.78"/>
<text text-anchor="middle" x="417" y="-1758.08" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredential_PresentDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="node156" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<g id="a_node156"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; BackupAuthCredentialPresentation { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BackupAuthCredentialPrese...">
<polygon fill="white" stroke="black" points="970.5,-1318.78 901.5,-1318.78 901.5,-1282.78 970.5,-1282.78 970.5,-1318.78"/>
<text text-anchor="middle" x="936" y="-1297.08" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge26" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.92,-1779.79C563.85,-1790.4 659.89,-1792.22 715,-1734.78 746.34,-1702.1 704.38,-1361.12 735,-1327.78 773.89,-1285.43 845.09,-1286.28 891.21,-1292.34"/>
<polygon fill="blue" stroke="blue" points="890.82,-1295.82 901.22,-1293.79 891.82,-1288.89 890.82,-1295.82"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic(). -->
<g id="node17" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic().</title>
<g id="a_node17"><a xlink:title="fn CallLinkAuthCredentialResponse_IssueDeterministic( &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;let params = ...">
<polygon fill="white" stroke="black" points="605,-2319.78 229,-2319.78 229,-2283.78 605,-2283.78 605,-2319.78"/>
<text text-anchor="middle" x="417" y="-2298.08" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredentialResponse_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="node165" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<g id="a_node165"><a xlink:title=" &#160;&#160;&#160;pub fn issue_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; CallLin...">
<polygon fill="white" stroke="black" points="1452,-2501.78 1324,-2501.78 1324,-2465.78 1452,-2465.78 1452,-2501.78"/>
<text text-anchor="middle" x="1388" y="-2480.08" font-family="Helvetica,sans-Serif" font-size="14.00">issue_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="edge35" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M605.05,-2317.8C641.54,-2321.2 679.48,-2324.93 715,-2328.78 902.93,-2349.11 993.94,-2258.22 1137,-2381.78 1162.13,-2403.48 1131.92,-2432.01 1157,-2453.78 1199.39,-2490.57 1263.81,-2496.19 1313.7,-2493.67"/>
<polygon fill="blue" stroke="blue" points="1314.03,-2497.16 1323.8,-2493.05 1313.6,-2490.17 1314.03,-2497.16"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_NewDeterministic(). -->
<g id="node18" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_NewDeterministic().</title>
<g id="a_node18"><a xlink:title="fn CreateCallLinkCredentialRequestContext_NewDeterministic( &#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;let context = CreateCallLinkCredentialRequestContext::new(room...">
<polygon fill="white" stroke="black" points="629.5,-2049.78 204.5,-2049.78 204.5,-2013.78 629.5,-2013.78 629.5,-2049.78"/>
<text text-anchor="middle" x="417" y="-2028.08" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialRequestContext_NewDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new(). -->
<g id="node168" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new().</title>
<g id="a_node168"><a xlink:title=" &#160;&#160;&#160;pub fn new(room_id: &amp;[u8], randomness: RandomnessBytes) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;poksho::ShoHmacSha256::new(b&#39; 20230413_Signal_CreateCallLinkCredentialRequest&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sho.ab...">
<polygon fill="white" stroke="black" points="1415,-1455.78 1361,-1455.78 1361,-1419.78 1415,-1419.78 1415,-1455.78"/>
<text text-anchor="middle" x="1388" y="-1434.08" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_NewDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new(). -->
<g id="edge36" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_NewDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.63,-2049.78C563.61,-2060.47 659.9,-2062.41 715,-2004.78 748.51,-1969.72 702.07,-1604.38 735,-1568.78 857.26,-1436.6 995.87,-1630.57 1137,-1518.78 1157.06,-1502.88 1136.88,-1480.6 1157,-1464.78 1212.94,-1420.78 1301.48,-1424.72 1350.8,-1431.34"/>
<polygon fill="blue" stroke="blue" points="1350.59,-1434.84 1360.99,-1432.82 1351.6,-1427.91 1350.59,-1434.84"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds(). -->
<g id="node19" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds().</title>
<g id="a_node19"><a xlink:title="fn GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds( &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;group_members: ServiceIdSequence&lt;&#39;_&gt;, &#160;&#160;&#160;&#160;local_user: ServiceId, &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;group_params: ...">
<polygon fill="white" stroke="black" points="674,-1509.78 160,-1509.78 160,-1473.78 674,-1473.78 674,-1509.78"/>
<text text-anchor="middle" x="417" y="-1488.08" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="node180" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<g id="a_node180"><a xlink:title=" &#160;&#160;&#160;pub fn receive_with_service_ids&lt;T&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_ids: T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root_public_key: impl AsRef&lt;zkcredential::endorseme...">
<polygon fill="white" stroke="black" points="1028.5,-713.78 843.5,-713.78 843.5,-677.78 1028.5,-677.78 1028.5,-713.78"/>
<text text-anchor="middle" x="936" y="-692.08" font-family="Helvetica,sans-Serif" font-size="14.00">receive_with_service_ids</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge60" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.57,-1509.81C562.79,-1520.85 660.09,-1523.3 715,-1464.78 771.43,-1404.63 679.89,-784.14 735,-722.78 759.4,-695.61 797.07,-686.09 833.17,-684.35"/>
<polygon fill="blue" stroke="blue" points="833.4,-687.84 843.29,-684.05 833.2,-680.84 833.4,-687.84"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsement_CallLinkParams_ToToken(). -->
<g id="node20" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsement_CallLinkParams_ToToken().</title>
<g id="a_node20"><a xlink:title="fn GroupSendEndorsement_CallLinkParams_ToToken( &#160;&#160;&#160;&#160;endorsement: &amp;[u8], &#160;&#160;&#160;&#160;call_link_secret_params_serialized: &amp;[u8], ) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;let call_link_params = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;zkgroup::deserialize::&lt;CallLink...">
<polygon fill="white" stroke="black" points="596.5,-1671.78 237.5,-1671.78 237.5,-1635.78 596.5,-1635.78 596.5,-1671.78"/>
<text text-anchor="middle" x="417" y="-1650.08" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSendEndorsement_CallLinkParams_ToToken</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token(). -->
<g id="node181" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token().</title>
<g id="a_node181"><a xlink:title=" &#160;&#160;&#160;pub fn to_token&lt;T: AsRef&lt;uid_encryption::KeyPair&gt;&gt;(&amp;self, key_pair: T) &#45;&gt; GroupSendToken { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let client_key = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;zkcredential::endorsements::ClientDecryptionKey::for_first_point_of_...">
<polygon fill="white" stroke="black" points="973.5,-821.78 898.5,-821.78 898.5,-785.78 973.5,-785.78 973.5,-821.78"/>
<text text-anchor="middle" x="936" y="-800.08" font-family="Helvetica,sans-Serif" font-size="14.00">to_token</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsement_CallLinkParams_ToToken().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token(). -->
<g id="edge82" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsement_CallLinkParams_ToToken().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.26,-1671.78C562.52,-1682.88 660.05,-1685.45 715,-1626.78 745.24,-1594.49 705.47,-863.71 735,-830.78 772.62,-788.82 841.91,-788.92 888.23,-794.8"/>
<polygon fill="blue" stroke="blue" points="887.93,-798.29 898.32,-796.22 888.91,-791.36 887.93,-798.29"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential(). -->
<g id="node21" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential().</title>
<g id="a_node21"><a xlink:title="fn ServerPublicParams_ReceiveReceiptCredential( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;request_context: Serialized&lt;ReceiptCredentialRequestContext&gt;, &#160;&#160;&#160;&#160;response: Serialized&lt;ReceiptCredent...">
<polygon fill="white" stroke="black" points="585,-2751.78 249,-2751.78 249,-2715.78 585,-2715.78 585,-2751.78"/>
<text text-anchor="middle" x="417" y="-2730.08" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_ReceiveReceiptCredential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="node201" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<g id="a_node201"><a xlink:title=" &#160;&#160;&#160;pub fn receive_receipt_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;context: &amp;api::receipts::ReceiptCredentialRequestContext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: &amp;api::receipts::ReceiptCredentialResponse, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;api...">
<polygon fill="white" stroke="black" points="1033.5,-3345.78 838.5,-3345.78 838.5,-3309.78 1033.5,-3309.78 1033.5,-3345.78"/>
<text text-anchor="middle" x="936" y="-3324.08" font-family="Helvetica,sans-Serif" font-size="14.00">receive_receipt_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="edge83" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.09,-2715.76C563.19,-2704.9 659.97,-2702.72 715,-2760.78 756.3,-2804.35 694.66,-3256.31 735,-3300.78 758.36,-3326.52 793.65,-3336.36 828.11,-3338.77"/>
<polygon fill="blue" stroke="blue" points="828.12,-3342.27 838.28,-3339.27 828.47,-3335.28 828.12,-3342.27"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic(). -->
<g id="node22" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic().</title>
<g id="a_node22"><a xlink:title="fn ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;group_secret_params: Serial...">
<polygon fill="white" stroke="black" points="707,-2535.78 127,-2535.78 127,-2499.78 707,-2499.78 707,-2535.78"/>
<text text-anchor="middle" x="417" y="-2514.08" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="node191" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<g id="a_node191"><a xlink:title=" &#160;&#160;&#160;pub fn create_expiring_profile_key_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: api::groups::GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expiring_profil...">
<polygon fill="white" stroke="black" points="1122.5,-3075.78 749.5,-3075.78 749.5,-3039.78 1122.5,-3039.78 1122.5,-3075.78"/>
<text text-anchor="middle" x="936" y="-3054.08" font-family="Helvetica,sans-Serif" font-size="14.00">create_expiring_profile_key_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="edge95" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.66,-2499.75C563.65,-2489.04 659.95,-2487.1 715,-2544.78 749.79,-2581.22 704.04,-2958.03 735,-2997.78 748.08,-3014.56 765.67,-3026.81 785.03,-3035.71"/>
<polygon fill="blue" stroke="blue" points="783.77,-3038.98 794.34,-3039.69 786.52,-3032.54 783.77,-3038.98"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify(). -->
<g id="node23" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify().</title>
<g id="a_node23"><a xlink:title="fn BackupAuthCredentialPresentation_Verify( &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;let presentation = binc...">
<polygon fill="white" stroke="black" points="568.5,-1833.78 265.5,-1833.78 265.5,-1797.78 568.5,-1797.78 568.5,-1833.78"/>
<text text-anchor="middle" x="417" y="-1812.08" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialPresentation_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="node160" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<g id="a_node160"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let acceptable_start_tim...">
<polygon fill="white" stroke="black" points="964,-1372.78 908,-1372.78 908,-1336.78 964,-1336.78 964,-1372.78"/>
<text text-anchor="middle" x="936" y="-1351.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge115" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M496.21,-1833.8C564.1,-1844.35 659.91,-1846.05 715,-1788.78 744.77,-1757.82 707.55,-1435.8 735,-1402.78 774.39,-1355.39 851.55,-1350.08 897.66,-1351.65"/>
<polygon fill="blue" stroke="blue" points="897.69,-1355.15 907.84,-1352.12 898.01,-1348.16 897.69,-1355.15"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_GenerateDeterministic(). -->
<g id="node24" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_GenerateDeterministic().</title>
<g id="a_node24"><a xlink:title="fn ServerSecretParams_GenerateDeterministic( &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; ServerSecretParams { &#160;&#160;&#160;&#160;ServerSecretParams::generate(*randomness) }">
<polygon fill="white" stroke="black" points="576.5,-2589.78 257.5,-2589.78 257.5,-2553.78 576.5,-2553.78 576.5,-2589.78"/>
<text text-anchor="middle" x="417" y="-2568.08" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_GenerateDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="node199" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<g id="a_node199"><a xlink:title=" &#160;&#160;&#160;pub fn generate(randomness: RandomnessBytes) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b&#39; Signal_ZKGroup_20200424_Random_ServerSecretParams_Generate&#39; , &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;randomness, &#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="975.5,-3129.78 896.5,-3129.78 896.5,-3093.78 975.5,-3093.78 975.5,-3129.78"/>
<text text-anchor="middle" x="936" y="-3108.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_GenerateDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge116" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_GenerateDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.37,-2553.76C563.41,-2542.98 659.94,-2540.92 715,-2598.78 752.26,-2637.93 698.6,-3044.82 735,-3084.78 772.4,-3125.83 840.16,-3126.4 886.35,-3120.87"/>
<polygon fill="blue" stroke="blue" points="886.99,-3124.32 896.44,-3119.53 886.06,-3117.38 886.99,-3124.32"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSecretParams_DeriveFromMasterKey(). -->
<g id="node25" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSecretParams_DeriveFromMasterKey().</title>
<g id="a_node25"><a xlink:title="fn GroupSecretParams_DeriveFromMasterKey( &#160;&#160;&#160;&#160;master_key: Serialized&lt;GroupMasterKey&gt;, ) &#45;&gt; Serialized&lt;GroupSecretParams&gt; { &#160;&#160;&#160;&#160;GroupSecretParams::derive_from_master_key(master_key.into_inner()).into()...">
<polygon fill="white" stroke="black" points="572.5,-3075.78 261.5,-3075.78 261.5,-3039.78 572.5,-3039.78 572.5,-3075.78"/>
<text text-anchor="middle" x="417" y="-3054.08" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSecretParams_DeriveFromMasterKey</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key(). -->
<g id="node176" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key().</title>
<g id="a_node176"><a xlink:title=" &#160;&#160;&#160;pub fn derive_from_master_key(master_key: GroupMasterKey) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b&#39; Signal_ZKGroup_20200424_GroupMasterKey_GroupSecretParams_DeriveFromMasterKey&#39; , &#160;...">
<polygon fill="white" stroke="black" points="1480.5,-4096.78 1295.5,-4096.78 1295.5,-4060.78 1480.5,-4060.78 1480.5,-4096.78"/>
<text text-anchor="middle" x="1388" y="-4075.08" font-family="Helvetica,sans-Serif" font-size="14.00">derive_from_master_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSecretParams_DeriveFromMasterKey().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key(). -->
<g id="edge117" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSecretParams_DeriveFromMasterKey().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.53,-3039.77C562.73,-3028.76 660.01,-3026.33 715,-3084.78 766.34,-3139.34 693.65,-3696.29 735,-3758.78 843.54,-3922.79 961.05,-3855.89 1137,-3943.78 1211.78,-3981.12 1297.1,-4028.18 1346.24,-4055.73"/>
<polygon fill="blue" stroke="blue" points="1344.55,-4058.79 1354.98,-4060.64 1347.98,-4052.69 1344.55,-4058.79"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic(). -->
<g id="node26" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic().</title>
<g id="a_node26"><a xlink:title="fn ServerSecretParams_IssueReceiptCredentialDeterministic( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;request: Serialized&lt;ReceiptCredentialRequest&gt;, &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="623.5,-2913.78 210.5,-2913.78 210.5,-2877.78 623.5,-2877.78 623.5,-2913.78"/>
<text text-anchor="middle" x="417" y="-2892.08" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_IssueReceiptCredentialDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="node192" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<g id="a_node192"><a xlink:title=" &#160;&#160;&#160;pub fn issue_receipt_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: &amp;api::receipts::ReceiptCredentialRequest, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_expiration_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1027,-3507.78 845,-3507.78 845,-3471.78 1027,-3471.78 1027,-3507.78"/>
<text text-anchor="middle" x="936" y="-3486.08" font-family="Helvetica,sans-Serif" font-size="14.00">issue_receipt_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="edge135" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.09,-2877.76C563.19,-2866.9 659.97,-2864.72 715,-2922.78 756.3,-2966.35 694.66,-3418.31 735,-3462.78 759.85,-3490.17 798.22,-3499.56 834.73,-3501.14"/>
<polygon fill="blue" stroke="blue" points="834.89,-3504.65 844.97,-3501.39 835.06,-3497.65 834.89,-3504.65"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse(). -->
<g id="node27" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse().</title>
<g id="a_node27"><a xlink:title="fn CreateCallLinkCredentialRequestContext_ReceiveResponse( &#160;&#160;&#160;&#160;context_bytes: &amp;[u8], &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGroupVerificationFailu...">
<polygon fill="white" stroke="black" points="628.5,-2157.78 205.5,-2157.78 205.5,-2121.78 628.5,-2121.78 628.5,-2157.78"/>
<text text-anchor="middle" x="417" y="-2136.08" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialRequestContext_ReceiveResponse</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="node169" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<g id="a_node169"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: CreateCallLinkCredentialResponse, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;CreateCallLinkCr...">
<polygon fill="white" stroke="black" points="1421,-1563.78 1355,-1563.78 1355,-1527.78 1421,-1527.78 1421,-1563.78"/>
<text text-anchor="middle" x="1388" y="-1542.08" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="edge140" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.68,-2157.82C563.68,-2168.54 659.99,-2170.49 715,-2112.78 750.91,-2075.1 699.62,-1682.95 735,-1644.78 796.15,-1578.78 1057.94,-1639.71 1137,-1596.78 1149.2,-1590.15 1144.79,-1579.39 1157,-1572.78 1216.12,-1540.75 1296.15,-1539.04 1344.54,-1541.71"/>
<polygon fill="blue" stroke="blue" points="1344.46,-1545.21 1354.66,-1542.36 1344.9,-1538.23 1344.46,-1545.21"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic(). -->
<g id="node28" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic().</title>
<g id="a_node28"><a xlink:title="fn CreateCallLinkCredential_PresentDeterministic( &#160;&#160;&#160;&#160;credential_bytes: &amp;[u8], &#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: ...">
<polygon fill="white" stroke="black" points="585,-2211.78 249,-2211.78 249,-2175.78 585,-2175.78 585,-2211.78"/>
<text text-anchor="middle" x="417" y="-2190.08" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredential_PresentDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present(). -->
<g id="node172" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().</title>
<g id="a_node172"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkSecretParams, &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1422.5,-1617.78 1353.5,-1617.78 1353.5,-1581.78 1422.5,-1581.78 1422.5,-1617.78"/>
<text text-anchor="middle" x="1388" y="-1596.08" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present(). -->
<g id="edge157" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.36,-2211.79C563.4,-2222.56 659.94,-2224.62 715,-2166.78 752.11,-2127.79 698.44,-1722.28 735,-1682.78 796.1,-1616.74 1049.82,-1657.01 1137,-1634.78 1146.28,-1632.41 1147.72,-1629.13 1157,-1626.78 1220.58,-1610.63 1296.54,-1604.1 1343.28,-1601.48"/>
<polygon fill="blue" stroke="blue" points="1343.56,-1604.97 1353.36,-1600.95 1343.19,-1597.98 1343.56,-1604.97"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential(). -->
<g id="node29" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential().</title>
<g id="a_node29"><a xlink:title="fn ServerPublicParams_ReceiveExpiringProfileKeyCredential( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;request_context: Serialized&lt;ProfileKeyCredentialRequestContext&gt;, &#160;&#160;&#160;&#160;response: Serialized&lt;...">
<polygon fill="white" stroke="black" points="622,-2859.78 212,-2859.78 212,-2823.78 622,-2823.78 622,-2859.78"/>
<text text-anchor="middle" x="417" y="-2838.08" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_ReceiveExpiringProfileKeyCredential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="node196" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<g id="a_node196"><a xlink:title=" &#160;&#160;&#160;pub fn receive_expiring_profile_key_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;context: &amp;api::profiles::ProfileKeyCredentialRequestContext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: &amp;api::profiles::ExpiringProfileKeyCredentialRe...">
<polygon fill="white" stroke="black" points="1079,-3453.78 793,-3453.78 793,-3417.78 1079,-3417.78 1079,-3453.78"/>
<text text-anchor="middle" x="936" y="-3432.08" font-family="Helvetica,sans-Serif" font-size="14.00">receive_expiring_profile_key_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge158" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.09,-2823.76C563.19,-2812.9 659.97,-2810.72 715,-2868.78 756.3,-2912.35 694.66,-3364.31 735,-3408.78 748.08,-3423.19 764.91,-3432.63 783.23,-3438.56"/>
<polygon fill="blue" stroke="blue" points="782.36,-3441.95 792.94,-3441.35 784.3,-3435.22 782.36,-3441.95"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSecretParams_DecryptProfileKey(). -->
<g id="node30" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSecretParams_DecryptProfileKey().</title>
<g id="a_node30"><a xlink:title="fn GroupSecretParams_DecryptProfileKey( &#160;&#160;&#160;&#160;params: Serialized&lt;GroupSecretParams&gt;, &#160;&#160;&#160;&#160;profile_key: Serialized&lt;ProfileKeyCiphertext&gt;, &#160;&#160;&#160;&#160;user_id: Aci, ) &#45;&gt; Result&lt;Serialized&lt;ProfileKey&gt;, ZkGroupVerif...">
<polygon fill="white" stroke="black" points="558,-3129.78 276,-3129.78 276,-3093.78 558,-3093.78 558,-3129.78"/>
<text text-anchor="middle" x="417" y="-3108.08" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSecretParams_DecryptProfileKey</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key(). -->
<g id="node177" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key().</title>
<g id="a_node177"><a xlink:title=" &#160;&#160;&#160;pub fn decrypt_profile_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: api::groups::ProfileKeyCiphertext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;api::profiles::ProfileKey, ZkGroupVerificati...">
<polygon fill="white" stroke="black" points="1011.5,-4042.78 860.5,-4042.78 860.5,-4006.78 1011.5,-4006.78 1011.5,-4042.78"/>
<text text-anchor="middle" x="936" y="-4021.08" font-family="Helvetica,sans-Serif" font-size="14.00">decrypt_profile_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSecretParams_DecryptProfileKey().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key(). -->
<g id="edge170" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSecretParams_DecryptProfileKey().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.29,-3093.75C562.57,-3082.63 660.11,-3080.06 715,-3138.78 747.6,-3173.65 703.17,-3962.2 735,-3997.78 763.22,-4029.31 809.32,-4037.1 850.15,-4036.53"/>
<polygon fill="blue" stroke="blue" points="850.52,-4040.02 860.41,-4036.21 850.3,-4033.02 850.52,-4040.02"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic(). -->
<g id="node31" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic().</title>
<g id="a_node31"><a xlink:title="fn GroupSendEndorsementsResponse_IssueDeterministic( &#160;&#160;&#160;&#160;concatenated_group_member_ciphertexts: &amp;[u8], &#160;&#160;&#160;&#160;key_pair: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;assert!(concatenat...">
<polygon fill="white" stroke="black" points="615,-1563.78 219,-1563.78 219,-1527.78 615,-1527.78 615,-1563.78"/>
<text text-anchor="middle" x="417" y="-1542.08" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSendEndorsementsResponse_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="node182" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<g id="a_node182"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;member_ciphertexts: impl IntoIterator&lt;Item = UuidCiphertext&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;GroupSendDerivedKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Note...">
<polygon fill="white" stroke="black" points="963,-767.78 909,-767.78 909,-731.78 963,-731.78 963,-767.78"/>
<text text-anchor="middle" x="936" y="-746.08" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge224" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.57,-1563.81C562.79,-1574.85 660.09,-1577.3 715,-1518.78 771.43,-1458.63 679.89,-838.14 735,-776.78 775.62,-731.55 853.03,-735.22 898.72,-742.29"/>
<polygon fill="blue" stroke="blue" points="898.34,-745.77 908.79,-743.98 899.5,-738.87 898.34,-745.77"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic(). -->
<g id="node32" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic().</title>
<g id="a_node32"><a xlink:title="fn ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;profile_key: Se...">
<polygon fill="white" stroke="black" points="690,-2967.78 144,-2967.78 144,-2931.78 690,-2931.78 690,-2967.78"/>
<text text-anchor="middle" x="417" y="-2946.08" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="node195" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<g id="a_node195"><a xlink:title=" &#160;&#160;&#160;pub fn create_profile_key_credential_request_context( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;profile_key: api::profiles::ProfileKey, &#160;&#160;&#160;&#160;) &#45;&gt;...">
<polygon fill="white" stroke="black" points="1102.5,-3669.78 769.5,-3669.78 769.5,-3633.78 1102.5,-3633.78 1102.5,-3669.78"/>
<text text-anchor="middle" x="936" y="-3648.08" font-family="Helvetica,sans-Serif" font-size="14.00">create_profile_key_credential_request_context</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge242" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.85,-2931.74C563.02,-2920.77 660.06,-2918.45 715,-2976.78 764.39,-3029.21 686.76,-3571.28 735,-3624.78 742.29,-3632.86 750.76,-3639.38 760.01,-3644.6"/>
<polygon fill="blue" stroke="blue" points="758.6,-3647.81 769.1,-3649.21 761.76,-3641.56 758.6,-3647.81"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify(). -->
<g id="node33" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify().</title>
<g id="a_node33"><a xlink:title="fn CreateCallLinkCredentialPresentation_Verify( &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;()...">
<polygon fill="white" stroke="black" points="576,-2265.78 258,-2265.78 258,-2229.78 576,-2229.78 576,-2265.78"/>
<text text-anchor="middle" x="417" y="-2244.08" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialPresentation_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify(). -->
<g id="node170" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().</title>
<g id="a_node170"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; ...">
<polygon fill="white" stroke="black" points="1416,-1671.78 1360,-1671.78 1360,-1635.78 1416,-1635.78 1416,-1671.78"/>
<text text-anchor="middle" x="1388" y="-1650.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify(). -->
<g id="edge267" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.38,-2265.8C563.43,-2276.59 659.98,-2278.66 715,-2220.78 753.31,-2180.48 696.93,-1761.3 735,-1720.78 745.64,-1709.45 1213.33,-1668.63 1349.92,-1656.93"/>
<polygon fill="blue" stroke="blue" points="1350.24,-1660.41 1359.9,-1656.08 1349.64,-1653.44 1350.24,-1660.41"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSecretParams_DecryptServiceId(). -->
<g id="node34" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSecretParams_DecryptServiceId().</title>
<g id="a_node34"><a xlink:title="fn GroupSecretParams_DecryptServiceId( &#160;&#160;&#160;&#160;params: Serialized&lt;GroupSecretParams&gt;, &#160;&#160;&#160;&#160;ciphertext: Serialized&lt;UuidCiphertext&gt;, ) &#45;&gt; Result&lt;ServiceId, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;params.decrypt_se...">
<polygon fill="white" stroke="black" points="556.5,-3183.78 277.5,-3183.78 277.5,-3147.78 556.5,-3147.78 556.5,-3183.78"/>
<text text-anchor="middle" x="417" y="-3162.08" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSecretParams_DecryptServiceId</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id(). -->
<g id="node179" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id().</title>
<g id="a_node179"><a xlink:title=" &#160;&#160;&#160;pub fn decrypt_service_id( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: api::groups::UuidCiphertext, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;libsignal_core::ServiceId, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;crypto::uid_encryption::...">
<polygon fill="white" stroke="black" points="1009,-4096.78 863,-4096.78 863,-4060.78 1009,-4060.78 1009,-4096.78"/>
<text text-anchor="middle" x="936" y="-4075.08" font-family="Helvetica,sans-Serif" font-size="14.00">decrypt_service_id</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSecretParams_DecryptServiceId().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id(). -->
<g id="edge269" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSecretParams_DecryptServiceId().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.29,-3147.75C562.57,-3136.63 660.11,-3134.06 715,-3192.78 747.6,-3227.65 703.17,-4016.2 735,-4051.78 763.81,-4083.98 811.28,-4091.42 852.75,-4090.48"/>
<polygon fill="blue" stroke="blue" points="853.01,-4093.98 862.87,-4090.09 852.74,-4086.98 853.01,-4093.98"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic(). -->
<g id="node35" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic().</title>
<g id="a_node35"><a xlink:title="fn BackupAuthCredentialRequest_IssueDeterministic( &#160;&#160;&#160;&#160;request_bytes: &amp;[u8], &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;backup_level: AsType&lt;BackupLevel, u8&gt;, &#160;&#160;&#160;&#160;credential_type: AsType&lt;BackupCredentialType...">
<polygon fill="white" stroke="black" points="598,-1941.78 236,-1941.78 236,-1905.78 598,-1905.78 598,-1941.78"/>
<text text-anchor="middle" x="417" y="-1920.08" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialRequest_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="node157" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<g id="a_node157"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;backup_level: BackupLevel, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_type: BackupCredentialType, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1415,-1228.78 1361,-1228.78 1361,-1192.78 1415,-1192.78 1415,-1228.78"/>
<text text-anchor="middle" x="1388" y="-1207.08" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge333" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.92,-1941.79C563.85,-1952.4 659.89,-1954.22 715,-1896.78 746.27,-1864.18 704.68,-1524.25 735,-1490.78 856.26,-1356.88 1012.16,-1561.35 1137,-1430.78 1166.8,-1399.61 1126.72,-1268.47 1157,-1237.78 1207.59,-1186.5 1300.01,-1193.77 1350.94,-1202.75"/>
<polygon fill="blue" stroke="blue" points="1350.38,-1206.21 1360.85,-1204.62 1351.67,-1199.33 1350.38,-1206.21"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendDerivedKeyPair_ForExpiration(). -->
<g id="node36" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendDerivedKeyPair_ForExpiration().</title>
<g id="a_node36"><a xlink:title="fn GroupSendDerivedKeyPair_ForExpiration( &#160;&#160;&#160;&#160;expiration: Timestamp, &#160;&#160;&#160;&#160;server_params: &amp;ServerSecretParams, ) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;zkgroup::serialize(&amp;GroupSendDerivedKeyPair::for_expiration( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;exp...">
<polygon fill="white" stroke="black" points="565.5,-1455.78 268.5,-1455.78 268.5,-1419.78 565.5,-1419.78 565.5,-1455.78"/>
<text text-anchor="middle" x="417" y="-1434.08" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSendDerivedKeyPair_ForExpiration</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration(). -->
<g id="node186" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration().</title>
<g id="a_node186"><a xlink:title=" &#160;&#160;&#160;pub fn for_expiration( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expiration: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root: impl AsRef&lt;zkcredential::endorsements::ServerRootKeyPair&gt;, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;reserved: ReservedByte::de...">
<polygon fill="white" stroke="black" points="992.5,-659.78 879.5,-659.78 879.5,-623.78 992.5,-623.78 992.5,-659.78"/>
<text text-anchor="middle" x="936" y="-638.08" font-family="Helvetica,sans-Serif" font-size="14.00">for_expiration</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendDerivedKeyPair_ForExpiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration(). -->
<g id="edge339" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendDerivedKeyPair_ForExpiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M500.7,-1455.8C568.6,-1465.24 661.91,-1464.92 715,-1407.78 770.91,-1347.6 680.11,-729.88 735,-668.78 767.69,-632.38 824.22,-627.65 868.85,-630.88"/>
<polygon fill="blue" stroke="blue" points="868.78,-634.39 879.05,-631.77 869.39,-627.41 868.78,-634.39"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkSecretParams_DeriveFromRootKey(). -->
<g id="node37" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkSecretParams_DeriveFromRootKey().</title>
<g id="a_node37"><a xlink:title="fn CallLinkSecretParams_DeriveFromRootKey(root_key: &amp;[u8]) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;let params = CallLinkSecretParams::derive_from_root_key(root_key); &#160;&#160;&#160;&#160;zkgroup::serialize(&amp;params) }">
<polygon fill="white" stroke="black" points="570,-3237.78 264,-3237.78 264,-3201.78 570,-3201.78 570,-3237.78"/>
<text text-anchor="middle" x="417" y="-3216.08" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkSecretParams_DeriveFromRootKey</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key(). -->
<g id="node174" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key().</title>
<g id="a_node174"><a xlink:title=" &#160;&#160;&#160;pub fn derive_from_root_key(root_key: &amp;[u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b&#39; Signal_ZKGroup_20230419_CallLinkSecretParams_DeriveFromRootKey&#39; , &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root_key, &#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1470,-4911.78 1306,-4911.78 1306,-4875.78 1470,-4875.78 1470,-4911.78"/>
<text text-anchor="middle" x="1388" y="-4890.08" font-family="Helvetica,sans-Serif" font-size="14.00">derive_from_root_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkSecretParams_DeriveFromRootKey().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key(). -->
<g id="edge360" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkSecretParams_DeriveFromRootKey().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M493.76,-3201.73C562.16,-3190.43 660.22,-3187.6 715,-3246.78 771.12,-3307.41 683.76,-4668.97 735,-4733.78 849.26,-4878.28 985.65,-4729.76 1137,-4834.78 1149.86,-4843.7 1143.64,-4855.61 1157,-4863.78 1198.13,-4888.9 1251.08,-4897.09 1295.81,-4898.69"/>
<polygon fill="blue" stroke="blue" points="1295.72,-4902.19 1305.81,-4898.94 1295.9,-4895.19 1295.72,-4902.19"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse(). -->
<g id="node38" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse().</title>
<g id="a_node38"><a xlink:title="fn BackupAuthCredentialRequestContext_ReceiveResponse( &#160;&#160;&#160;&#160;context_bytes: &amp;[u8], &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;expected_redemption_time: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGro...">
<polygon fill="white" stroke="black" points="621,-1995.78 213,-1995.78 213,-1959.78 621,-1959.78 621,-1995.78"/>
<text text-anchor="middle" x="417" y="-1974.08" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialRequestContext_ReceiveResponse</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="node158" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<g id="a_node158"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: BackupAuthCredentialResponse, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expected_redemption_time: Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;BackupAuthCre...">
<polygon fill="white" stroke="black" points="1421,-1282.78 1355,-1282.78 1355,-1246.78 1421,-1246.78 1421,-1282.78"/>
<text text-anchor="middle" x="1388" y="-1261.08" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge366" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.96,-1995.83C563.92,-2006.47 659.97,-2008.3 715,-1950.78 748.21,-1916.05 702.11,-1553.8 735,-1518.78 796.52,-1453.27 1067.97,-1532.32 1137,-1474.78 1160.87,-1454.88 1138.14,-1432.47 1157,-1407.78 1206.2,-1343.36 1293.44,-1300.85 1345.17,-1279.96"/>
<polygon fill="blue" stroke="blue" points="1346.7,-1283.12 1354.71,-1276.19 1344.12,-1276.61 1346.7,-1283.12"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_New(). -->
<g id="node39" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_New().</title>
<g id="a_node39"><a xlink:title="fn BackupAuthCredentialRequestContext_New(backup_key: &amp;[u8; 32], uuid: Uuid) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;let backup_key: libsignal_account_keys::BackupKey = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;libsignal_account_keys::BackupKey(*backup_key)...">
<polygon fill="white" stroke="black" points="576,-1887.78 258,-1887.78 258,-1851.78 576,-1851.78 576,-1887.78"/>
<text text-anchor="middle" x="417" y="-1866.08" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialRequestContext_New</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new(). -->
<g id="node155" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new().</title>
<g id="a_node155"><a xlink:title=" &#160;&#160;&#160;pub fn new&lt;const VERSION: u8&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;backup_key: &amp;libsignal_account_keys::BackupKey&lt;VERSION&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: libsignal_core::Aci, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// derive the backup&#45;id (blinded in the is...">
<polygon fill="white" stroke="black" points="1415,-1174.78 1361,-1174.78 1361,-1138.78 1415,-1138.78 1415,-1174.78"/>
<text text-anchor="middle" x="1388" y="-1153.08" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_New().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new(). -->
<g id="edge377" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_New().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.93,-1887.8C563.86,-1898.42 659.91,-1900.24 715,-1842.78 746.72,-1809.69 703.79,-1464.34 735,-1430.78 857.56,-1298.96 1011.05,-1510.35 1137,-1381.78 1167.95,-1350.18 1125.98,-1215.3 1157,-1183.78 1207.52,-1132.43 1299.97,-1139.73 1350.93,-1148.74"/>
<polygon fill="blue" stroke="blue" points="1350.36,-1152.19 1360.84,-1150.6 1351.66,-1145.31 1350.36,-1152.19"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsement_ToToken(). -->
<g id="node40" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsement_ToToken().</title>
<g id="a_node40"><a xlink:title="fn GroupSendEndorsement_ToToken( &#160;&#160;&#160;&#160;endorsement: &amp;[u8], &#160;&#160;&#160;&#160;group_params: Serialized&lt;GroupSecretParams&gt;, ) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;let endorsement = zkgroup::deserialize::&lt;GroupSendEndorsement&gt;(endorsement)...">
<polygon fill="white" stroke="black" points="540.5,-1617.78 293.5,-1617.78 293.5,-1581.78 540.5,-1581.78 540.5,-1617.78"/>
<text text-anchor="middle" x="417" y="-1596.08" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSendEndorsement_ToToken</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsement_ToToken().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token(). -->
<g id="edge394" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsement_ToToken().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.57,-1617.81C562.79,-1628.85 660.09,-1631.3 715,-1572.78 771.43,-1512.63 679.89,-892.14 735,-830.78 772.65,-788.85 841.94,-788.95 888.25,-794.81"/>
<polygon fill="blue" stroke="blue" points="887.95,-798.31 898.33,-796.23 888.92,-791.37 887.95,-798.31"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic(). -->
<g id="node41" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic().</title>
<g id="a_node41"><a xlink:title="fn ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;request: Serialized&lt;ProfileKeyCredential...">
<polygon fill="white" stroke="black" points="661,-2805.78 173,-2805.78 173,-2769.78 661,-2769.78 661,-2805.78"/>
<text text-anchor="middle" x="417" y="-2784.08" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="node198" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<g id="a_node198"><a xlink:title=" &#160;&#160;&#160;pub fn issue_expiring_profile_key_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: &amp;api::profiles::ProfileKeyCredentialRequest, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: libsignal_core::Aci, &#160;&#160;...">
<polygon fill="white" stroke="black" points="1072,-3399.78 800,-3399.78 800,-3363.78 1072,-3363.78 1072,-3399.78"/>
<text text-anchor="middle" x="936" y="-3378.08" font-family="Helvetica,sans-Serif" font-size="14.00">issue_expiring_profile_key_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="edge464" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.09,-2769.76C563.19,-2758.9 659.97,-2756.72 715,-2814.78 756.3,-2858.35 694.66,-3310.31 735,-3354.78 749.7,-3370.98 769.13,-3380.88 790.1,-3386.6"/>
<polygon fill="blue" stroke="blue" points="789.29,-3390 799.83,-3388.94 790.93,-3383.2 789.29,-3390"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation(). -->
<g id="node42" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation().</title>
<g id="a_node42"><a xlink:title="fn ServerSecretParams_VerifyReceiptCredentialPresentation( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;presentation: Serialized&lt;ReceiptCredentialPresentation&gt;, ) &#45;&gt; Result&lt;(), ZkGroupVerificati...">
<polygon fill="white" stroke="black" points="622,-2697.78 212,-2697.78 212,-2661.78 622,-2661.78 622,-2697.78"/>
<text text-anchor="middle" x="417" y="-2676.08" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_VerifyReceiptCredentialPresentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation(). -->
<g id="node190" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().</title>
<g id="a_node190"><a xlink:title=" &#160;&#160;&#160;pub fn verify_receipt_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::receipts::ReceiptCredentialPresentation, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;present...">
<polygon fill="white" stroke="black" points="1075,-3291.78 797,-3291.78 797,-3255.78 1075,-3255.78 1075,-3291.78"/>
<text text-anchor="middle" x="936" y="-3270.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify_receipt_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation(). -->
<g id="edge477" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.09,-2661.76C563.19,-2650.9 659.97,-2648.72 715,-2706.78 756.3,-2750.35 694.66,-3202.31 735,-3246.78 748.96,-3262.16 767.18,-3271.87 786.95,-3277.7"/>
<polygon fill="blue" stroke="blue" points="786.2,-3281.13 796.76,-3280.26 787.97,-3274.35 786.2,-3281.13"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic(). -->
<g id="node43" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic().</title>
<g id="a_node43"><a xlink:title="fn CreateCallLinkCredentialRequest_IssueDeterministic( &#160;&#160;&#160;&#160;request_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;timestamp: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Vec&lt;u8...">
<polygon fill="white" stroke="black" points="605.5,-2103.78 228.5,-2103.78 228.5,-2067.78 605.5,-2067.78 605.5,-2103.78"/>
<text text-anchor="middle" x="417" y="-2082.08" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialRequest_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="node171" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<g id="a_node171"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timestamp: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; CreateCal...">
<polygon fill="white" stroke="black" points="1415,-1509.78 1361,-1509.78 1361,-1473.78 1415,-1473.78 1415,-1509.78"/>
<text text-anchor="middle" x="1388" y="-1488.08" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="edge479" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.67,-2103.81C563.67,-2114.53 659.97,-2116.48 715,-2058.78 750.46,-2021.59 699.65,-1634.07 735,-1596.78 796.75,-1531.64 1062.76,-1608.22 1137,-1557.78 1153.11,-1546.83 1141,-1529.89 1157,-1518.78 1215.15,-1478.4 1302.12,-1480.79 1350.75,-1486.22"/>
<polygon fill="blue" stroke="blue" points="1350.46,-1489.71 1360.81,-1487.45 1351.31,-1482.76 1350.46,-1489.71"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic(). -->
<g id="node44" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic().</title>
<g id="a_node44"><a xlink:title="fn CallLinkAuthCredential_PresentDeterministic( &#160;&#160;&#160;&#160;credential_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;ra...">
<polygon fill="white" stroke="black" points="579,-2427.78 255,-2427.78 255,-2391.78 579,-2391.78 579,-2427.78"/>
<text text-anchor="middle" x="417" y="-2406.08" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredential_PresentDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present(). -->
<g id="node166" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().</title>
<g id="a_node166"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkSecre...">
<polygon fill="white" stroke="black" points="1422.5,-2609.78 1353.5,-2609.78 1353.5,-2573.78 1422.5,-2573.78 1422.5,-2609.78"/>
<text text-anchor="middle" x="1388" y="-2588.08" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present(). -->
<g id="edge489" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M579.28,-2408.3C624.36,-2412.17 672.59,-2420.47 715,-2436.78 725.37,-2440.76 724.78,-2447.4 735,-2451.78 901.53,-2523.03 994.23,-2407.31 1137,-2518.78 1154.57,-2532.5 1139.1,-2551.48 1157,-2564.78 1211.09,-2604.94 1292.92,-2604.09 1343,-2598.71"/>
<polygon fill="blue" stroke="blue" points="1343.66,-2602.16 1353.18,-2597.51 1342.84,-2595.21 1343.66,-2602.16"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic(). -->
<g id="node45" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic().</title>
<g id="a_node45"><a xlink:title="fn ServerPublicParams_CreateReceiptCredentialPresentationDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;receipt_credential: Serialized&lt;Receipt...">
<polygon fill="white" stroke="black" points="670,-2643.78 164,-2643.78 164,-2607.78 670,-2607.78 670,-2643.78"/>
<text text-anchor="middle" x="417" y="-2622.08" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateReceiptCredentialPresentationDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="node188" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<g id="a_node188"><a xlink:title=" &#160;&#160;&#160;pub fn create_receipt_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_credential: &amp;api::receipts::ReceiptCredential, &#160;&#160;&#160;&#160;) &#45;&gt; api::receipts::ReceiptCre...">
<polygon fill="white" stroke="black" points="1077,-3183.78 795,-3183.78 795,-3147.78 1077,-3147.78 1077,-3183.78"/>
<text text-anchor="middle" x="936" y="-3162.08" font-family="Helvetica,sans-Serif" font-size="14.00">create_receipt_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="edge490" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.37,-2607.76C563.41,-2596.98 659.94,-2594.92 715,-2652.78 752.26,-2691.93 698.6,-3098.82 735,-3138.78 748.52,-3153.62 766.02,-3163.17 785.03,-3169.06"/>
<polygon fill="blue" stroke="blue" points="784.21,-3172.46 794.78,-3171.73 786.06,-3165.71 784.21,-3172.46"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts(). -->
<g id="node46" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts().</title>
<g id="a_node46"><a xlink:title="fn GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts( &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;concatenated_group_member_ciphertexts: &amp;[u8], &#160;&#160;&#160;&#160;local_user_ciphertext: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;...">
<polygon fill="white" stroke="black" points="678,-1725.78 156,-1725.78 156,-1689.78 678,-1689.78 678,-1725.78"/>
<text text-anchor="middle" x="417" y="-1704.08" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts(). -->
<g id="node185" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().</title>
<g id="a_node185"><a xlink:title=" &#160;&#160;&#160;pub fn receive_with_ciphertexts( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;member_ciphertexts: impl IntoIterator&lt;Item = UuidCiphertext&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root_public_key: impl AsRef&lt;zkcredential::endor...">
<polygon fill="white" stroke="black" points="1029.5,-875.78 842.5,-875.78 842.5,-839.78 1029.5,-839.78 1029.5,-875.78"/>
<text text-anchor="middle" x="936" y="-854.08" font-family="Helvetica,sans-Serif" font-size="14.00">receive_with_ciphertexts</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts(). -->
<g id="edge526" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.26,-1725.78C562.52,-1736.88 660.05,-1739.45 715,-1680.78 745.24,-1648.49 705.47,-917.71 735,-884.78 759.21,-857.77 796.54,-848.19 832.43,-846.36"/>
<polygon fill="blue" stroke="blue" points="832.61,-849.85 842.5,-846.04 832.39,-842.86 832.61,-849.85"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message(). -->
<g id="node47" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message().</title>
<g id="a_node47"><a xlink:title=" &#160;&#160;&#160;pub fn verify_signature_for_multipart_message( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[&amp;[u8]], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature: &amp;[u8], &#160;&#160;&#160;&#160;) &#45;&gt; bool { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match &amp;self.key { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;PublicKeyData::DjbPublicKey...">
<polygon fill="white" stroke="black" points="2325.5,-6392.78 2032.5,-6392.78 2032.5,-6356.78 2325.5,-6356.78 2325.5,-6392.78"/>
<text text-anchor="middle" x="2179" y="-6371.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify_signature_for_multipart_message</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature(). -->
<g id="node52" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().</title>
<g id="a_node52"><a xlink:title=" &#160;&#160;&#160;pub fn verify_signature( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;their_public_key: &amp;[u8; PUBLIC_KEY_LENGTH], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[&amp;[u8]], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature: &amp;[u8; SIGNATURE_LENGTH], &#160;&#160;&#160;&#160;) &#45;&gt; bool { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mont_point = Montgom...">
<polygon fill="white" stroke="black" points="2520,-6086.78 2392,-6086.78 2392,-6050.78 2520,-6050.78 2520,-6086.78"/>
<text text-anchor="middle" x="2456" y="-6065.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature(). -->
<g id="edge20" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2323.35,-6356.76C2331.38,-6351.88 2338.72,-6345.95 2345,-6338.78 2380.69,-6298.01 2330.9,-6137.88 2365,-6095.78 2369.8,-6089.85 2375.85,-6085.19 2382.53,-6081.52"/>
<polygon fill="blue" stroke="blue" points="2384.39,-6084.52 2391.97,-6077.13 2381.43,-6078.18 2384.39,-6084.52"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message(). -->
<g id="node48" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message().</title>
<g id="a_node48"><a xlink:title=" &#160;&#160;&#160;pub fn calculate_signature_for_multipart_message&lt;R: CryptoRng + Rng&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[&amp;[u8]], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;csprng: &amp;mut R, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Box&lt;[u8]&gt;, CurveError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match self....">
<polygon fill="white" stroke="black" points="2337,-6329.78 2021,-6329.78 2021,-6293.78 2337,-6293.78 2337,-6329.78"/>
<text text-anchor="middle" x="2179" y="-6308.08" font-family="Helvetica,sans-Serif" font-size="14.00">calculate_signature_for_multipart_message</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature(). -->
<g id="node54" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature().</title>
<g id="a_node54"><a xlink:title=" &#160;&#160;&#160;pub fn calculate_signature&lt;R&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;csprng: &amp;mut R, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[&amp;[u8]], &#160;&#160;&#160;&#160;) &#45;&gt; [u8; SIGNATURE_LENGTH] &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;R: CryptoRng + Rng, &#160;&#160;&#160;&#160;{ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut random_...">
<polygon fill="white" stroke="black" points="2531,-6140.78 2381,-6140.78 2381,-6104.78 2531,-6104.78 2531,-6140.78"/>
<text text-anchor="middle" x="2456" y="-6119.08" font-family="Helvetica,sans-Serif" font-size="14.00">calculate_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature(). -->
<g id="edge118" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2206.37,-6293.65C2256.26,-6259.36 2364.47,-6185 2420.23,-6146.67"/>
<polygon fill="blue" stroke="blue" points="2422.45,-6149.39 2428.71,-6140.84 2418.49,-6143.62 2422.45,-6149.39"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature(). -->
<g id="node49" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature().</title>
<g id="a_node49"><a xlink:title=" &#160;&#160;&#160;pub fn calculate_signature&lt;R: CryptoRng + Rng&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;csprng: &amp;mut R, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Box&lt;[u8]&gt;, CurveError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.calculate_signature_for_multipa...">
<polygon fill="white" stroke="black" points="1891,-6327.78 1741,-6327.78 1741,-6291.78 1891,-6291.78 1891,-6327.78"/>
<text text-anchor="middle" x="1816" y="-6306.08" font-family="Helvetica,sans-Serif" font-size="14.00">calculate_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message(). -->
<g id="edge127" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1891.36,-6310.19C1926.04,-6310.38 1968.83,-6310.62 2010.67,-6310.85"/>
<polygon fill="blue" stroke="blue" points="2010.69,-6314.35 2020.71,-6310.9 2010.73,-6307.35 2010.69,-6314.35"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature(). -->
<g id="node50" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature().</title>
<g id="a_node50"><a xlink:title=" &#160;&#160;&#160;pub fn verify_signature(&amp;self, message: &amp;[u8], signature: &amp;[u8]) &#45;&gt; bool { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.verify_signature_for_multipart_message(&amp;[message], signature) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1880,-6401.78 1752,-6401.78 1752,-6365.78 1880,-6365.78 1880,-6401.78"/>
<text text-anchor="middle" x="1816" y="-6380.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message(). -->
<g id="edge223" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1880.29,-6382.2C1919.64,-6381.22 1972.09,-6379.91 2021.99,-6378.67"/>
<polygon fill="blue" stroke="blue" points="2022.35,-6382.16 2032.26,-6378.41 2022.17,-6375.16 2022.35,-6382.16"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/tests/test_large_signatures(). -->
<g id="node51" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/tests/test_large_signatures().</title>
<g id="a_node51"><a xlink:title=" &#160;&#160;&#160;fn test_large_signatures() &#45;&gt; Result&lt;(), CurveError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut csprng = OsRng.unwrap_err(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let key_pair = KeyPair::generate(&amp;mut csprng); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut message = [0u8; 1024 * 10...">
<polygon fill="white" stroke="black" points="1470,-6382.78 1306,-6382.78 1306,-6346.78 1470,-6346.78 1470,-6382.78"/>
<text text-anchor="middle" x="1388" y="-6361.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_large_signatures</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/tests/test_large_signatures().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message(). -->
<g id="edge282" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/tests/test_large_signatures().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1468.99,-6382.8C1519.69,-6393.28 1586.84,-6405.45 1647,-6410.78 1796.64,-6424.01 1835.42,-6424.61 1985,-6410.78 2019.45,-6407.59 2056.92,-6401.27 2089.6,-6394.8"/>
<polygon fill="blue" stroke="blue" points="2090.47,-6398.2 2099.58,-6392.8 2089.09,-6391.34 2090.47,-6398.2"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/tests/test_large_signatures().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message(). -->
<g id="edge279" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/tests/test_large_signatures().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1470.07,-6361.79C1609.1,-6356.53 1887.49,-6345.37 1985,-6336.78 2002.97,-6335.19 2021.85,-6333.18 2040.46,-6330.99"/>
<polygon fill="blue" stroke="blue" points="2040.95,-6334.46 2050.47,-6329.79 2040.12,-6327.51 2040.95,-6334.46"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/tests/test_large_signatures().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature(). -->
<g id="edge281" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/tests/test_large_signatures().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1470.13,-6354.3C1544.87,-6344.65 1655.32,-6330.39 1730.97,-6320.62"/>
<polygon fill="blue" stroke="blue" points="1731.47,-6324.09 1740.94,-6319.34 1730.57,-6317.15 1731.47,-6324.09"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/tests/test_large_signatures().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature(). -->
<g id="edge280" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/tests/test_large_signatures().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1470.13,-6368.39C1548.41,-6371.89 1665.85,-6377.12 1741.46,-6380.5"/>
<polygon fill="blue" stroke="blue" points="1741.7,-6384.01 1751.85,-6380.96 1742.01,-6377.02 1741.7,-6384.01"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order(). -->
<g id="edge212" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().</title>
<path fill="none" stroke="blue" d="M2488.95,-6050.65C2524.42,-6030.53 2581.75,-5998.02 2620.49,-5976.04"/>
<polygon fill="blue" stroke="blue" points="2622.46,-5978.94 2629.43,-5970.96 2619.01,-5972.85 2622.46,-5978.94"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash(). -->
<g id="edge213" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash().</title>
<path fill="none" stroke="blue" d="M2487.71,-6050.53C2504.56,-6039.3 2524.85,-6023.66 2539,-6005.78 2563.19,-5975.2 2545.82,-5951.64 2575,-5925.78 2584.29,-5917.54 2596.07,-5911.82 2607.92,-5907.84"/>
<polygon fill="blue" stroke="blue" points="2609.26,-5911.1 2617.85,-5904.89 2607.26,-5904.39 2609.26,-5911.1"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/tests/test_random_signatures(). -->
<g id="node53" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/tests/test_random_signatures().</title>
<g id="a_node53"><a xlink:title=" &#160;&#160;&#160;fn test_random_signatures() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut csprng = OsRng.unwrap_err(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for _ in 0..50 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut message = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;csprng.fill_bytes(&amp;mut message); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="2270.5,-6140.78 2087.5,-6140.78 2087.5,-6104.78 2270.5,-6104.78 2270.5,-6140.78"/>
<text text-anchor="middle" x="2179" y="-6119.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_random_signatures</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/tests/test_random_signatures().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature(). -->
<g id="edge217" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/tests/test_random_signatures().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2270.58,-6109.27C2294.82,-6105.29 2320.97,-6100.68 2345,-6095.78 2357.01,-6093.32 2369.69,-6090.46 2382.01,-6087.54"/>
<polygon fill="blue" stroke="blue" points="2382.88,-6090.93 2391.79,-6085.19 2381.25,-6084.13 2382.88,-6090.93"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/tests/test_random_signatures().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature(). -->
<g id="edge216" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/tests/test_random_signatures().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2270.81,-6122.78C2302.99,-6122.78 2339.05,-6122.78 2370.68,-6122.78"/>
<polygon fill="blue" stroke="blue" points="2370.78,-6126.28 2380.78,-6122.78 2370.78,-6119.28 2370.78,-6126.28"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order(). -->
<g id="edge299" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().</title>
<path fill="none" stroke="blue" d="M2522.98,-6104.67C2528.59,-6102.07 2534.02,-6099.11 2539,-6095.78 2585.22,-6064.81 2624.13,-6011.81 2645.02,-5979.76"/>
<polygon fill="blue" stroke="blue" points="2648.23,-5981.24 2650.67,-5970.93 2642.33,-5977.47 2648.23,-5981.24"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash(). -->
<g id="edge300" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]calculate_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash().</title>
<path fill="none" stroke="blue" d="M2528.87,-6104.63C2532.58,-6102.06 2536,-6099.12 2539,-6095.78 2590.54,-6038.26 2523.01,-5982.89 2575,-5925.78 2583.69,-5916.23 2595.7,-5910.03 2608,-5906.01"/>
<polygon fill="blue" stroke="blue" points="2609.2,-5909.31 2617.88,-5903.23 2607.3,-5902.57 2609.2,-5909.31"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/tests/test_signature(). -->
<g id="node55" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/tests/test_signature().</title>
<g id="a_node55"><a xlink:title=" &#160;&#160;&#160;fn test_signature() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let alice_identity_private: [u8; PRIVATE_KEY_LENGTH] = [ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0xc0, 0x97, 0x24, 0x84, 0x12, 0xe5, 0x8b, 0xf0, 0x5d, 0xf4, 0x87, 0x96, 0x82, 0x05, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;0...">
<polygon fill="white" stroke="black" points="2236.5,-6086.78 2121.5,-6086.78 2121.5,-6050.78 2236.5,-6050.78 2236.5,-6086.78"/>
<text text-anchor="middle" x="2179" y="-6065.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature(). -->
<g id="edge461" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2236.65,-6068.78C2278.6,-6068.78 2336.13,-6068.78 2381.6,-6068.78"/>
<polygon fill="blue" stroke="blue" points="2381.7,-6072.28 2391.7,-6068.78 2381.7,-6065.28 2381.7,-6072.28"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 verify/evaluate_vrf_proof(). -->
<g id="node56" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 verify/evaluate_vrf_proof().</title>
<g id="a_node56"><a xlink:title="fn evaluate_vrf_proof( &#160;&#160;&#160;&#160;proof: &amp;[u8], &#160;&#160;&#160;&#160;vrf_key: &amp;vrf::PublicKey, &#160;&#160;&#160;&#160;search_key: &amp;[u8], ) &#45;&gt; Result&lt;[u8; 32]&gt; { &#160;&#160;&#160;&#160;let proof = proof.try_into().map_err(|_| MalformedProof)?; &#160;&#160;&#160;&#160;Ok(vrf_key.proo...">
<polygon fill="white" stroke="black" points="1888.5,-5866.78 1743.5,-5866.78 1743.5,-5830.78 1888.5,-5830.78 1888.5,-5866.78"/>
<text text-anchor="middle" x="1816" y="-5845.08" font-family="Helvetica,sans-Serif" font-size="14.00">evaluate_vrf_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash(). -->
<g id="node59" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().</title>
<g id="a_node59"><a xlink:title=" &#160;&#160;&#160;pub fn proof_to_hash(&amp;self, m: &amp;[u8], proof: &amp;[u8; 80]) &#45;&gt; Result&lt;[u8; 32]&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Decode proof into its component parts: gamma, c, and s. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let gamma = CompressedEdwardsY(proof[..32]....">
<polygon fill="white" stroke="black" points="2235.5,-5951.78 2122.5,-5951.78 2122.5,-5915.78 2235.5,-5915.78 2235.5,-5951.78"/>
<text text-anchor="middle" x="2179" y="-5930.08" font-family="Helvetica,sans-Serif" font-size="14.00">proof_to_hash</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 verify/evaluate_vrf_proof().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 verify/evaluate_vrf_proof().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1882.93,-5866.85C1922.77,-5877.54 1974.66,-5891.04 2021,-5901.78 2050.81,-5908.68 2083.98,-5915.56 2112.13,-5921.16"/>
<polygon fill="blue" stroke="blue" points="2111.77,-5924.66 2122.26,-5923.16 2113.13,-5917.79 2111.77,-5924.66"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/tests/test_proof_to_hash_fails(). -->
<g id="node57" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/tests/test_proof_to_hash_fails().</title>
<g id="a_node57"><a xlink:title=" &#160;&#160;&#160;fn test_proof_to_hash_fails() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for v in TEST_VECTORS { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let pk = PublicKey::try_from(v.pk).unwrap(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert!(pk.proof_to_hash(b&#39; a&#39; , &amp;v.pi).is_err()); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1907,-5949.78 1725,-5949.78 1725,-5913.78 1907,-5913.78 1907,-5949.78"/>
<text text-anchor="middle" x="1816" y="-5928.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_proof_to_hash_fails</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/tests/test_proof_to_hash_fails().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash(). -->
<g id="edge171" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/tests/test_proof_to_hash_fails().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1907.16,-5932.28C1970.9,-5932.63 2054.88,-5933.09 2112.32,-5933.41"/>
<polygon fill="blue" stroke="blue" points="2112.35,-5936.91 2122.37,-5933.47 2112.39,-5929.91 2112.35,-5936.91"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/tests/test_proof_to_hash(). -->
<g id="node58" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/tests/test_proof_to_hash().</title>
<g id="a_node58"><a xlink:title=" &#160;&#160;&#160;fn test_proof_to_hash() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for v in TEST_VECTORS { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let pk = PublicKey::try_from(v.pk).unwrap(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let index = pk.proof_to_hash(v.alpha, &amp;v.pi).unwrap(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;as...">
<polygon fill="white" stroke="black" points="1889,-6003.78 1743,-6003.78 1743,-5967.78 1889,-5967.78 1889,-6003.78"/>
<text text-anchor="middle" x="1816" y="-5982.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_proof_to_hash</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/tests/test_proof_to_hash().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash(). -->
<g id="edge507" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/tests/test_proof_to_hash().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1889.19,-5975.38C1954.29,-5966 2049.21,-5952.33 2112.25,-5943.25"/>
<polygon fill="blue" stroke="blue" points="2113.07,-5946.66 2122.47,-5941.77 2112.07,-5939.74 2113.07,-5946.66"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes(). -->
<g id="edge512" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().</title>
<path fill="none" stroke="blue" d="M2232.48,-5915.69C2269.44,-5903.08 2320.12,-5886.02 2365,-5871.78 2371.27,-5869.79 2377.79,-5867.75 2384.34,-5865.74"/>
<polygon fill="blue" stroke="blue" points="2385.38,-5869.08 2393.92,-5862.81 2383.33,-5862.39 2385.38,-5869.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation(). -->
<g id="node60" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().</title>
<g id="a_node60"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn test_data_presentation() &#45;&gt; ReceiptCredentialPresentation { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const RANDOMNESS: [u8; RANDOMNESS_LEN] = [33; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let server_params = zkgroup::ServerSecretParams::gene...">
<polygon fill="white" stroke="black" points="504,-3648.78 330,-3648.78 330,-3612.78 504,-3612.78 504,-3648.78"/>
<text text-anchor="middle" x="417" y="-3627.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_data_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="edge174" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M502.42,-3648.78C569.94,-3657.75 661.83,-3656.77 715,-3600.78 746.25,-3567.86 704.3,-3226.21 735,-3192.78 748.58,-3177.98 766.11,-3168.46 785.13,-3162.59"/>
<polygon fill="blue" stroke="blue" points="786.17,-3165.94 794.89,-3159.92 784.32,-3159.18 786.17,-3165.94"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="edge177" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M504.18,-3646.55C569.77,-3653.34 658.16,-3650.52 715,-3600.78 743.88,-3575.5 706.55,-3542.53 735,-3516.78 761.72,-3492.59 799.25,-3483.48 834.59,-3481.24"/>
<polygon fill="blue" stroke="blue" points="835.15,-3484.72 844.98,-3480.77 834.83,-3477.73 835.15,-3484.72"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context(). -->
<g id="edge176" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M504.05,-3644.19C567.78,-3654.03 656.76,-3667.57 735,-3678.78 752.56,-3681.29 770.99,-3683.87 789.27,-3686.38"/>
<polygon fill="blue" stroke="blue" points="789.02,-3689.88 799.4,-3687.77 789.97,-3682.94 789.02,-3689.88"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge175" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M502.16,-3648.81C569.76,-3657.88 661.9,-3657.02 715,-3600.78 750.27,-3563.42 700.36,-3176.72 735,-3138.78 772.45,-3097.76 840.2,-3097.19 886.37,-3102.7"/>
<polygon fill="blue" stroke="blue" points="886.08,-3106.19 896.45,-3104.04 887,-3099.25 886.08,-3106.19"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="edge173" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M504.33,-3648.63C571.34,-3656.99 661.57,-3655.26 715,-3600.78 753.4,-3561.62 697.26,-3394.57 735,-3354.78 758.81,-3329.67 794.01,-3319.91 828.27,-3317.4"/>
<polygon fill="blue" stroke="blue" points="828.58,-3320.89 838.38,-3316.86 828.2,-3313.9 828.58,-3320.89"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept(). -->
<g id="node61" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().</title>
<g id="a_node61"><a xlink:title=" &#160;&#160;&#160;fn accept(&amp;mut self, visitor: &amp;mut Scrambler) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receiptCredentialPresentation, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;state: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;special_fields: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} = self; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if let...">
<polygon fill="white" stroke="black" points="448,-3897.78 386,-3897.78 386,-3861.78 448,-3861.78 448,-3897.78"/>
<text text-anchor="middle" x="417" y="-3876.08" font-family="Helvetica,sans-Serif" font-size="14.00">accept</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="edge218" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M448.35,-3887.96C509.14,-3902.3 645.92,-3923.89 715,-3849.78 764.8,-3796.35 686.1,-3247.03 735,-3192.78 748.49,-3177.8 766.02,-3168.2 785.09,-3162.3"/>
<polygon fill="blue" stroke="blue" points="786.16,-3165.64 794.88,-3159.62 784.31,-3158.89 786.16,-3165.64"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="edge221" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M448.17,-3887.79C508.62,-3901.82 644.83,-3922.86 715,-3849.78 766.34,-3796.3 684.56,-3571.1 735,-3516.78 760.06,-3489.78 798.26,-3480.41 834.58,-3478.73"/>
<polygon fill="blue" stroke="blue" points="834.87,-3482.22 844.77,-3478.45 834.68,-3475.23 834.87,-3482.22"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context(). -->
<g id="edge222" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M448.15,-3887.02C507.39,-3899.3 639.72,-3916.81 715,-3849.78 745.92,-3822.24 706.35,-3788.68 735,-3758.78 747.69,-3745.54 763.27,-3735.47 780.08,-3727.84"/>
<polygon fill="blue" stroke="blue" points="781.69,-3730.96 789.54,-3723.84 778.96,-3724.51 781.69,-3730.96"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge220" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M448.36,-3887.97C509.18,-3902.34 646,-3923.97 715,-3849.78 768.82,-3791.9 682.16,-3197.54 735,-3138.78 772.13,-3097.48 839.96,-3096.97 886.23,-3102.57"/>
<polygon fill="blue" stroke="blue" points="885.96,-3106.07 896.34,-3103.93 886.9,-3099.13 885.96,-3106.07"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="edge219" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M448.29,-3887.9C508.96,-3902.14 645.55,-3923.54 715,-3849.78 752.73,-3809.7 697.95,-3395.48 735,-3354.78 758.4,-3329.07 793.7,-3319.23 828.16,-3316.83"/>
<polygon fill="blue" stroke="blue" points="828.51,-3320.31 838.33,-3316.32 828.17,-3313.32 828.51,-3320.31"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main(). -->
<g id="node62" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().</title>
<g id="a_node62"><a xlink:title="async fn main() &#45;&gt; anyhow::Result&lt;()&gt; { &#160;&#160;&#160;&#160;env_logger::builder() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.filter_module(module_path!(), log::LevelFilter::Info) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.parse_default_env() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.init(); &#160;&#160;&#160;&#160;&#160;let Config { &#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="444,-3814.78 390,-3814.78 390,-3778.78 444,-3778.78 444,-3814.78"/>
<text text-anchor="middle" x="417" y="-3793.08" font-family="Helvetica,sans-Serif" font-size="14.00">main</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge258" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M444.12,-3803.14C501.13,-3815.32 637.74,-3835.09 715,-3766.78 745.05,-3740.21 705.4,-3705.84 735,-3678.78 742.56,-3671.86 751.01,-3666.17 760.04,-3661.52"/>
<polygon fill="blue" stroke="blue" points="761.67,-3664.62 769.25,-3657.21 758.71,-3658.28 761.67,-3664.62"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge257" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M444.08,-3803.8C502.23,-3817.71 643,-3841.34 715,-3766.78 762.03,-3718.07 688.79,-3512.26 735,-3462.78 748.18,-3448.66 764.97,-3439.37 783.19,-3433.48"/>
<polygon fill="blue" stroke="blue" points="784.19,-3436.83 792.84,-3430.7 782.26,-3430.1 784.19,-3436.83"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests(). -->
<g id="node63" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests().</title>
<g id="a_node63"><a xlink:title=" &#160;&#160;&#160;async fn test_unsuccessful_requests( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: chat::Response, &#160;&#160;&#160;&#160;) &#45;&gt; RequestError&lt;ProfileKeyCredentialRequestError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let randomness = zkgroup::TEST_ARRAY_32; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let server...">
<polygon fill="white" stroke="black" points="520.5,-4279.78 313.5,-4279.78 313.5,-4243.78 520.5,-4243.78 520.5,-4279.78"/>
<text text-anchor="middle" x="417" y="-4258.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_unsuccessful_requests</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge236" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M501.58,-4279.82C569.31,-4289.04 661.92,-4288.39 715,-4231.78 757.05,-4186.92 693.71,-3724.33 735,-3678.78 742.31,-3670.71 750.79,-3664.2 760.06,-3659"/>
<polygon fill="blue" stroke="blue" points="761.81,-3662.03 769.16,-3654.4 758.66,-3655.78 761.81,-3662.03"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge235" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M499.81,-4279.78C567.87,-4289.44 661.9,-4289.44 715,-4231.78 756.14,-4187.1 694.61,-3184.13 735,-3138.78 771.93,-3097.3 839.81,-3096.83 886.15,-3102.49"/>
<polygon fill="blue" stroke="blue" points="885.89,-3105.99 896.27,-3103.87 886.83,-3099.05 885.89,-3105.99"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request(). -->
<g id="node64" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().</title>
<g id="a_node64"><a xlink:title=" &#160;&#160;&#160;async fn test_successful_request() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let randomness = zkgroup::TEST_ARRAY_32; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let server_params = zkgroup::ServerSecretParams::generate(randomness); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let aci = Aci::parse_fr...">
<polygon fill="white" stroke="black" points="508,-4333.78 326,-4333.78 326,-4297.78 508,-4297.78 508,-4333.78"/>
<text text-anchor="middle" x="417" y="-4312.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_successful_request</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment(). -->
<g id="node187" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment().</title>
<g id="a_node187"><a xlink:title=" &#160;&#160;&#160;pub fn get_commitment( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;) &#45;&gt; api::profiles::ProfileKeyCommitment { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let uid_bytes = uuid::Uuid::from(user_id).into_bytes(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;l...">
<polygon fill="white" stroke="black" points="1003,-5543.78 869,-5543.78 869,-5507.78 1003,-5507.78 1003,-5543.78"/>
<text text-anchor="middle" x="936" y="-5522.08" font-family="Helvetica,sans-Serif" font-size="14.00">get_commitment</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment(). -->
<g id="edge430" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M508.25,-4304.48C576.07,-4301.56 665.47,-4310.68 715,-4368.78 755.63,-4416.43 693.72,-5448.69 735,-5495.78 765,-5529.99 815.89,-5537.25 858.82,-5536.08"/>
<polygon fill="blue" stroke="blue" points="859.14,-5539.57 868.98,-5535.65 858.84,-5532.58 859.14,-5539.57"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge433" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.82,-4333.79C562.97,-4344.73 660.01,-4347.05 715,-4288.78 761.54,-4239.46 689.54,-3729.1 735,-3678.78 742.3,-3670.7 750.77,-3664.18 760.02,-3658.97"/>
<polygon fill="blue" stroke="blue" points="761.78,-3662 769.12,-3654.36 758.62,-3655.76 761.78,-3662"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge432" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.28,-4333.79C562.54,-4344.9 660.08,-4347.47 715,-4288.78 746.36,-4255.26 704.38,-3496.97 735,-3462.78 747.99,-3448.27 764.76,-3438.8 783.06,-3432.84"/>
<polygon fill="blue" stroke="blue" points="784.12,-3436.18 792.76,-3430.04 782.18,-3429.45 784.12,-3436.18"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="edge434" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.3,-4333.81C562.58,-4344.94 660.13,-4347.51 715,-4288.78 748.38,-4253.04 702.4,-3445.23 735,-3408.78 749.63,-3392.41 769.08,-3382.44 790.12,-3376.71"/>
<polygon fill="blue" stroke="blue" points="790.97,-3380.11 799.88,-3374.37 789.34,-3373.3 790.97,-3380.11"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge431" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.04,-4333.83C562.39,-4345.04 660.19,-4347.75 715,-4288.78 758.5,-4241.97 692.53,-3186.52 735,-3138.78 771.91,-3097.28 839.79,-3096.82 886.14,-3102.49"/>
<polygon fill="blue" stroke="blue" points="885.88,-3105.98 896.26,-3103.86 886.82,-3099.05 885.88,-3105.98"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/test/do_backup_fails_with_the_first_error(). -->
<g id="node65" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/test/do_backup_fails_with_the_first_error().</title>
<g id="a_node65"><a xlink:title=" &#160;&#160;&#160;async fn do_backup_fails_with_the_first_error() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let backup = do_prepare::&lt;TestEnv&gt;(b&#39; &#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let result = do_backup::&lt;TestEnv&gt;(NotConnectedResults, &amp;backup).await; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_m...">
<polygon fill="white" stroke="black" points="1069,-5078.78 803,-5078.78 803,-5042.78 1069,-5042.78 1069,-5078.78"/>
<text text-anchor="middle" x="936" y="-5057.08" font-family="Helvetica,sans-Serif" font-size="14.00">do_backup_fails_with_the_first_error</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_prepare(). -->
<g id="node67" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_prepare().</title>
<g id="a_node67"><a xlink:title="pub fn do_prepare&lt;Env: PpssSetup&gt;(password: &amp;[u8]) &#45;&gt; Backup4 { &#160;&#160;&#160;&#160;let server_ids = Env::server_ids(); &#160;&#160;&#160;&#160;let mut rng = OsRng.unwrap_err(); &#160;&#160;&#160;&#160;Backup4::new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_ids.as_ref(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pas...">
<polygon fill="white" stroke="black" points="1435,-5078.78 1341,-5078.78 1341,-5042.78 1435,-5042.78 1435,-5078.78"/>
<text text-anchor="middle" x="1388" y="-5057.08" font-family="Helvetica,sans-Serif" font-size="14.00">do_prepare</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/test/do_backup_fails_with_the_first_error().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_prepare(). -->
<g id="edge48" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/test/do_backup_fails_with_the_first_error().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_prepare().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1069.28,-5060.78C1156.28,-5060.78 1265.71,-5060.78 1330.8,-5060.78"/>
<polygon fill="blue" stroke="blue" points="1330.86,-5064.28 1340.86,-5060.78 1330.86,-5057.28 1330.86,-5064.28"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_restore(). -->
<g id="node66" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_restore().</title>
<g id="a_node66"><a xlink:title="pub async fn do_restore&lt;Env: PpssSetup&gt;( &#160;&#160;&#160;&#160;connect_results: impl IntoConnectionResults, &#160;&#160;&#160;&#160;password: &amp;[u8], ) &#45;&gt; Result&lt;Secret, Error&gt; { &#160;&#160;&#160;&#160;let mut rng = OsRng.unwrap_err(); &#160;&#160;&#160;&#160;let ConnectionCont...">
<polygon fill="white" stroke="black" points="1432.5,-5132.78 1343.5,-5132.78 1343.5,-5096.78 1432.5,-5096.78 1432.5,-5132.78"/>
<text text-anchor="middle" x="1388" y="-5111.08" font-family="Helvetica,sans-Serif" font-size="14.00">do_restore</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2(). -->
<g id="node82" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().</title>
<g id="a_node82"><a xlink:title=" &#160;&#160;&#160;pub fn restore2&lt;R: Rng + CryptoRng&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;responses1_bytes: &amp;[Vec&lt;u8&gt;], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;handshake_hashes: &amp;[&amp;[u8]], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rng: &amp;mut R, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Restore2&lt;&#39;a&gt;, Error&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if ...">
<polygon fill="white" stroke="black" points="1853,-5671.78 1779,-5671.78 1779,-5635.78 1853,-5635.78 1853,-5671.78"/>
<text text-anchor="middle" x="1816" y="-5650.08" font-family="Helvetica,sans-Serif" font-size="14.00">restore2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2(). -->
<g id="edge153" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1425.87,-5133.01C1479.02,-5161.5 1575.54,-5222.01 1619,-5304.78 1652.39,-5368.37 1598.09,-5574.18 1647,-5626.78 1677.34,-5659.4 1730.24,-5662.96 1768.59,-5660.37"/>
<polygon fill="blue" stroke="blue" points="1769.32,-5663.82 1778.99,-5659.5 1768.73,-5656.85 1769.32,-5663.82"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]new(). -->
<g id="node88" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]new().</title>
<g id="a_node88"><a xlink:title=" &#160;&#160;&#160;pub fn new&lt;R: Rng + CryptoRng&gt;(server_ids: &amp;&#39;a [u64], password: &amp;[u8], rng: &amp;mut R) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let blind = random_scalar(rng); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let input = password_to_uniform_input(password); &#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="2206,-5543.78 2152,-5543.78 2152,-5507.78 2206,-5507.78 2206,-5543.78"/>
<text text-anchor="middle" x="2179" y="-5522.08" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]new(). -->
<g id="edge154" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1412.09,-5132.95C1491.57,-5194.55 1763.16,-5397.05 2021,-5495.78 2060.87,-5511.04 2109.52,-5518.79 2142,-5522.55"/>
<polygon fill="blue" stroke="blue" points="2141.63,-5526.03 2151.95,-5523.63 2142.38,-5519.07 2141.63,-5526.03"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new(). -->
<g id="node85" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().</title>
<g id="a_node85"><a xlink:title=" &#160;&#160;&#160;pub fn new&lt;R: Rng + CryptoRng&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_ids: &amp;[u64], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;password: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;max_tries: NonZeroU32, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rng: &amp;mut R, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert!(!server_ids.is_empty()); &#160;&#160;...">
<polygon fill="white" stroke="black" points="1843,-5563.78 1789,-5563.78 1789,-5527.78 1843,-5527.78 1843,-5563.78"/>
<text text-anchor="middle" x="1816" y="-5542.08" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_prepare().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new(). -->
<g id="edge294" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_prepare().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1435.38,-5053.53C1485.67,-5048.33 1565.86,-5048.07 1619,-5087.78 1764.55,-5196.52 1803.21,-5435.19 1812.39,-5517.34"/>
<polygon fill="blue" stroke="blue" points="1808.93,-5517.85 1813.46,-5527.43 1815.89,-5517.12 1808.93,-5517.85"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/test/do_restore_fails_with_the_first_error(). -->
<g id="node68" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/test/do_restore_fails_with_the_first_error().</title>
<g id="a_node68"><a xlink:title=" &#160;&#160;&#160;async fn do_restore_fails_with_the_first_error() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let result = do_restore::&lt;TestEnv&gt;(NotConnectedResults, b&#39; &#39; ).await; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_matches!(result, Err(crate::svrb::Error::ConnectionT...">
<polygon fill="white" stroke="black" points="1067.5,-5132.78 804.5,-5132.78 804.5,-5096.78 1067.5,-5096.78 1067.5,-5132.78"/>
<text text-anchor="middle" x="936" y="-5111.08" font-family="Helvetica,sans-Serif" font-size="14.00">do_restore_fails_with_the_first_error</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/test/do_restore_fails_with_the_first_error().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_restore(). -->
<g id="edge469" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/test/do_restore_fails_with_the_first_error().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_restore().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1067.76,-5114.78C1156.19,-5114.78 1268.33,-5114.78 1333.44,-5114.78"/>
<polygon fill="blue" stroke="blue" points="1333.47,-5118.28 1343.47,-5114.78 1333.47,-5111.28 1333.47,-5118.28"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/traits/impl#[T][Restore]restore(). -->
<g id="node69" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/traits/impl#[T][Restore]restore().</title>
<g id="a_node69"><a xlink:title=" &#160;&#160;&#160;async fn restore(&amp;self, password: &amp;[u8]) &#45;&gt; Result&lt;Secret, Error&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ppss_ops::do_restore::&lt;T::Env&gt;(self.connect().await, password).await &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="968.5,-5269.78 903.5,-5269.78 903.5,-5233.78 968.5,-5233.78 968.5,-5269.78"/>
<text text-anchor="middle" x="936" y="-5248.08" font-family="Helvetica,sans-Serif" font-size="14.00">restore</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/traits/impl#[T][Restore]restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_restore(). -->
<g id="edge152" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/traits/impl#[T][Restore]restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_restore().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M968.73,-5250.24C1008.65,-5247.68 1078.99,-5241.1 1137,-5224.78 1213.33,-5203.29 1296.61,-5162.94 1345.19,-5137.54"/>
<polygon fill="blue" stroke="blue" points="1346.93,-5140.58 1354.14,-5132.82 1343.67,-5134.39 1346.93,-5140.58"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/traits/impl#[T][Backup]prepare(). -->
<g id="node70" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/traits/impl#[T][Backup]prepare().</title>
<g id="a_node70"><a xlink:title=" &#160;&#160;&#160;fn prepare(&amp;self, password: &amp;[u8]) &#45;&gt; Backup4 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ppss_ops::do_prepare::&lt;T::Env&gt;(password) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="971,-5215.78 901,-5215.78 901,-5179.78 971,-5179.78 971,-5215.78"/>
<text text-anchor="middle" x="936" y="-5194.08" font-family="Helvetica,sans-Serif" font-size="14.00">prepare</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/traits/impl#[T][Backup]prepare().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_prepare(). -->
<g id="edge266" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/traits/impl#[T][Backup]prepare().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;net 0.1.0 svrb/ppss_ops/do_prepare().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M971.11,-5203.11C1015.2,-5207.94 1091.65,-5208.97 1137,-5167.78 1164.13,-5143.13 1129.48,-5111.98 1157,-5087.78 1204.13,-5046.33 1279.29,-5045.39 1330.78,-5050.97"/>
<polygon fill="blue" stroke="blue" points="1330.41,-5054.45 1340.75,-5052.16 1331.24,-5047.5 1330.41,-5054.45"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice(). -->
<g id="node71" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice().</title>
<g id="a_node71"><a xlink:title=" &#160;&#160;&#160;pub fn from_slice(bytes: &amp;[u8]) &#45;&gt; Option&lt;Self&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// TODO use Iterator::array_chunks once that&#39;s stabilized. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// See https://github.com/rust&#45;lang/rust/issues/100450. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let chu...">
<polygon fill="white" stroke="black" points="2705.5,-4470.78 2619.5,-4470.78 2619.5,-4434.78 2705.5,-4434.78 2705.5,-4470.78"/>
<text text-anchor="middle" x="2662.5" y="-4449.08" font-family="Helvetica,sans-Serif" font-size="14.00">from_slice</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes(). -->
<g id="edge426" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().</title>
<path fill="none" stroke="blue" d="M2661.03,-4470.85C2656.91,-4624.09 2624.95,-5702.86 2539,-5814.78 2537.54,-5816.68 2535.94,-5818.46 2534.23,-5820.14"/>
<polygon fill="blue" stroke="blue" points="2531.65,-5817.73 2526.11,-5826.76 2536.07,-5823.15 2531.65,-5817.73"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 scalar/scalar_from_slice_wide(). -->
<g id="node72" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 scalar/scalar_from_slice_wide().</title>
<g id="a_node72"><a xlink:title="pub fn scalar_from_slice_wide(bytes: &amp;[u8]) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;let mut scalar_bytes = [0u8; 64]; &#160;&#160;&#160;&#160;scalar_bytes.copy_from_slice(bytes); &#160;&#160;&#160;&#160;Scalar::from_bytes_mod_order_wide(&amp;scalar_bytes) }">
<polygon fill="white" stroke="black" points="2265.5,-5406.78 2092.5,-5406.78 2092.5,-5370.78 2265.5,-5370.78 2265.5,-5406.78"/>
<text text-anchor="middle" x="2179" y="-5385.08" font-family="Helvetica,sans-Serif" font-size="14.00">scalar_from_slice_wide</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 scalar/scalar_from_slice_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge88" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 scalar/scalar_from_slice_wide().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="blue" d="M2265.61,-5398.97C2291.4,-5403.06 2319.59,-5408.56 2345,-5415.78 2434.72,-5441.25 2457.78,-5449.93 2539,-5495.78 2640.56,-5553.1 2689.22,-5552.24 2750,-5651.78 2801.63,-5736.34 2719.06,-5798.73 2786,-5871.78 2786.77,-5872.62 2787.56,-5873.43 2788.37,-5874.22"/>
<polygon fill="blue" stroke="blue" points="2786.28,-5877.03 2796.21,-5880.72 2790.75,-5871.64 2786.28,-5877.03"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 scalar/scalar_from_slice_canonical(). -->
<g id="node73" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 scalar/scalar_from_slice_canonical().</title>
<g id="a_node73"><a xlink:title="pub fn scalar_from_slice_canonical(bytes: &amp;[u8]) &#45;&gt; Option&lt;Scalar&gt; { &#160;&#160;&#160;&#160;let mut scalar_bytes = [0u8; 32]; &#160;&#160;&#160;&#160;scalar_bytes.copy_from_slice(bytes); &#160;&#160;&#160;&#160;Scalar::from_canonical_bytes(scalar_bytes).into(...">
<polygon fill="white" stroke="black" points="2282,-5460.78 2076,-5460.78 2076,-5424.78 2282,-5424.78 2282,-5460.78"/>
<text text-anchor="middle" x="2179" y="-5439.08" font-family="Helvetica,sans-Serif" font-size="14.00">scalar_from_slice_canonical</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 scalar/scalar_from_slice_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes(). -->
<g id="edge508" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 scalar/scalar_from_slice_canonical().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().</title>
<path fill="none" stroke="blue" d="M2282.34,-5455.39C2306.38,-5463.27 2329.48,-5475.83 2345,-5495.78 2388.62,-5551.83 2321.69,-5758.48 2365,-5814.78 2366.43,-5816.63 2367.98,-5818.37 2369.62,-5820.01"/>
<polygon fill="blue" stroke="blue" points="2367.52,-5822.81 2377.45,-5826.52 2372,-5817.43 2367.52,-5822.81"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature(). -->
<g id="node74" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().</title>
<g id="a_node74"><a xlink:title="pub fn verify_signature( &#160;&#160;&#160;&#160;signature: &amp;[u8], &#160;&#160;&#160;&#160;public_key: RistrettoPoint, &#160;&#160;&#160;&#160;message: &amp;[u8], ) &#45;&gt; Result&lt;(), PokshoError&gt; { &#160;&#160;&#160;&#160;let mut st = Statement::new(); &#160;&#160;&#160;&#160;st.add(&#39; public_key&#39; , &amp;[(&#39; pri...">
<polygon fill="white" stroke="black" points="1880,-4233.78 1752,-4233.78 1752,-4197.78 1880,-4197.78 1880,-4233.78"/>
<text text-anchor="middle" x="1816" y="-4212.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="node78" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<g id="a_node78"><a xlink:title=" &#160;&#160;&#160;pub fn verify_proof( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof_bytes: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_args: &amp;PointArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let proof = Proof::from_slice(pro...">
<polygon fill="white" stroke="black" points="2505,-2798.78 2407,-2798.78 2407,-2762.78 2505,-2762.78 2505,-2798.78"/>
<text text-anchor="middle" x="2456" y="-2777.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge107" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1880.23,-4217.89C1913.85,-4216.15 1954.42,-4209.2 1985,-4188.78 2238.55,-4019.42 2242.58,-3891.97 2345,-3604.78 2451.05,-3307.4 2456.18,-2916.56 2455.43,-2809.14"/>
<polygon fill="blue" stroke="blue" points="2458.92,-2808.78 2455.33,-2798.81 2451.92,-2808.85 2458.92,-2808.78"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/sign(). -->
<g id="node75" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/sign().</title>
<g id="a_node75"><a xlink:title="pub fn sign( &#160;&#160;&#160;&#160;private_key: Scalar, &#160;&#160;&#160;&#160;public_key: RistrettoPoint, &#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, PokshoError&gt; { &#160;&#160;&#160;&#160;let mut st = Statement::new(); &#160;&#160;&#160;&#160;st.add(&#39; pub...">
<polygon fill="white" stroke="black" points="1843,-4179.78 1789,-4179.78 1789,-4143.78 1843,-4143.78 1843,-4179.78"/>
<text text-anchor="middle" x="1816" y="-4158.08" font-family="Helvetica,sans-Serif" font-size="14.00">sign</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="node79" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<g id="a_node79"><a xlink:title=" &#160;&#160;&#160;pub fn prove( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scalar_args: &amp;ScalarArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_args: &amp;PointArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: &amp;[u8], // must be 32 bytes &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Vec&lt;u8&gt;, Poksh...">
<polygon fill="white" stroke="black" points="2207,-2798.78 2151,-2798.78 2151,-2762.78 2207,-2762.78 2207,-2798.78"/>
<text text-anchor="middle" x="2179" y="-2777.08" font-family="Helvetica,sans-Serif" font-size="14.00">prove</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/sign().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge206" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/sign().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1826.24,-4143.38C1854.13,-4087.18 1938.4,-3912.17 1985,-3758.78 2096.58,-3391.44 2159.7,-2926.39 2174.57,-2808.77"/>
<polygon fill="blue" stroke="blue" points="2178.05,-2809.14 2175.82,-2798.78 2171.1,-2808.27 2178.05,-2809.14"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature(). -->
<g id="node76" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().</title>
<g id="a_node76"><a xlink:title=" &#160;&#160;&#160;fn test_signature() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block64 = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block32 = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block100 = [0u8; 100]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..32 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;block32[i] = i as u8; &#160;&#160;...">
<polygon fill="white" stroke="black" points="1445.5,-4179.78 1330.5,-4179.78 1330.5,-4143.78 1445.5,-4143.78 1445.5,-4179.78"/>
<text text-anchor="middle" x="1388" y="-4158.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge400" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="blue" d="M1445.52,-4154.73C1497.73,-4148.5 1577.48,-4139.65 1647,-4134.78 1882.57,-4118.25 1941.85,-4115.78 2178,-4115.78 2178,-4115.78 2178,-4115.78 2457,-4115.78 2645.61,-4115.78 2677.69,-4248.57 2750,-4422.78 2780.87,-4497.15 2735.8,-5808.81 2786,-5871.78 2786.49,-5872.39 2786.99,-5872.99 2787.5,-5873.58"/>
<polygon fill="blue" stroke="blue" points="2785.1,-5876.13 2794.74,-5880.53 2789.95,-5871.08 2785.1,-5876.13"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature(). -->
<g id="edge399" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1445.57,-4168.95C1521.91,-4178.62 1657.99,-4195.87 1741.97,-4206.52"/>
<polygon fill="blue" stroke="blue" points="1741.59,-4210 1751.95,-4207.78 1742.47,-4203.05 1741.59,-4210"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/sign(). -->
<g id="edge401" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1445.57,-4161.78C1534.45,-4161.78 1704.31,-4161.78 1778.64,-4161.78"/>
<polygon fill="blue" stroke="blue" points="1778.9,-4165.28 1788.9,-4161.78 1778.9,-4158.28 1778.9,-4165.28"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement(). -->
<g id="node77" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().</title>
<g id="a_node77"><a xlink:title=" &#160;&#160;&#160;fn test_complex_statement() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block32 = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block64a = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block64b = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block64c = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut...">
<polygon fill="white" stroke="black" points="1908.5,-2778.78 1723.5,-2778.78 1723.5,-2742.78 1908.5,-2742.78 1908.5,-2778.78"/>
<text text-anchor="middle" x="1816" y="-2757.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_complex_statement</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge122" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="blue" d="M1859.36,-2742.7C2011.79,-2680.76 2534.78,-2495.8 2750,-2774.78 2855.1,-2911.01 2679.62,-5736.53 2786,-5871.78 2786.48,-5872.39 2786.98,-5872.99 2787.49,-5873.58"/>
<polygon fill="blue" stroke="blue" points="2785.07,-5876.12 2794.69,-5880.57 2789.95,-5871.09 2785.07,-5876.12"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge121" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1908.97,-2752.16C2014.63,-2743.97 2193.01,-2735.4 2345,-2753.78 2361.97,-2755.83 2380.11,-2759.6 2396.66,-2763.69"/>
<polygon fill="blue" stroke="blue" points="2396.17,-2767.18 2406.73,-2766.26 2397.91,-2760.4 2396.17,-2767.18"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge120" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1908.56,-2765.85C1983.76,-2770.01 2086.42,-2775.7 2140.74,-2778.71"/>
<polygon fill="blue" stroke="blue" points="2140.76,-2782.22 2150.94,-2779.28 2141.15,-2775.23 2140.76,-2782.22"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge133" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="blue" d="M2462.42,-2798.79C2496.79,-2914 2685.06,-3560.07 2750,-4101.78 2755.85,-4150.6 2755.43,-5833.26 2786,-5871.78 2786.49,-5872.39 2786.99,-5872.99 2787.5,-5873.58"/>
<polygon fill="blue" stroke="blue" points="2785.09,-5876.12 2794.72,-5880.54 2789.95,-5871.08 2785.09,-5876.12"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice(). -->
<g id="edge132" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 proof/impl#[Proof]from_slice().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2459.23,-2798.98C2479.57,-2965.35 2633.07,-4220.34 2658.06,-4424.69"/>
<polygon fill="blue" stroke="blue" points="2654.59,-4425.14 2659.28,-4434.64 2661.54,-4424.29 2654.59,-4425.14"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge142" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="blue" d="M2207.47,-2768.39C2271.44,-2741.57 2432.97,-2685.82 2539,-2753.78 2728.03,-2874.93 2700.52,-2993.77 2750,-3212.78 2766.28,-3284.83 2740.28,-5813.76 2786,-5871.78 2786.48,-5872.39 2786.98,-5872.99 2787.49,-5873.58"/>
<polygon fill="blue" stroke="blue" points="2785.08,-5876.12 2794.7,-5880.56 2789.95,-5871.09 2785.08,-5876.12"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge141" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2207.12,-2780.78C2250.97,-2780.78 2338.39,-2780.78 2396.81,-2780.78"/>
<polygon fill="blue" stroke="blue" points="2397,-2784.28 2407,-2780.78 2397,-2777.28 2397,-2784.28"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 identity_key/impl#[IdentityKey]verify_alternate_identity(). -->
<g id="node80" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 identity_key/impl#[IdentityKey]verify_alternate_identity().</title>
<g id="a_node80"><a xlink:title=" &#160;&#160;&#160;pub fn verify_alternate_identity(&amp;self, other: &amp;IdentityKey, signature: &amp;[u8]) &#45;&gt; Result&lt;bool&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Ok(self.public_key.verify_signature_for_multipart_message( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;[ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;A...">
<polygon fill="white" stroke="black" points="1907.5,-6244.78 1724.5,-6244.78 1724.5,-6208.78 1907.5,-6208.78 1907.5,-6244.78"/>
<text text-anchor="middle" x="1816" y="-6223.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify_alternate_identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 identity_key/impl#[IdentityKey]verify_alternate_identity().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message(). -->
<g id="edge49" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 identity_key/impl#[IdentityKey]verify_alternate_identity().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PublicKey]verify_signature_for_multipart_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1907.79,-6242.68C1934.61,-6250.58 1962.73,-6262.34 1985,-6279.78 2009.19,-6298.71 1996.07,-6320.82 2021,-6338.78 2028.5,-6344.18 2036.68,-6348.78 2045.24,-6352.71"/>
<polygon fill="blue" stroke="blue" points="2044.09,-6356.02 2054.66,-6356.71 2046.82,-6349.58 2044.09,-6356.02"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 identity_key/impl#[IdentityKeyPair]sign_alternate_identity(). -->
<g id="node81" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 identity_key/impl#[IdentityKeyPair]sign_alternate_identity().</title>
<g id="a_node81"><a xlink:title=" &#160;&#160;&#160;pub fn sign_alternate_identity&lt;R: Rng + CryptoRng&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;other: &amp;IdentityKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rng: &amp;mut R, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Box&lt;[u8]&gt;&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Ok(self.private_key.calculate_signature_fo...">
<polygon fill="white" stroke="black" points="1902.5,-6190.78 1729.5,-6190.78 1729.5,-6154.78 1902.5,-6154.78 1902.5,-6190.78"/>
<text text-anchor="middle" x="1816" y="-6169.08" font-family="Helvetica,sans-Serif" font-size="14.00">sign_alternate_identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 identity_key/impl#[IdentityKeyPair]sign_alternate_identity().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message(). -->
<g id="edge301" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;protocol 0.1.0 identity_key/impl#[IdentityKeyPair]sign_alternate_identity().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/impl#[PrivateKey]calculate_signature_for_multipart_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1902.86,-6170.72C1931.4,-6173.92 1961.78,-6181.99 1985,-6199.78 2015.95,-6223.48 1990.55,-6255.43 2021,-6279.78 2025.17,-6283.11 2029.6,-6286.12 2034.22,-6288.85"/>
<polygon fill="blue" stroke="blue" points="2032.87,-6292.09 2043.34,-6293.74 2036.18,-6285.93 2032.87,-6292.09"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge42" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="blue" d="M1853.12,-5650.47C1889.86,-5649.03 1946.7,-5652.33 1985,-5680.78 2014.36,-5702.58 1990.86,-5734.06 2021,-5754.78 2155.01,-5846.87 2588.92,-5795.56 2750,-5817.78 2785.65,-5822.69 2825.91,-5830.57 2854.44,-5836.55"/>
<polygon fill="blue" stroke="blue" points="2853.88,-5840.01 2864.38,-5838.66 2855.33,-5833.16 2853.88,-5840.01"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash(). -->
<g id="edge41" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash().</title>
<path fill="none" stroke="blue" d="M1853.02,-5649C1890.78,-5646.14 1949.44,-5648.09 1985,-5680.78 2033.88,-5725.72 1973.74,-5779.13 2021,-5825.78 2126.26,-5929.68 2219.15,-5824.06 2345,-5901.78 2356.81,-5909.07 2352.43,-5919.89 2365,-5925.78 2435.03,-5958.58 2462.12,-5934.15 2539,-5925.78 2561.9,-5923.28 2586.78,-5918.24 2608.1,-5913.18"/>
<polygon fill="blue" stroke="blue" points="2609.05,-5916.55 2617.94,-5910.79 2607.4,-5909.75 2609.05,-5916.55"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 random_scalar(). -->
<g id="node83" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 random_scalar().</title>
<g id="a_node83"><a xlink:title="fn random_scalar&lt;R: Rng + CryptoRng&gt;(r: &amp;mut R) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;let mut scalar_bytes = [0u8; 64]; &#160;&#160;&#160;&#160;r.fill_bytes(&amp;mut scalar_bytes); &#160;&#160;&#160;&#160;Scalar::from_bytes_mod_order_wide(&amp;scalar_bytes) }">
<polygon fill="white" stroke="black" points="2515.5,-5617.78 2396.5,-5617.78 2396.5,-5581.78 2515.5,-5581.78 2515.5,-5617.78"/>
<text text-anchor="middle" x="2456" y="-5596.08" font-family="Helvetica,sans-Serif" font-size="14.00">random_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 random_scalar(). -->
<g id="edge44" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 random_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1853.34,-5660.06C1894.03,-5666.74 1962,-5676.89 2021,-5680.78 2092.84,-5685.51 2276.6,-5703.24 2345,-5680.78 2378.37,-5669.82 2409.94,-5644.43 2430.63,-5624.98"/>
<polygon fill="blue" stroke="blue" points="2433.24,-5627.32 2438,-5617.86 2428.38,-5622.29 2433.24,-5627.32"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_commitments(). -->
<g id="node89" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_commitments().</title>
<g id="a_node89"><a xlink:title="fn auth_commitments( &#160;&#160;&#160;&#160;server_ids: &amp;[u64], &#160;&#160;&#160;&#160;input: &amp;[u8; 64], &#160;&#160;&#160;&#160;auth_pt: &amp;RistrettoPoint, ) &#45;&gt; Vec&lt;(Scalar, RistrettoPoint)&gt; { &#160;&#160;&#160;&#160;let k_auth = auth_secret(input, auth_pt); &#160;&#160;&#160;&#160;server_ids &#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="2254,-5671.78 2104,-5671.78 2104,-5635.78 2254,-5635.78 2254,-5671.78"/>
<text text-anchor="middle" x="2179" y="-5650.08" font-family="Helvetica,sans-Serif" font-size="14.00">auth_commitments</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_commitments(). -->
<g id="edge43" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_commitments().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1853.27,-5653.78C1909.14,-5653.78 2017.76,-5653.78 2093.94,-5653.78"/>
<polygon fill="blue" stroke="blue" points="2094,-5657.28 2104,-5653.78 2094,-5650.28 2094,-5657.28"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 random_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge84" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 random_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="blue" d="M2502.28,-5617.79C2565.67,-5645.1 2680.82,-5702.64 2750,-5784.78 2776.96,-5816.78 2754.37,-5844.37 2786,-5871.78 2787.33,-5872.93 2788.71,-5874.04 2790.12,-5875.1"/>
<polygon fill="blue" stroke="blue" points="2788.31,-5878.1 2798.59,-5880.67 2792.16,-5872.25 2788.31,-5878.1"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/to_ristretto_scalar(). -->
<g id="node84" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/to_ristretto_scalar().</title>
<g id="a_node84"><a xlink:title=" &#160;&#160;&#160;fn to_ristretto_scalar(b: &amp;[u8]) &#45;&gt; Option&lt;Scalar&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar::from_canonical_bytes(b.try_into().ok()?).into_option() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2249,-5745.78 2109,-5745.78 2109,-5709.78 2249,-5709.78 2249,-5745.78"/>
<text text-anchor="middle" x="2179" y="-5724.08" font-family="Helvetica,sans-Serif" font-size="14.00">to_ristretto_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/to_ristretto_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes(). -->
<g id="edge87" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/to_ristretto_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_canonical_bytes().</title>
<path fill="none" stroke="blue" d="M2215.26,-5745.88C2252.08,-5764.43 2311.78,-5793.48 2365,-5814.78 2372.39,-5817.73 2380.2,-5820.64 2388.01,-5823.42"/>
<polygon fill="blue" stroke="blue" points="2386.91,-5826.74 2397.5,-5826.73 2389.21,-5820.13 2386.91,-5826.74"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 random_scalar(). -->
<g id="edge91" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 random_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.1,-5546.82C1942.62,-5550.84 2295.17,-5565.45 2345,-5572.78 2358.54,-5574.77 2372.85,-5577.67 2386.51,-5580.84"/>
<polygon fill="blue" stroke="blue" points="2385.78,-5584.27 2396.32,-5583.19 2387.41,-5577.46 2385.78,-5584.27"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 scalars_summing_to(). -->
<g id="node86" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 scalars_summing_to().</title>
<g id="a_node86"><a xlink:title="fn scalars_summing_to&lt;R: Rng + CryptoRng&gt;(n: NonZeroUsize, s: &amp;Scalar, rng: &amp;mut R) &#45;&gt; Vec&lt;Scalar&gt; { &#160;&#160;&#160;&#160;let mut v: Vec&lt;Scalar&gt; = repeat_with(|| random_scalar(rng)) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.take(n.get() &#45; 1) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="2258,-5617.78 2100,-5617.78 2100,-5581.78 2258,-5581.78 2258,-5617.78"/>
<text text-anchor="middle" x="2179" y="-5596.08" font-family="Helvetica,sans-Serif" font-size="14.00">scalars_summing_to</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 scalars_summing_to(). -->
<g id="edge92" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 scalars_summing_to().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.25,-5549.7C1894.29,-5557.34 2008.96,-5574.49 2089.81,-5586.58"/>
<polygon fill="blue" stroke="blue" points="2089.59,-5590.09 2099.99,-5588.11 2090.62,-5583.17 2089.59,-5590.09"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_commitments(). -->
<g id="edge90" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_commitments().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.15,-5543.8C1878.25,-5542.45 1941.26,-5544.67 1985,-5572.78 2009.27,-5588.37 1996.82,-5611.05 2021,-5626.78 2042.4,-5640.69 2068.77,-5648.08 2093.75,-5651.84"/>
<polygon fill="blue" stroke="blue" points="2093.61,-5655.35 2103.98,-5653.2 2094.53,-5648.42 2093.61,-5655.35"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 scalars_summing_to().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 random_scalar(). -->
<g id="edge108" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 scalars_summing_to().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 random_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2258.07,-5599.78C2298.45,-5599.78 2347.29,-5599.78 2386.23,-5599.78"/>
<polygon fill="blue" stroke="blue" points="2386.42,-5603.28 2396.42,-5599.78 2386.42,-5596.28 2386.42,-5603.28"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/full_create_restore(). -->
<g id="node87" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/full_create_restore().</title>
<g id="a_node87"><a xlink:title=" &#160;&#160;&#160;fn full_create_restore() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut rng = OsRng.unwrap_err(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let server_ids = vec![1u64, 2u64, 3u64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut servers = server_ids &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.iter() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.map(|_| ...">
<polygon fill="white" stroke="black" points="1459.5,-5617.78 1316.5,-5617.78 1316.5,-5581.78 1459.5,-5581.78 1459.5,-5617.78"/>
<text text-anchor="middle" x="1388" y="-5596.08" font-family="Helvetica,sans-Serif" font-size="14.00">full_create_restore</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/full_create_restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2(). -->
<g id="edge125" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/full_create_restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]restore2().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1459.82,-5608.75C1547.5,-5619.87 1694.32,-5638.48 1768.74,-5647.91"/>
<polygon fill="blue" stroke="blue" points="1768.38,-5651.39 1778.75,-5649.18 1769.27,-5644.45 1768.38,-5651.39"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/full_create_restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new(). -->
<g id="edge123" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/full_create_restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[Backup4]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1459.82,-5590.8C1551.64,-5579.16 1708.32,-5559.3 1778.79,-5550.37"/>
<polygon fill="blue" stroke="blue" points="1779.46,-5553.81 1788.94,-5549.08 1778.58,-5546.86 1779.46,-5553.81"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/full_create_restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]new(). -->
<g id="edge124" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/full_create_restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1432.31,-5581.7C1482.81,-5561.69 1569.27,-5530.69 1647,-5518.78 1795.49,-5496.01 1834.8,-5516.05 1985,-5518.78 2039.54,-5519.76 2102.72,-5522.32 2141.52,-5524.06"/>
<polygon fill="blue" stroke="blue" points="2141.64,-5527.57 2151.79,-5524.52 2141.95,-5520.57 2141.64,-5527.57"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServer]restore2(). -->
<g id="node92" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServer]restore2().</title>
<g id="a_node92"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn restore2(&amp;self, req_bytes: &amp;[u8], handshake_hash: &amp;[u8]) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let req = match svrb::Request4::decode(req_bytes) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.expect(&#39; decode Request4&#39; ) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1853,-5779.78 1779,-5779.78 1779,-5743.78 1853,-5743.78 1853,-5779.78"/>
<text text-anchor="middle" x="1816" y="-5758.08" font-family="Helvetica,sans-Serif" font-size="14.00">restore2</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/full_create_restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServer]restore2(). -->
<g id="edge126" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/full_create_restore().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServer]restore2().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1416.31,-5617.89C1462,-5647.3 1557.77,-5705.13 1647,-5734.78 1686.89,-5748.03 1734.33,-5754.89 1768.61,-5758.37"/>
<polygon fill="blue" stroke="blue" points="1768.52,-5761.88 1778.81,-5759.34 1769.18,-5754.91 1768.52,-5761.88"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 random_scalar(). -->
<g id="edge166" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 impl#[`Restore1&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 random_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2206.05,-5529.4C2238.85,-5534.29 2296.74,-5544 2345,-5557.78 2364.33,-5563.29 2385.04,-5570.77 2403.21,-5577.89"/>
<polygon fill="blue" stroke="blue" points="2402.16,-5581.23 2412.75,-5581.67 2404.75,-5574.73 2402.16,-5581.23"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_commitments().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]hash_from_bytes(). -->
<g id="edge270" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 auth_commitments().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]hash_from_bytes().</title>
<path fill="none" stroke="blue" d="M2254.4,-5657.03C2286.95,-5662.45 2322.71,-5674.57 2345,-5700.78 2394.58,-5759.06 2315.83,-5813.15 2365,-5871.78 2369.13,-5876.7 2374.11,-5880.74 2379.6,-5884.07"/>
<polygon fill="blue" stroke="blue" points="2378.09,-5887.23 2388.57,-5888.72 2381.31,-5881.01 2378.09,-5887.23"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServerVersion]new(). -->
<g id="node90" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServerVersion]new().</title>
<g id="a_node90"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn new(req: &amp;svrb::request4::Create) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;auth_commitment: to_ristretto_pt(&amp;req.auth_commitment) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.expect(&#39; decode auth_commitment&#39; )...">
<polygon fill="white" stroke="black" points="1843,-5725.78 1789,-5725.78 1789,-5689.78 1843,-5689.78 1843,-5725.78"/>
<text text-anchor="middle" x="1816" y="-5704.08" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServerVersion]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/to_ristretto_scalar(). -->
<g id="edge395" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServerVersion]new().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/to_ristretto_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.25,-5709.23C1896.16,-5712.16 2017.43,-5718.88 2098.55,-5723.37"/>
<polygon fill="blue" stroke="blue" points="2098.55,-5726.88 2108.73,-5723.94 2098.93,-5719.89 2098.55,-5726.88"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/scalars_summing_to_works(). -->
<g id="node91" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/scalars_summing_to_works().</title>
<g id="a_node91"><a xlink:title=" &#160;&#160;&#160;fn scalars_summing_to_works() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proptest!(|(n in 1usize..10)| { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut rng = OsRng.unwrap_err(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut seed = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;rng.try_fill_bytes(&amp;mut seed...">
<polygon fill="white" stroke="black" points="1919,-5617.78 1713,-5617.78 1713,-5581.78 1919,-5581.78 1919,-5617.78"/>
<text text-anchor="middle" x="1816" y="-5596.08" font-family="Helvetica,sans-Serif" font-size="14.00">scalars_summing_to_works</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/scalars_summing_to_works().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge502" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/scalars_summing_to_works().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="blue" d="M1919.27,-5597.9C1943.18,-5602.1 1966.92,-5610.66 1985,-5626.78 2029.12,-5666.1 1975.48,-5717.09 2021,-5754.78 2146.26,-5858.46 2610.08,-5734.94 2750,-5817.78 2774.82,-5832.47 2762.46,-5855.11 2786,-5871.78 2788.1,-5873.26 2790.28,-5874.67 2792.52,-5876"/>
<polygon fill="blue" stroke="blue" points="2790.95,-5879.13 2801.42,-5880.75 2794.25,-5872.96 2790.95,-5879.13"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/scalars_summing_to_works().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 scalars_summing_to(). -->
<g id="edge501" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/scalars_summing_to_works().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 scalars_summing_to().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1919,-5599.78C1972.75,-5599.78 2038.04,-5599.78 2089.62,-5599.78"/>
<polygon fill="blue" stroke="blue" points="2089.75,-5603.28 2099.75,-5599.78 2089.75,-5596.28 2089.75,-5603.28"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServer]restore2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]hash_from_bytes(). -->
<g id="edge504" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServer]restore2().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]hash_from_bytes().</title>
<path fill="none" stroke="blue" d="M1853.06,-5774.75C1893.5,-5788.9 1961.26,-5811.45 2021,-5825.78 2145,-5855.51 2291.77,-5877.5 2378.93,-5889.21"/>
<polygon fill="blue" stroke="blue" points="2378.62,-5892.7 2389,-5890.55 2379.55,-5885.76 2378.62,-5892.7"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServer]restore2().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/to_ristretto_scalar(). -->
<g id="edge503" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/impl#[TestServer]restore2().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;svrb 0.1.0 test/to_ristretto_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1853.27,-5758.36C1910.33,-5752.99 2022.44,-5742.43 2098.8,-5735.24"/>
<polygon fill="blue" stroke="blue" points="2099.23,-5738.71 2108.85,-5734.29 2098.57,-5731.74 2099.23,-5738.71"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 benches(). -->
<g id="node93" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 benches().</title>
<g id="a_node93"><a xlink:title="criterion_group!(benches, bench_usernames); criterion_main!(benches);">
<polygon fill="white" stroke="black" points="454.5,-4698.78 379.5,-4698.78 379.5,-4662.78 454.5,-4662.78 454.5,-4698.78"/>
<text text-anchor="middle" x="417" y="-4677.08" font-family="Helvetica,sans-Serif" font-size="14.00">benches</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 bench_usernames(). -->
<g id="node95" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().</title>
<g id="a_node95"><a xlink:title="fn bench_usernames(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let mut rng = OsRng.unwrap_err(); &#160;&#160;&#160;&#160;let usernames = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Username::candidates_from(&amp;mut rng, &#39; signal&#39; , NicknameLimits::default()).unwrap(); &#160;&#160;&#160;&#160;&#160;let ...">
<polygon fill="white" stroke="black" points="1007.5,-4698.78 864.5,-4698.78 864.5,-4662.78 1007.5,-4662.78 1007.5,-4698.78"/>
<text text-anchor="middle" x="936" y="-4677.08" font-family="Helvetica,sans-Serif" font-size="14.00">bench_usernames</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 bench_usernames(). -->
<g id="edge57" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M454.77,-4680.78C537.62,-4680.78 740.55,-4680.78 854.32,-4680.78"/>
<polygon fill="blue" stroke="blue" points="854.37,-4684.28 864.37,-4680.78 854.37,-4677.28 854.37,-4684.28"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username_proof(). -->
<g id="node94" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username_proof().</title>
<g id="a_node94"><a xlink:title="pub fn username_proof(username: &amp;str, randomness: &amp;[u8; 32]) &#45;&gt; Result&lt;Vec&lt;u8&gt;, UsernameError&gt; { &#160;&#160;&#160;&#160;Username::new(username)?.proof(randomness) }">
<polygon fill="white" stroke="black" points="1452,-4698.78 1324,-4698.78 1324,-4662.78 1452,-4662.78 1452,-4698.78"/>
<text text-anchor="middle" x="1388" y="-4677.08" font-family="Helvetica,sans-Serif" font-size="14.00">username_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username_proof().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge172" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username_proof().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1452.11,-4690.74C1503.58,-4695.06 1574.76,-4691.76 1619,-4650.78 1663.63,-4609.43 1602.99,-4558.78 1647,-4516.78 1681.96,-4483.4 1740.86,-4481.66 1778.82,-4484.75"/>
<polygon fill="blue" stroke="blue" points="1778.64,-4488.25 1788.93,-4485.73 1779.31,-4481.28 1778.64,-4488.25"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username_proof(). -->
<g id="edge530" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1007.81,-4680.78C1091.29,-4680.78 1229.34,-4680.78 1313.84,-4680.78"/>
<polygon fill="blue" stroke="blue" points="1313.87,-4684.28 1323.87,-4680.78 1313.87,-4677.28 1313.87,-4684.28"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge529" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M988.21,-4698.92C1032.29,-4713.52 1097.95,-4732.87 1157,-4740.78 1258.76,-4754.4 1542.03,-4808.72 1619,-4740.78 1694.22,-4674.38 1577.31,-4588.95 1647,-4516.78 1680.67,-4481.91 1740.19,-4480.64 1778.59,-4484.23"/>
<polygon fill="blue" stroke="blue" points="1778.51,-4487.74 1788.83,-4485.35 1779.27,-4480.78 1778.51,-4487.74"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="edge528" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1007.64,-4691.67C1050.69,-4697.75 1106.88,-4704.71 1157,-4707.78 1259.48,-4714.04 1542.39,-4776.13 1619,-4707.78 1659.89,-4671.29 1609.14,-4502.4 1647,-4462.78 1674.61,-4433.88 1719.95,-4427.98 1756.58,-4428.85"/>
<polygon fill="blue" stroke="blue" points="1756.52,-4432.35 1766.65,-4429.26 1756.8,-4425.36 1756.52,-4432.35"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge18" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.22,-4494.25C1880.51,-4498.96 1948.36,-4501.11 1985,-4462.78 2104.53,-4337.73 2167.43,-3020.31 2176.78,-2809.23"/>
<polygon fill="blue" stroke="blue" points="2180.28,-2809.12 2177.23,-2798.98 2173.29,-2808.82 2180.28,-2809.12"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_should_produce_scalar(). -->
<g id="node97" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_should_produce_scalar().</title>
<g id="a_node97"><a xlink:title=" &#160;&#160;&#160;fn valid_usernames_should_produce_scalar() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proptest!(|(nickname in NICKNAME_PATTERN, discriminator in 1..DISCRIMINATOR_MAX)| { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;username_sha_scalar(&amp;nickname, discriminator).u...">
<polygon fill="white" stroke="black" points="1964.5,-4561.78 1667.5,-4561.78 1667.5,-4525.78 1964.5,-4525.78 1964.5,-4561.78"/>
<text text-anchor="middle" x="1816" y="-4540.08" font-family="Helvetica,sans-Serif" font-size="14.00">valid_usernames_should_produce_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/username_sha_scalar(). -->
<g id="node98" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/username_sha_scalar().</title>
<g id="a_node98"><a xlink:title="fn username_sha_scalar(nickname: &amp;str, discriminator: u64) &#45;&gt; Result&lt;Scalar, UsernameError&gt; { &#160;&#160;&#160;&#160;let mut hash = Sha512::new(); &#160;&#160;&#160;&#160;hash.update(nickname.as_bytes()); &#160;&#160;&#160;&#160;hash.update([0x00]); &#160;&#160;&#160;&#160;hash....">
<polygon fill="white" stroke="black" points="2261.5,-4615.78 2096.5,-4615.78 2096.5,-4579.78 2261.5,-4579.78 2261.5,-4615.78"/>
<text text-anchor="middle" x="2179" y="-4594.08" font-family="Helvetica,sans-Serif" font-size="14.00">username_sha_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_should_produce_scalar().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/username_sha_scalar(). -->
<g id="edge79" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_should_produce_scalar().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/username_sha_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1937.46,-4561.79C1985.97,-4569.05 2041.02,-4577.29 2086.19,-4584.04"/>
<polygon fill="blue" stroke="blue" points="2085.86,-4587.53 2096.27,-4585.55 2086.9,-4580.61 2085.86,-4587.53"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/username_sha_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash(). -->
<g id="edge155" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/username_sha_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_hash().</title>
<path fill="none" stroke="blue" d="M2189.48,-4615.78C2236.85,-4706.71 2449.29,-5125.78 2539,-5495.78 2558.78,-5577.35 2522.1,-5806.61 2575,-5871.78 2583.21,-5881.9 2595.17,-5888.29 2607.59,-5892.32"/>
<polygon fill="blue" stroke="blue" points="2607.01,-5895.79 2617.58,-5895.06 2608.87,-5889.04 2607.01,-5895.79"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames(). -->
<g id="node99" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().</title>
<g id="a_node99"><a xlink:title=" &#160;&#160;&#160;fn many_random_makes_valid_usernames() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut rng = rand::rng(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let randomness = std::array::from_fn(|i| (i + 1).try_into().unwrap()); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let nickname = &#39; _SiGNA1&#39; ; &#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1533.5,-4507.78 1242.5,-4507.78 1242.5,-4471.78 1533.5,-4471.78 1533.5,-4507.78"/>
<text text-anchor="middle" x="1388" y="-4486.08" font-family="Helvetica,sans-Serif" font-size="14.00">many_random_makes_valid_usernames</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge193" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1533.52,-4489.78C1620.61,-4489.78 1724.8,-4489.78 1778.69,-4489.78"/>
<polygon fill="blue" stroke="blue" points="1778.78,-4493.28 1788.78,-4489.78 1778.78,-4486.28 1778.78,-4493.28"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="edge194" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1533.52,-4473.26C1561.88,-4469.89 1591.38,-4466.3 1619,-4462.78 1665.29,-4456.87 1717.65,-4449.63 1756.6,-4444.13"/>
<polygon fill="blue" stroke="blue" points="1757.3,-4447.57 1766.71,-4442.7 1756.32,-4440.64 1757.3,-4447.57"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/make_scalars(). -->
<g id="node100" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/make_scalars().</title>
<g id="a_node100"><a xlink:title="fn make_scalars(nickname: &amp;str, discriminator: u64) &#45;&gt; Result&lt;Vec&lt;Scalar&gt;, UsernameError&gt; { &#160;&#160;&#160;&#160;Ok(vec![ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;username_sha_scalar(nickname, discriminator)?, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nickname_scalar(nickname)?, &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1871,-4615.78 1761,-4615.78 1761,-4579.78 1871,-4579.78 1871,-4615.78"/>
<text text-anchor="middle" x="1816" y="-4594.08" font-family="Helvetica,sans-Serif" font-size="14.00">make_scalars</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/make_scalars().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/username_sha_scalar(). -->
<g id="edge243" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/make_scalars().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/username_sha_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1871.05,-4597.78C1927.83,-4597.78 2018.16,-4597.78 2086.16,-4597.78"/>
<polygon fill="blue" stroke="blue" points="2086.45,-4601.28 2096.45,-4597.78 2086.45,-4594.28 2086.45,-4601.28"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge376" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1845.15,-4417.67C1936.74,-4356.98 2227.18,-4150.08 2345,-3894.78 2438.15,-3692.94 2452.66,-2962.28 2454.69,-2809.08"/>
<polygon fill="blue" stroke="blue" points="2458.19,-2809.1 2454.82,-2799.06 2451.19,-2809.01 2458.19,-2809.1"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit(). -->
<g id="node102" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit().</title>
<g id="a_node102"><a xlink:title=" &#160;&#160;&#160;fn from_parts_without_soft_limit( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nickname: &amp;str, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;discriminator: &amp;str, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Self, UsernameError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;validate_prefix(nickname)?; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let discriminator = valida...">
<polygon fill="white" stroke="black" points="1497.5,-4615.78 1278.5,-4615.78 1278.5,-4579.78 1497.5,-4579.78 1497.5,-4615.78"/>
<text text-anchor="middle" x="1388" y="-4594.08" font-family="Helvetica,sans-Serif" font-size="14.00">from_parts_without_soft_limit</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/make_scalars(). -->
<g id="edge468" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/make_scalars().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1497.6,-4597.78C1577.51,-4597.78 1683.46,-4597.78 1750.45,-4597.78"/>
<polygon fill="blue" stroke="blue" points="1750.86,-4601.28 1760.86,-4597.78 1750.86,-4594.28 1750.86,-4601.28"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify(). -->
<g id="node103" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().</title>
<g id="a_node103"><a xlink:title=" &#160;&#160;&#160;fn valid_usernames_proof_and_verify() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proptest!(|(nickname in NICKNAME_PATTERN, discriminator in 1..DISCRIMINATOR_MAX)| { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let username = Username::new(&amp;Username::format_parts...">
<polygon fill="white" stroke="black" points="1515,-4453.78 1261,-4453.78 1261,-4417.78 1515,-4417.78 1515,-4453.78"/>
<text text-anchor="middle" x="1388" y="-4432.08" font-family="Helvetica,sans-Serif" font-size="14.00">valid_usernames_proof_and_verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge473" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1515.29,-4450.14C1549,-4454.1 1585.4,-4458.49 1619,-4462.78 1674.83,-4469.9 1739.49,-4478.96 1778.8,-4484.57"/>
<polygon fill="blue" stroke="blue" points="1778.31,-4488.03 1788.71,-4485.98 1779.3,-4481.1 1778.31,-4488.03"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="edge474" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1515.08,-4435.78C1594.98,-4435.78 1694.58,-4435.78 1756.49,-4435.78"/>
<polygon fill="blue" stroke="blue" points="1756.84,-4439.28 1766.84,-4435.78 1756.84,-4432.28 1756.84,-4439.28"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 benches(). -->
<g id="node104" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 benches().</title>
<g id="a_node104"><a xlink:title="criterion_group!(benches, endorsement_flow, key_derivation); criterion_main!(benches);">
<polygon fill="white" stroke="black" points="973.5,-223.78 898.5,-223.78 898.5,-187.78 973.5,-187.78 973.5,-223.78"/>
<text text-anchor="middle" x="936" y="-202.08" font-family="Helvetica,sans-Serif" font-size="14.00">benches</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow(). -->
<g id="node105" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().</title>
<g id="a_node105"><a xlink:title="fn endorsement_flow(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let mut group = c.benchmark_group(&#39; endorsements&#39; ); &#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;let inputs: Vec&lt;RistrettoPoint&gt; = (0.....">
<polygon fill="white" stroke="black" points="1460,-223.78 1316,-223.78 1316,-187.78 1460,-187.78 1460,-223.78"/>
<text text-anchor="middle" x="1388" y="-202.08" font-family="Helvetica,sans-Serif" font-size="14.00">endorsement_flow</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow(). -->
<g id="edge273" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M973.83,-205.78C1045.9,-205.78 1207.11,-205.78 1305.5,-205.78"/>
<polygon fill="blue" stroke="blue" points="1305.71,-209.28 1315.71,-205.78 1305.71,-202.28 1305.71,-209.28"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 key_derivation(). -->
<g id="node106" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 key_derivation().</title>
<g id="a_node106"><a xlink:title="fn key_derivation(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let root_key = ServerRootKeyPair::generate([42; RANDOMNESS_LEN]); &#160;&#160;&#160;&#160;&#160;let mut info_sho = poksho::ShoHmacSha256::new(b&#39; ExampleEndorsements&#39; ); &#160;&#160;&#160;&#160;info_sho....">
<polygon fill="white" stroke="black" points="1446.5,-169.78 1329.5,-169.78 1329.5,-133.78 1446.5,-133.78 1446.5,-169.78"/>
<text text-anchor="middle" x="1388" y="-148.08" font-family="Helvetica,sans-Serif" font-size="14.00">key_derivation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 key_derivation(). -->
<g id="edge272" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 key_derivation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M973.58,-201.23C1017.24,-195.81 1092.43,-186.53 1157,-178.78 1211.55,-172.23 1273.41,-164.97 1319.22,-159.64"/>
<polygon fill="blue" stroke="blue" points="1319.8,-163.09 1329.33,-158.46 1318.99,-156.14 1319.8,-163.09"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 attribute_key_inversion(). -->
<g id="node107" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 attribute_key_inversion().</title>
<g id="a_node107"><a xlink:title="fn attribute_key_inversion(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let mut sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;let key_pair = KeyPair::&lt;ExampleDomain&gt;::derive_from(&amp;mut sho); &#160;&#160;&#160;&#160;&#160;c.bench_function(&#39; KeyPair...">
<polygon fill="white" stroke="black" points="1477,-2418.78 1299,-2418.78 1299,-2382.78 1477,-2382.78 1477,-2418.78"/>
<text text-anchor="middle" x="1388" y="-2397.08" font-family="Helvetica,sans-Serif" font-size="14.00">attribute_key_inversion</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attribute_key_inversion(). -->
<g id="edge271" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attribute_key_inversion().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M949.79,-224.05C987.57,-279.28 1098.43,-450.53 1137,-611.78 1147.93,-657.46 1130.87,-2263.74 1157,-2302.78 1186.65,-2347.06 1240.77,-2371.41 1289.07,-2384.76"/>
<polygon fill="blue" stroke="blue" points="1288.39,-2388.2 1298.96,-2387.37 1290.18,-2381.43 1288.39,-2388.2"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge348" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="blue" d="M1460.14,-216.84C1510.37,-220.47 1576.12,-216.16 1619,-178.78 1656.38,-146.19 1608.3,-101.78 1647,-70.78 1831.28,76.88 1941.86,-52.78 2178,-52.78 2178,-52.78 2178,-52.78 2457,-52.78 2603.5,-52.78 2710.95,-261.69 2750,-370.78 2848.1,-644.83 2888.48,-5406.25 2891.78,-5816.61"/>
<polygon fill="blue" stroke="blue" points="2888.28,-5816.77 2891.86,-5826.75 2895.28,-5816.72 2888.28,-5816.77"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="node114" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<g id="a_node114"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hidden_attribute_points: impl IntoIterator&lt;Item = RistrettoPoint&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_public_key: &amp;ServerDerivedPublicKey, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;ReceivedEndorsements, V...">
<polygon fill="white" stroke="black" points="1849,-576.78 1783,-576.78 1783,-540.78 1849,-540.78 1849,-576.78"/>
<text text-anchor="middle" x="1816" y="-555.08" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge344" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1460.13,-201.93C1512.06,-203.3 1579.95,-214.54 1619,-258.78 1659.36,-304.49 1605.13,-487.44 1647,-531.78 1678.61,-565.25 1734,-567.97 1772.49,-564.98"/>
<polygon fill="blue" stroke="blue" points="1773.24,-568.43 1782.87,-564.01 1772.59,-561.46 1773.24,-568.43"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar(). -->
<g id="node115" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().</title>
<g id="a_node115"><a xlink:title=" &#160;&#160;&#160;pub fn from_blinding_scalar(scalar: Scalar) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a_inv: scalar.invert(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1896,-468.78 1736,-468.78 1736,-432.78 1896,-432.78 1896,-468.78"/>
<text text-anchor="middle" x="1816" y="-447.08" font-family="Helvetica,sans-Serif" font-size="14.00">from_blinding_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar(). -->
<g id="edge347" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1460.11,-202.71C1511.5,-204.57 1578.72,-216.07 1619,-258.78 1670.04,-312.88 1594.17,-371.41 1647,-423.78 1667.64,-444.24 1697.24,-452.96 1725.85,-455.94"/>
<polygon fill="blue" stroke="blue" points="1725.66,-459.44 1735.92,-456.77 1726.24,-452.46 1725.66,-459.44"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key(). -->
<g id="node117" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().</title>
<g id="a_node117"><a xlink:title=" &#160;&#160;&#160;pub fn derive_key(&amp;self, mut tag_info: impl ShoApi) &#45;&gt; ServerDerivedPublicKey { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let t = tag_info.get_scalar(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.derive_key_from_tag_scalar(&amp;t) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1861.5,-306.78 1770.5,-306.78 1770.5,-270.78 1861.5,-270.78 1861.5,-306.78"/>
<text text-anchor="middle" x="1816" y="-285.08" font-family="Helvetica,sans-Serif" font-size="14.00">derive_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key(). -->
<g id="edge345" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1460.3,-219.67C1544.85,-236.14 1683.93,-263.24 1760.39,-278.14"/>
<polygon fill="blue" stroke="blue" points="1759.82,-281.59 1770.3,-280.07 1761.16,-274.72 1759.82,-281.59"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key(). -->
<g id="node119" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().</title>
<g id="a_node119"><a xlink:title=" &#160;&#160;&#160;pub fn derive_key(&amp;self, mut tag_info: impl ShoApi) &#45;&gt; ServerDerivedKeyPair { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let t = tag_info.get_scalar(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ServerDerivedKeyPair { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sk_prime: (self.sk + t).invert(), &#160;&#160;...">
<polygon fill="white" stroke="black" points="1861.5,-414.78 1770.5,-414.78 1770.5,-378.78 1861.5,-378.78 1861.5,-414.78"/>
<text text-anchor="middle" x="1816" y="-393.08" font-family="Helvetica,sans-Serif" font-size="14.00">derive_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key(). -->
<g id="edge343" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1460.21,-203.71C1510.98,-206.16 1577.36,-217.99 1619,-258.78 1655.35,-294.38 1609.48,-335.41 1647,-369.78 1677.17,-397.41 1723.86,-403.04 1760.37,-402.4"/>
<polygon fill="blue" stroke="blue" points="1760.49,-405.9 1770.37,-402.06 1760.26,-398.9 1760.49,-405.9"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="node120" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<g id="a_node120"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hidden_attribute_points: impl IntoIterator&lt;Item = RistrettoPoint&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;private_key: &amp;ServerDerivedKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; EndorsementR...">
<polygon fill="white" stroke="black" points="1843,-522.78 1789,-522.78 1789,-486.78 1843,-486.78 1843,-522.78"/>
<text text-anchor="middle" x="1816" y="-501.08" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge346" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1460.08,-202.22C1511.81,-203.77 1579.47,-215.11 1619,-258.78 1684.86,-331.52 1578.74,-407.28 1647,-477.78 1680.72,-512.6 1740.22,-513.87 1778.61,-510.3"/>
<polygon fill="blue" stroke="blue" points="1779.28,-513.75 1788.84,-509.19 1778.52,-506.79 1779.28,-513.75"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate(). -->
<g id="node124" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().</title>
<g id="a_node124"><a xlink:title=" &#160;&#160;&#160;pub fn generate(randomness: [u8; RANDOMNESS_LEN]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = poksho::ShoHmacSha256::new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b&#39; Signal_ZKCredential_Endorsements_ServerRootKeyPair_generate_20240207&#39; ,...">
<polygon fill="white" stroke="black" points="1855.5,-360.78 1776.5,-360.78 1776.5,-324.78 1855.5,-324.78 1855.5,-360.78"/>
<text text-anchor="middle" x="1816" y="-339.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate(). -->
<g id="edge341" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1460.19,-206.61C1509.47,-210.63 1574.05,-223.14 1619,-258.78 1641.12,-276.31 1624.31,-298.99 1647,-315.78 1681.16,-341.04 1729.95,-346.44 1766.16,-346.32"/>
<polygon fill="blue" stroke="blue" points="1766.55,-349.81 1776.49,-346.14 1766.43,-342.81 1766.55,-349.81"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="node137" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<g id="a_node137"><a xlink:title=" &#160;&#160;&#160;fn get_scalar(&amp;mut self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut scalar_bytes = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.squeeze_and_ratchet_into(&amp;mut scalar_bytes); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar::from_bytes_mod_order_wide(&amp;scalar_bytes) &#160;&#160;...">
<polygon fill="white" stroke="black" points="2706,-418.78 2619,-418.78 2619,-382.78 2706,-382.78 2706,-418.78"/>
<text text-anchor="middle" x="2662.5" y="-397.08" font-family="Helvetica,sans-Serif" font-size="14.00">get_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge342" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1460.02,-214.81C1509.23,-217.22 1573.77,-212.28 1619,-178.78 1643.95,-160.29 1621.02,-131.77 1647,-114.78 1776.81,-29.88 2190.02,-108.4 2345,-114.78 2431.44,-118.33 2468.27,-80.96 2539,-130.78 2621.43,-188.83 2649.44,-316.11 2658.04,-372.7"/>
<polygon fill="blue" stroke="blue" points="2654.6,-373.32 2659.48,-382.72 2661.53,-372.33 2654.6,-373.32"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 key_derivation().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key(). -->
<g id="edge353" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 key_derivation().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1446.57,-152.3C1493.92,-154.2 1562.22,-160.33 1619,-178.78 1680.5,-198.76 1744.51,-238.96 1782.01,-264.84"/>
<polygon fill="blue" stroke="blue" points="1780.3,-267.91 1790.5,-270.76 1784.3,-262.17 1780.3,-267.91"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 key_derivation().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key(). -->
<g id="edge352" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 key_derivation().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1446.53,-140.88C1498.69,-134.6 1574.09,-135.14 1619,-178.78 1680.53,-238.57 1586.75,-308.69 1647,-369.78 1675.92,-399.09 1723.15,-404.49 1760.18,-403.32"/>
<polygon fill="blue" stroke="blue" points="1760.52,-406.81 1770.34,-402.83 1760.18,-399.82 1760.52,-406.81"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 key_derivation().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate(). -->
<g id="edge354" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 key_derivation().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1446.72,-141.38C1498.47,-135.61 1573.11,-136.62 1619,-178.78 1664.77,-220.82 1602.14,-272.77 1647,-315.78 1678.19,-345.67 1728.57,-350.22 1766.04,-348.63"/>
<polygon fill="blue" stroke="blue" points="1766.46,-352.11 1776.24,-348.03 1766.05,-345.12 1766.46,-352.11"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]inverse_of(). -->
<g id="node108" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]inverse_of().</title>
<g id="a_node108"><a xlink:title=" &#160;&#160;&#160;pub fn inverse_of&lt;D2: Domain&gt;(other: &amp;KeyPair&lt;D2&gt;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_ne!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;D::ID, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;D2::ID, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#39; You must provide a new domain for an inverse key&#39; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;); ...">
<polygon fill="white" stroke="black" points="1860,-3018.78 1772,-3018.78 1772,-2982.78 1860,-2982.78 1860,-3018.78"/>
<text text-anchor="middle" x="1816" y="-2997.08" font-family="Helvetica,sans-Serif" font-size="14.00">inverse_of</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 attribute_key_inversion().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]inverse_of(). -->
<g id="edge275" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 attribute_key_inversion().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]inverse_of().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1477.25,-2397.08C1526.62,-2400.13 1584.91,-2413.24 1619,-2453.78 1693.05,-2541.83 1570.78,-2884.59 1647,-2970.78 1674.9,-3002.32 1723.61,-3008.09 1761.42,-3006.97"/>
<polygon fill="blue" stroke="blue" points="1761.94,-3010.45 1771.77,-3006.49 1761.61,-3003.46 1761.94,-3010.45"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from(). -->
<g id="node109" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().</title>
<g id="a_node109"><a xlink:title=" &#160;&#160;&#160;pub fn derive_from(sho: &amp;mut dyn ShoApi) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let a1 = sho.get_scalar(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let a2 = sho.get_scalar(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::from_scalars(a1, a2) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1865.5,-3072.78 1766.5,-3072.78 1766.5,-3036.78 1865.5,-3036.78 1865.5,-3072.78"/>
<text text-anchor="middle" x="1816" y="-3051.08" font-family="Helvetica,sans-Serif" font-size="14.00">derive_from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 attribute_key_inversion().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from(). -->
<g id="edge274" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 attribute_key_inversion().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1477.04,-2396.99C1526.5,-2399.99 1584.96,-2413.07 1619,-2453.78 1659.97,-2502.76 1604.41,-2980.2 1647,-3027.78 1673.74,-3057.65 1719.36,-3063.44 1756.31,-3062.28"/>
<polygon fill="blue" stroke="blue" points="1756.67,-3065.77 1766.48,-3061.78 1756.33,-3058.77 1756.67,-3065.77"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]inverse_of().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge119" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]inverse_of().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="blue" d="M1860.1,-2993.94C1899.11,-2990.48 1954.91,-2992.87 1985,-3027.78 2042.1,-3094.01 1958.81,-6114.29 2021,-6175.78 2061.93,-6216.24 2485.43,-6196.82 2539,-6175.78 2658.13,-6128.98 2680.72,-6087.4 2750,-5979.78 2777.39,-5937.23 2748.95,-5906.24 2786,-5871.78 2804.25,-5854.8 2831.64,-5848.14 2854,-5845.67"/>
<polygon fill="blue" stroke="blue" points="2854.53,-5849.14 2864.2,-5844.79 2853.93,-5842.16 2854.53,-5849.14"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge161" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1865.71,-3061.95C1904.2,-3064.58 1956.11,-3060.78 1985,-3027.78 2084.12,-2914.53 1925.21,-1789.85 2021,-1673.78 2120.66,-1553.01 2212.07,-1631.37 2365,-1597.78 2442.31,-1580.79 2486.18,-1618.73 2539,-1559.78 2617.03,-1472.68 2654.03,-597.77 2660.47,-428.9"/>
<polygon fill="blue" stroke="blue" points="2663.97,-428.94 2660.85,-418.82 2656.97,-428.68 2663.97,-428.94"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate(). -->
<g id="node110" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate().</title>
<g id="a_node110"><a xlink:title=" &#160;&#160;&#160;pub fn generate(randomness: [u8; RANDOMNESS_LEN]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;CredentialPrivateKey::generate(randomness).into() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2495.5,-1775.78 2416.5,-1775.78 2416.5,-1739.78 2495.5,-1739.78 2495.5,-1775.78"/>
<text text-anchor="middle" x="2456" y="-1754.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]generate(). -->
<g id="node111" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]generate().</title>
<g id="a_node111"><a xlink:title=" &#160;&#160;&#160;fn generate(randomness: [u8; RANDOMNESS_LEN]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ShoHmacSha256::new(b&#39; Signal_ZKCredential_CredentialPrivateKey_generate_20230410&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sho.absorb_an...">
<polygon fill="white" stroke="black" points="2702,-1748.78 2623,-1748.78 2623,-1712.78 2702,-1712.78 2702,-1748.78"/>
<text text-anchor="middle" x="2662.5" y="-1727.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]generate(). -->
<g id="edge156" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2495.95,-1752.63C2529.07,-1748.26 2576.79,-1741.96 2612.5,-1737.24"/>
<polygon fill="blue" stroke="blue" points="2613.24,-1740.68 2622.7,-1735.9 2612.33,-1733.74 2613.24,-1740.68"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge178" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2662.5,-1712.52C2662.5,-1284.7 2662.5,-856.88 2662.5,-429.07"/>
<polygon fill="blue" stroke="blue" points="2666,-428.96 2662.5,-418.96 2659,-428.96 2666,-428.96"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core(). -->
<g id="node112" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core().</title>
<g id="a_node112"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn credential_core(&amp;self, M: &amp;[RistrettoPoint], sho: &amp;mut dyn ShoApi) &#45;&gt; Credential { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;M.len() &lt;= NUM_SUPPORTED_ATTRS, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#39; more than {NUM_SUPPORTED...">
<polygon fill="white" stroke="black" points="2239.5,-1721.78 2118.5,-1721.78 2118.5,-1685.78 2239.5,-1685.78 2239.5,-1721.78"/>
<text text-anchor="middle" x="2179" y="-1700.08" font-family="Helvetica,sans-Serif" font-size="14.00">credential_core</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge191" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2239.78,-1705.02C2321.23,-1703.17 2465.32,-1686.53 2539,-1597.78 2616.23,-1504.74 2653.97,-600.85 2660.47,-428.93"/>
<polygon fill="blue" stroke="blue" points="2663.97,-429.02 2660.85,-418.9 2656.98,-428.76 2663.97,-429.02"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 credentials/tests/round_trip_key_pair(). -->
<g id="node113" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 credentials/tests/round_trip_key_pair().</title>
<g id="a_node113"><a xlink:title=" &#160;&#160;&#160;fn round_trip_key_pair() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let key_pair = CredentialKeyPair::generate([0x42; RANDOMNESS_LEN]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let serialized = bincode::serialize(&amp;key_pair).unwrap(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let deserialized: Cr...">
<polygon fill="white" stroke="black" points="2255,-1775.78 2103,-1775.78 2103,-1739.78 2255,-1739.78 2255,-1775.78"/>
<text text-anchor="middle" x="2179" y="-1754.08" font-family="Helvetica,sans-Serif" font-size="14.00">round_trip_key_pair</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 credentials/tests/round_trip_key_pair().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate(). -->
<g id="edge389" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 credentials/tests/round_trip_key_pair().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2255.14,-1757.78C2303.23,-1757.78 2364.23,-1757.78 2406.11,-1757.78"/>
<polygon fill="blue" stroke="blue" points="2406.33,-1761.28 2416.33,-1757.78 2406.33,-1754.28 2406.33,-1761.28"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge69" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1822.29,-576.86C1845.9,-658.32 1942.29,-999.71 1985,-1286.78 1993.59,-1344.5 1983.66,-1765.93 2021,-1810.78 2116.11,-1925.01 2246.79,-1782.19 2345,-1893.78 2403.26,-1959.98 2444.79,-2608.04 2453.36,-2752.38"/>
<polygon fill="blue" stroke="blue" points="2449.88,-2752.84 2453.96,-2762.62 2456.87,-2752.43 2449.88,-2752.84"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof(). -->
<g id="node121" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().</title>
<g id="a_node121"><a xlink:title=" &#160;&#160;&#160;fn generate_weights_for_proof( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;ServerDerivedPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;E: &amp;[RistrettoPoint], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;R: &amp;[CompressedRistretto], &#160;&#160;&#160;&#160;) &#45;&gt; Vec&lt;Scalar&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert_eq!(E.len()...">
<polygon fill="white" stroke="black" points="2283.5,-576.78 2074.5,-576.78 2074.5,-540.78 2283.5,-540.78 2283.5,-576.78"/>
<text text-anchor="middle" x="2179" y="-555.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate_weights_for_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof(). -->
<g id="edge70" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1849.04,-558.78C1896.83,-558.78 1989.18,-558.78 2063.9,-558.78"/>
<polygon fill="blue" stroke="blue" points="2064.32,-562.28 2074.32,-558.78 2064.32,-555.28 2064.32,-562.28"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge89" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="blue" d="M1896.43,-463.34C1934.16,-469.28 1979.9,-476.44 2021,-482.78 2092.97,-493.86 2288.84,-485.42 2345,-531.78 2760.32,-874.59 2649.66,-1144.68 2750,-1673.78 2831.97,-2105.99 2886.21,-5472.03 2891.56,-5816.37"/>
<polygon fill="blue" stroke="blue" points="2888.07,-5816.56 2891.72,-5826.51 2895.07,-5816.45 2888.07,-5816.56"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip(). -->
<g id="node116" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().</title>
<g id="a_node116"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn round_trip&lt;T: Serialize + for&lt;&#39;a&gt; Deserialize&lt;&#39;a&gt; + PartialDefault&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;value: &amp;T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expected_len: usize, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bincode_options = bincode::DefaultOp...">
<polygon fill="white" stroke="black" points="1432,-414.78 1344,-414.78 1344,-378.78 1432,-378.78 1432,-414.78"/>
<text text-anchor="middle" x="1388" y="-393.08" font-family="Helvetica,sans-Serif" font-size="14.00">round_trip</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge106" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1432.44,-388.6C1483.46,-381.68 1567.63,-378.99 1619,-423.78 1656.38,-456.36 1610.32,-498.4 1647,-531.78 1680.75,-562.49 1734.94,-565.97 1772.62,-563.89"/>
<polygon fill="blue" stroke="blue" points="1773.04,-567.37 1782.77,-563.18 1772.55,-560.39 1773.04,-567.37"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar(). -->
<g id="edge101" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1432.27,-401.59C1478.52,-406.8 1553.99,-415.48 1619,-423.78 1653.89,-428.23 1692.23,-433.44 1725.68,-438.09"/>
<polygon fill="blue" stroke="blue" points="1725.51,-441.6 1735.89,-439.51 1726.47,-434.66 1725.51,-441.6"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key(). -->
<g id="edge104" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1432.15,-403.01C1481.74,-407.8 1563.43,-408.17 1619,-369.78 1641.24,-354.41 1625.09,-331.61 1647,-315.78 1679.47,-292.31 1724.68,-286.13 1760.03,-285.5"/>
<polygon fill="blue" stroke="blue" points="1760.19,-289 1770.18,-285.47 1760.17,-282 1760.19,-289"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key(). -->
<g id="edge103" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1432.19,-396.78C1510.24,-396.78 1674.63,-396.78 1760.36,-396.78"/>
<polygon fill="blue" stroke="blue" points="1760.42,-400.28 1770.42,-396.78 1760.42,-393.28 1760.42,-400.28"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge100" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1432.15,-390.54C1481.74,-385.75 1563.43,-385.38 1619,-423.78 1641.24,-439.14 1625.09,-461.94 1647,-477.78 1685.57,-505.65 1742.12,-509.14 1778.76,-507.89"/>
<polygon fill="blue" stroke="blue" points="1779.16,-511.37 1788.98,-507.4 1778.83,-504.38 1779.16,-511.37"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate(). -->
<g id="edge102" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1432.27,-391.96C1478.52,-386.75 1553.99,-378.07 1619,-369.78 1669.31,-363.36 1726.78,-355.36 1766.42,-349.74"/>
<polygon fill="blue" stroke="blue" points="1766.95,-353.2 1776.35,-348.33 1765.96,-346.27 1766.95,-353.2"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge105" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1432.43,-405.38C1483.84,-412.84 1568.8,-416.15 1619,-369.78 1665.93,-326.42 1597.62,-269.32 1647,-228.78 1723.6,-165.89 2450.9,-183.36 2539,-228.78 2598.03,-259.2 2634.86,-332.69 2651.35,-373.07"/>
<polygon fill="blue" stroke="blue" points="2648.17,-374.56 2655.1,-382.57 2654.68,-371.98 2648.17,-374.56"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge139" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1861.53,-293.04C1974.92,-304.17 2283.68,-336.02 2539,-376.78 2562,-380.45 2587.28,-385.27 2608.87,-389.62"/>
<polygon fill="blue" stroke="blue" points="2608.33,-393.08 2618.83,-391.65 2609.73,-386.22 2608.33,-393.08"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity(). -->
<g id="node118" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().</title>
<g id="a_node118"><a xlink:title=" &#160;&#160;&#160;fn default_is_identity() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(Endorsement::combine([]).R, Endorsement::default().R); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let root_key = ServerRo...">
<polygon fill="white" stroke="black" points="1459.5,-306.78 1316.5,-306.78 1316.5,-270.78 1459.5,-270.78 1459.5,-306.78"/>
<text text-anchor="middle" x="1388" y="-285.08" font-family="Helvetica,sans-Serif" font-size="14.00">default_is_identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge149" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1459.7,-276.32C1510.89,-271.67 1578.03,-275.3 1619,-315.78 1687.86,-383.81 1579.6,-462.29 1647,-531.78 1678.96,-564.72 1734.02,-567.62 1772.36,-564.81"/>
<polygon fill="blue" stroke="blue" points="1773.05,-568.26 1782.7,-563.89 1772.43,-561.29 1773.05,-568.26"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key(). -->
<g id="edge148" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1459.82,-288.78C1544.22,-288.78 1683.43,-288.78 1760.1,-288.78"/>
<polygon fill="blue" stroke="blue" points="1760.49,-292.28 1770.49,-288.78 1760.49,-285.28 1760.49,-292.28"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key(). -->
<g id="edge146" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1459.61,-280.66C1508.48,-278.72 1572.78,-283.84 1619,-315.78 1641.24,-331.14 1625.09,-353.94 1647,-369.78 1679.47,-393.24 1724.68,-399.43 1760.03,-400.05"/>
<polygon fill="blue" stroke="blue" points="1760.17,-403.55 1770.18,-400.08 1760.19,-396.55 1760.17,-403.55"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge147" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1459.75,-276.78C1510.62,-272.46 1577.33,-276.31 1619,-315.78 1672.05,-366.02 1595.03,-426.41 1647,-477.78 1681.38,-511.75 1740.44,-513.33 1778.59,-510.04"/>
<polygon fill="blue" stroke="blue" points="1779.16,-513.5 1788.75,-509.01 1778.45,-506.53 1779.16,-513.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate(). -->
<g id="edge150" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1459.51,-296.68C1505.05,-301.88 1565.56,-308.96 1619,-315.78 1669.31,-322.19 1726.78,-330.19 1766.42,-335.81"/>
<polygon fill="blue" stroke="blue" points="1765.96,-339.28 1776.35,-337.22 1766.95,-332.35 1765.96,-339.28"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge145" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1459.55,-298.56C1509.82,-301.44 1575.87,-296.32 1619,-258.78 1654.46,-227.91 1609.62,-185.28 1647,-156.78 1725.82,-96.68 2455.05,-116.08 2539,-168.78 2612.83,-215.12 2644.74,-321.84 2656.14,-372.76"/>
<polygon fill="blue" stroke="blue" points="2652.76,-373.68 2658.27,-382.73 2659.6,-372.22 2652.76,-373.68"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge160" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="blue" d="M1861.7,-401.81C2001.19,-418.19 2425.93,-473.38 2539,-549.78 2657.52,-629.85 2698.07,-659.5 2750,-792.78 2847.35,-1042.6 2888.26,-5422.12 2891.75,-5816.43"/>
<polygon fill="blue" stroke="blue" points="2888.25,-5816.48 2891.84,-5826.45 2895.25,-5816.42 2888.25,-5816.48"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge159" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1861.51,-396.99C2004.84,-397.67 2453.99,-399.79 2608.59,-400.53"/>
<polygon fill="blue" stroke="blue" points="2608.76,-404.03 2618.78,-400.57 2608.79,-397.03 2608.76,-404.03"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge210" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.05,-499.97C1880.75,-494.7 1949.85,-491.68 1985,-531.78 2031.86,-585.23 2014.31,-1740.01 2021,-1810.78 2056.56,-2186.69 2147.99,-2637.69 2172.1,-2752.92"/>
<polygon fill="blue" stroke="blue" points="2168.68,-2753.65 2174.16,-2762.72 2175.53,-2752.21 2168.68,-2753.65"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof(). -->
<g id="edge209" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.25,-508.7C1889.06,-515.55 1986.13,-530.08 2064.01,-541.72"/>
<polygon fill="blue" stroke="blue" points="2063.96,-545.26 2074.37,-543.27 2065,-538.33 2063.96,-545.26"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order(). -->
<g id="edge292" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]generate_weights_for_proof().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().</title>
<path fill="none" stroke="blue" d="M2185.1,-576.88C2207.88,-658.43 2301.05,-1000.16 2345,-1286.78 2353.28,-1340.77 2339.59,-1483.42 2365,-1531.78 2411.44,-1620.13 2495.82,-1583.78 2539,-1673.78 2590.1,-1780.27 2504.62,-5830.92 2575,-5925.78 2575.38,-5926.29 2575.77,-5926.79 2576.17,-5927.29"/>
<polygon fill="blue" stroke="blue" points="2573.85,-5929.92 2583.4,-5934.51 2578.8,-5924.96 2573.85,-5929.92"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow(). -->
<g id="node122" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().</title>
<g id="a_node122"><a xlink:title=" &#160;&#160;&#160;fn default_flow() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let root_key = ServerRootKeyPair::generate([42; RANDOMNESS_LEN]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Client &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let client_...">
<polygon fill="white" stroke="black" points="1438.5,-360.78 1337.5,-360.78 1337.5,-324.78 1438.5,-324.78 1438.5,-360.78"/>
<text text-anchor="middle" x="1388" y="-339.08" font-family="Helvetica,sans-Serif" font-size="14.00">default_flow</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge319" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1438.69,-333.1C1490.69,-326.1 1571.27,-324.57 1619,-369.78 1672.05,-420.02 1595.03,-480.41 1647,-531.78 1679.65,-564.04 1734.56,-567.09 1772.68,-564.49"/>
<polygon fill="blue" stroke="blue" points="1773.28,-567.96 1782.95,-563.63 1772.7,-560.98 1773.28,-567.96"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar(). -->
<g id="edge320" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1438.51,-335.97C1488.51,-331.79 1565.75,-332.98 1619,-369.78 1641.24,-385.14 1625.09,-407.94 1647,-423.78 1669.6,-440.11 1698.38,-448.07 1725.71,-451.61"/>
<polygon fill="blue" stroke="blue" points="1725.37,-455.1 1735.7,-452.72 1726.14,-448.14 1725.37,-455.1"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key(). -->
<g id="edge316" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1438.84,-337.22C1485.45,-331.95 1556.98,-323.69 1619,-315.78 1666.8,-309.68 1721.07,-302.16 1760.37,-296.6"/>
<polygon fill="blue" stroke="blue" points="1760.86,-300.07 1770.27,-295.2 1759.88,-293.13 1760.86,-300.07"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key(). -->
<g id="edge318" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1438.84,-348.33C1485.45,-353.6 1556.98,-361.86 1619,-369.78 1666.8,-375.87 1721.07,-383.4 1760.37,-388.95"/>
<polygon fill="blue" stroke="blue" points="1759.88,-392.42 1770.27,-390.35 1760.86,-385.49 1759.88,-392.42"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge314" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1438.92,-333.77C1490.35,-327.54 1569.75,-326.84 1619,-369.78 1656.38,-402.36 1610.32,-444.4 1647,-477.78 1682.65,-510.21 1741.1,-512.27 1778.81,-509.5"/>
<polygon fill="blue" stroke="blue" points="1779.2,-512.98 1788.86,-508.61 1778.59,-506 1779.2,-512.98"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate(). -->
<g id="edge317" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1438.7,-342.78C1521,-342.78 1684.58,-342.78 1766.25,-342.78"/>
<polygon fill="blue" stroke="blue" points="1766.26,-346.28 1776.26,-342.78 1766.26,-339.28 1766.26,-346.28"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge315" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1438.84,-352.16C1490.57,-358.8 1570.58,-359.93 1619,-315.78 1663.32,-275.37 1600.4,-221.53 1647,-183.78 1707.26,-134.96 2267.48,-181.38 2345,-183.78 2431.35,-186.44 2465.22,-150.85 2539,-195.78 2605.34,-236.17 2640.18,-327.22 2654.11,-373.16"/>
<polygon fill="blue" stroke="blue" points="2650.75,-374.15 2656.91,-382.77 2657.47,-372.19 2650.75,-374.15"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]for_first_point_of_attribute(). -->
<g id="node123" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]for_first_point_of_attribute().</title>
<g id="a_node123"><a xlink:title=" &#160;&#160;&#160;pub fn for_first_point_of_attribute&lt;D&gt;(key_pair: &amp;crate::attributes::KeyPair&lt;D&gt;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::from_blinding_scalar(key_pair.a1) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1488,-526.78 1288,-526.78 1288,-490.78 1488,-490.78 1488,-526.78"/>
<text text-anchor="middle" x="1388" y="-505.08" font-family="Helvetica,sans-Serif" font-size="14.00">for_first_point_of_attribute</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]for_first_point_of_attribute().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar(). -->
<g id="edge351" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]for_first_point_of_attribute().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1488.07,-495.49C1528.65,-490.03 1576.08,-483.62 1619,-477.78 1653.85,-473.03 1692.19,-467.76 1725.64,-463.14"/>
<polygon fill="blue" stroke="blue" points="1726.43,-466.57 1735.85,-461.73 1725.47,-459.63 1726.43,-466.57"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge390" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1855.76,-345.44C1992.39,-354.82 2451.77,-386.37 2608.55,-397.14"/>
<polygon fill="blue" stroke="blue" points="2608.65,-400.65 2618.87,-397.85 2609.13,-393.67 2608.65,-400.65"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements(). -->
<g id="node125" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().</title>
<g id="a_node125"><a xlink:title=" &#160;&#160;&#160;fn combining_endorsements() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let root_key = ServerRootKeyPair::generate([42; RANDOMNESS_LEN]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Client &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;l...">
<polygon fill="white" stroke="black" points="1486,-468.78 1290,-468.78 1290,-432.78 1486,-432.78 1486,-468.78"/>
<text text-anchor="middle" x="1388" y="-447.08" font-family="Helvetica,sans-Serif" font-size="14.00">combining_endorsements</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge441" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1486.02,-444.89C1529.94,-446.74 1580.52,-455.61 1619,-481.78 1640.06,-496.1 1626.12,-517.19 1647,-531.78 1683.81,-557.49 1736.13,-562.19 1772.57,-561.76"/>
<polygon fill="blue" stroke="blue" points="1772.96,-565.25 1782.87,-561.5 1772.78,-558.25 1772.96,-565.25"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar(). -->
<g id="edge439" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]from_blinding_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1486.2,-450.78C1558.17,-450.78 1655.49,-450.78 1725.55,-450.78"/>
<polygon fill="blue" stroke="blue" points="1725.68,-454.28 1735.68,-450.78 1725.68,-447.28 1725.68,-454.28"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key(). -->
<g id="edge437" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1486.27,-462.87C1531.58,-463.12 1583.24,-454.95 1619,-423.78 1656.38,-391.19 1610.32,-349.15 1647,-315.78 1677.26,-288.24 1723.94,-282.6 1760.42,-283.22"/>
<polygon fill="blue" stroke="blue" points="1760.31,-286.71 1770.42,-283.54 1760.54,-279.72 1760.31,-286.71"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key(). -->
<g id="edge443" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1486.14,-439.81C1527.16,-435.06 1575.43,-429.33 1619,-423.78 1666.8,-417.68 1721.07,-410.16 1760.37,-404.6"/>
<polygon fill="blue" stroke="blue" points="1760.86,-408.07 1770.27,-403.2 1759.88,-401.13 1760.86,-408.07"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge440" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1486.2,-463.1C1579.25,-474.89 1714.65,-492.06 1778.76,-500.18"/>
<polygon fill="blue" stroke="blue" points="1778.42,-503.67 1788.78,-501.45 1779.3,-496.72 1778.42,-503.67"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate(). -->
<g id="edge442" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1486.27,-459.16C1530.25,-458.25 1580.8,-450.17 1619,-423.78 1641.24,-408.41 1625.09,-385.61 1647,-369.78 1681.32,-344.97 1729.88,-339.48 1765.97,-339.45"/>
<polygon fill="blue" stroke="blue" points="1766.23,-342.95 1776.27,-339.59 1766.32,-335.95 1766.23,-342.95"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge438" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1486.26,-464.12C1532.12,-464.82 1584.26,-456.68 1619,-423.78 1672.05,-373.53 1591.11,-308.84 1647,-261.78 1765.89,-161.67 2191.75,-279.88 2345,-305.78 2431.99,-320.48 2455.01,-320.8 2539,-347.78 2564.96,-356.11 2592.95,-367.99 2615.6,-378.38"/>
<polygon fill="blue" stroke="blue" points="2614.42,-381.69 2624.96,-382.73 2617.37,-375.35 2614.42,-381.69"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="node126" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<g id="a_node126"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; IssuanceProof { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.finalize_public_attrs(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho ...">
<polygon fill="white" stroke="black" points="1843,-2881.78 1789,-2881.78 1789,-2845.78 1843,-2845.78 1843,-2881.78"/>
<text text-anchor="middle" x="1816" y="-2860.08" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge169" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.05,-2859.88C1876.2,-2854.75 1935.15,-2845.05 1985,-2833.78 2039.76,-2821.4 2102.27,-2803.53 2140.94,-2792.04"/>
<polygon fill="blue" stroke="blue" points="2142.13,-2795.33 2150.71,-2789.12 2140.13,-2788.63 2142.13,-2795.33"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core(). -->
<g id="edge168" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.09,-2868.04C1880.84,-2872.54 1950,-2874.21 1985,-2833.78 2065.24,-2741.05 1940.46,-1823.24 2021,-1730.78 2042.23,-1706.41 2076.79,-1698.66 2108.09,-1697.43"/>
<polygon fill="blue" stroke="blue" points="2108.18,-1700.93 2118.11,-1697.25 2108.05,-1693.94 2108.18,-1700.93"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="node127" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<g id="a_node127"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Even though it would work with a borrow, this deliberately consumes &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// IssuanceProof to indicate that ...">
<polygon fill="white" stroke="black" points="1844,-2935.78 1788,-2935.78 1788,-2899.78 1844,-2899.78 1844,-2935.78"/>
<text text-anchor="middle" x="1816" y="-2914.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge396" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1844.14,-2917.18C1923.39,-2914.72 2160.47,-2902.35 2345,-2840.78 2371.36,-2831.98 2398.81,-2817.02 2419.69,-2804.24"/>
<polygon fill="blue" stroke="blue" points="2421.58,-2807.18 2428.21,-2798.92 2417.88,-2801.25 2421.58,-2807.18"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate(). -->
<g id="node128" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate().</title>
<g id="a_node128"><a xlink:title=" &#160;&#160;&#160;pub fn generate(sho: &amp;mut dyn ShoApi) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BlindingPrivateKey::generate(sho).into() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2218.5,-1388.78 2139.5,-1388.78 2139.5,-1352.78 2218.5,-1352.78 2218.5,-1388.78"/>
<text text-anchor="middle" x="2179" y="-1367.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPrivateKey]generate(). -->
<g id="node134" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPrivateKey]generate().</title>
<g id="a_node134"><a xlink:title=" &#160;&#160;&#160;fn generate(sho: &amp;mut dyn ShoApi) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;y: sho.get_scalar(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2495.5,-1334.78 2416.5,-1334.78 2416.5,-1298.78 2495.5,-1298.78 2495.5,-1334.78"/>
<text text-anchor="middle" x="2456" y="-1313.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPrivateKey]generate(). -->
<g id="edge45" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPrivateKey]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2218.83,-1365.3C2252.37,-1360.36 2302.06,-1352.55 2345,-1343.78 2365.34,-1339.62 2387.62,-1334.3 2406.77,-1329.48"/>
<polygon fill="blue" stroke="blue" points="2407.65,-1332.87 2416.48,-1327.02 2405.92,-1326.09 2407.65,-1332.87"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/round_trip_key_pair(). -->
<g id="node129" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/round_trip_key_pair().</title>
<g id="a_node129"><a xlink:title="fn round_trip_key_pair() { &#160;&#160;&#160;&#160;let key_pair = BlindingKeyPair::generate(&amp;mut poksho::ShoSha256::new(b&#39; test&#39; )); &#160;&#160;&#160;&#160;let serialized = bincode::serialize(&amp;key_pair).unwrap(); &#160;&#160;&#160;&#160;let deserialized: Blin...">
<polygon fill="white" stroke="black" points="1892,-1334.78 1740,-1334.78 1740,-1298.78 1892,-1298.78 1892,-1334.78"/>
<text text-anchor="middle" x="1816" y="-1313.08" font-family="Helvetica,sans-Serif" font-size="14.00">round_trip_key_pair</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/round_trip_key_pair().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate(). -->
<g id="edge80" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/round_trip_key_pair().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1892.24,-1328.03C1963.34,-1338.67 2067.94,-1354.31 2128.9,-1363.43"/>
<polygon fill="blue" stroke="blue" points="2128.62,-1366.93 2139.03,-1364.95 2129.65,-1360 2128.62,-1366.93"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="node130" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<g id="a_node130"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;blinding_key: &amp;BlindingPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; BlindedIssuanceProof { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;se...">
<polygon fill="white" stroke="black" points="1843,-1388.78 1789,-1388.78 1789,-1352.78 1843,-1352.78 1843,-1388.78"/>
<text text-anchor="middle" x="1816" y="-1367.08" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge231" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.13,-1366.14C1880.61,-1361.15 1949.07,-1358.58 1985,-1397.78 2022.34,-1438.51 2014.18,-1838.94 2021,-1893.78 2063.43,-2234.7 2148.65,-2643.7 2171.98,-2752.87"/>
<polygon fill="blue" stroke="blue" points="2168.58,-2753.72 2174.1,-2762.77 2175.43,-2752.26 2168.58,-2753.72"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core(). -->
<g id="edge233" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialPrivateKey]credential_core().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.1,-1366.99C1879.61,-1363.27 1945.84,-1362.46 1985,-1397.78 2030.79,-1439.08 1991.37,-1477.69 2021,-1531.78 2054.05,-1592.1 2112.51,-1648.21 2148.01,-1679.07"/>
<polygon fill="blue" stroke="blue" points="2145.79,-1681.77 2155.65,-1685.62 2150.34,-1676.45 2145.79,-1681.77"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge232" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.03,-1375.33C1960.61,-1395.24 2440.74,-1469.27 2539,-1368.78 2606.66,-1299.58 2651.14,-582.51 2659.91,-429.43"/>
<polygon fill="blue" stroke="blue" points="2663.43,-429.2 2660.5,-419.01 2656.44,-428.8 2663.43,-429.2"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind(). -->
<g id="node131" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind().</title>
<g id="a_node131"><a xlink:title=" &#160;&#160;&#160;pub fn blind( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;attr: &amp;dyn RevealedAttribute, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sho: &amp;mut dyn ShoApi, &#160;&#160;&#160;&#160;) &#45;&gt; BlindedPoint&lt;WithNonce&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// This is technically something you can do with just th...">
<polygon fill="white" stroke="black" points="2206,-1334.78 2152,-1334.78 2152,-1298.78 2206,-1298.78 2206,-1334.78"/>
<text text-anchor="middle" x="2179" y="-1313.08" font-family="Helvetica,sans-Serif" font-size="14.00">blind</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge241" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2206.22,-1321.83C2241.95,-1328.43 2308.02,-1339.64 2365,-1343.78 2442.13,-1349.37 2480.9,-1394.81 2539,-1343.78 2609.79,-1281.59 2651.74,-580.43 2659.99,-429.35"/>
<polygon fill="blue" stroke="blue" points="2663.5,-429.23 2660.55,-419.06 2656.51,-428.86 2663.5,-429.23"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]encrypt(). -->
<g id="node132" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]encrypt().</title>
<g id="a_node132"><a xlink:title=" &#160;&#160;&#160;pub fn encrypt( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;attr: &amp;dyn Attribute, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sho: &amp;mut dyn ShoApi, &#160;&#160;&#160;&#160;) &#45;&gt; BlindedAttribute&lt;WithNonce&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// The points in a regular verifiably encrypted attribute ...">
<polygon fill="white" stroke="black" points="1851,-1496.78 1781,-1496.78 1781,-1460.78 1851,-1460.78 1851,-1496.78"/>
<text text-anchor="middle" x="1816" y="-1475.08" font-family="Helvetica,sans-Serif" font-size="14.00">encrypt</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]encrypt().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind(). -->
<g id="edge421" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]encrypt().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1851.17,-1482.91C1888.44,-1485.44 1947.74,-1483.43 1985,-1451.78 2023.56,-1419.02 1982.62,-1376.74 2021,-1343.78 2054.27,-1315.2 2106.57,-1311.66 2141.56,-1313.11"/>
<polygon fill="blue" stroke="blue" points="2141.64,-1316.62 2151.82,-1313.7 2142.04,-1309.64 2141.64,-1316.62"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="node133" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<g id="a_node133"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;blinding_key: &amp;BlindingKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof: BlindedIssuanceProof, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Credential, VerificationFail...">
<polygon fill="white" stroke="black" points="1844,-1442.78 1788,-1442.78 1788,-1406.78 1844,-1406.78 1844,-1442.78"/>
<text text-anchor="middle" x="1816" y="-1421.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge511" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1844.02,-1420.06C1881.64,-1415.21 1949.2,-1413.06 1985,-1451.78 2051.91,-1524.13 1991.09,-1799.88 2021,-1893.78 2106.65,-2162.64 2228.96,-2182.56 2345,-2439.78 2395.44,-2551.57 2433.43,-2693.43 2448.23,-2752.73"/>
<polygon fill="blue" stroke="blue" points="2444.85,-2753.63 2450.64,-2762.5 2451.64,-2751.95 2444.85,-2753.63"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPrivateKey]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge531" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingPrivateKey]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2461.08,-1298.48C2486.6,-1184.21 2623.97,-568.9 2655.19,-429.06"/>
<polygon fill="blue" stroke="blue" points="2658.64,-429.64 2657.41,-419.12 2651.81,-428.11 2658.64,-429.64"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="node135" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<g id="a_node135"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential: &amp;Credential, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; PresentationProof { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credenti...">
<polygon fill="white" stroke="black" points="1850.5,-2247.78 1781.5,-2247.78 1781.5,-2211.78 1850.5,-2211.78 1850.5,-2247.78"/>
<text text-anchor="middle" x="1816" y="-2226.08" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge86" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1850.65,-2225.89C1887.74,-2223.51 1947.14,-2225.61 1985,-2256.78 2144.52,-2388.07 2172.2,-2663.9 2177,-2752.64"/>
<polygon fill="blue" stroke="blue" points="2173.51,-2752.92 2177.48,-2762.74 2180.5,-2752.58 2173.51,-2752.92"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar(). -->
<g id="edge85" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1830.95,-2211.6C1864.32,-2167 1948.68,-2047.42 1985,-1932.78 2009.48,-1855.5 1962.95,-1626.36 2021,-1569.78 2103.65,-1489.21 2455.98,-1611.96 2539,-1531.78 2620.97,-1452.6 2654.71,-596.79 2660.56,-429.16"/>
<polygon fill="blue" stroke="blue" points="2664.06,-429.04 2660.91,-418.92 2657.07,-428.8 2664.06,-429.04"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="node136" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<g id="a_node136"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof: &amp;PresentationProof, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), VerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.finalize_public_attrs(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1844,-2301.78 1788,-2301.78 1788,-2265.78 1844,-2265.78 1844,-2301.78"/>
<text text-anchor="middle" x="1816" y="-2280.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge165" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1840.46,-2302.05C1938.07,-2378.09 2312.07,-2669.44 2423.5,-2756.23"/>
<polygon fill="blue" stroke="blue" points="2421.62,-2759.21 2431.66,-2762.59 2425.92,-2753.69 2421.62,-2759.21"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge143" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 sho/ShoExt#get_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="blue" d="M2665.15,-419.07C2675.4,-533.34 2730.39,-1160.79 2750,-1673.78 2752.23,-1732.04 2750.02,-5825.89 2786,-5871.78 2786.48,-5872.39 2786.98,-5873 2787.49,-5873.59"/>
<polygon fill="blue" stroke="blue" points="2785.07,-5876.12 2794.68,-5880.58 2789.95,-5871.1 2785.07,-5876.12"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches(). -->
<g id="node138" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().</title>
<g id="a_node138"><a xlink:title="criterion_group!(benches, bench_server_param_serialization,); criterion_main!(benches);">
<polygon fill="white" stroke="black" points="91,-3731.78 16,-3731.78 16,-3695.78 91,-3695.78 91,-3731.78"/>
<text text-anchor="middle" x="53.5" y="-3710.08" font-family="Helvetica,sans-Serif" font-size="14.00">benches</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 bench_server_param_serialization(). -->
<g id="node139" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 bench_server_param_serialization().</title>
<g id="a_node139"><a xlink:title="fn bench_server_param_serialization(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;&#160;let serialized_secret_params = zkgroup::seri...">
<polygon fill="white" stroke="black" points="543,-3731.78 291,-3731.78 291,-3695.78 543,-3695.78 543,-3731.78"/>
<text text-anchor="middle" x="417" y="-3710.08" font-family="Helvetica,sans-Serif" font-size="14.00">bench_server_param_serialization</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 bench_server_param_serialization(). -->
<g id="edge240" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 bench_server_param_serialization().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M91.15,-3713.78C135.46,-3713.78 212.54,-3713.78 280.5,-3713.78"/>
<polygon fill="blue" stroke="blue" points="280.89,-3717.28 290.89,-3713.78 280.89,-3710.28 280.89,-3717.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile(). -->
<g id="node140" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().</title>
<g id="a_node140"><a xlink:title="pub fn benchmark_integration_profile(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;// SERVER &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = ser...">
<polygon fill="white" stroke="black" points="531,-3565.78 303,-3565.78 303,-3529.78 531,-3529.78 531,-3565.78"/>
<text text-anchor="middle" x="417" y="-3544.08" font-family="Helvetica,sans-Serif" font-size="14.00">benchmark_integration_profile</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile(). -->
<g id="edge237" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M59.53,-3695.58C67.59,-3670.04 85.96,-3624.08 119,-3600.78 169.07,-3565.46 235.39,-3551.35 292.66,-3546.44"/>
<polygon fill="blue" stroke="blue" points="293.17,-3549.91 302.87,-3545.66 292.63,-3542.94 293.17,-3549.91"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth(). -->
<g id="node141" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().</title>
<g id="a_node141"><a xlink:title="fn benchmark_integration_auth(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params.get...">
<polygon fill="white" stroke="black" points="525,-3511.78 309,-3511.78 309,-3475.78 525,-3475.78 525,-3511.78"/>
<text text-anchor="middle" x="417" y="-3490.08" font-family="Helvetica,sans-Serif" font-size="14.00">benchmark_integration_auth</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth(). -->
<g id="edge238" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M54.48,-3695.53C55.52,-3656.36 64.01,-3564.29 119,-3520.78 168.8,-3481.37 239.05,-3473.52 298.74,-3476.04"/>
<polygon fill="blue" stroke="blue" points="298.81,-3479.55 308.98,-3476.58 299.18,-3472.56 298.81,-3479.55"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements(). -->
<g id="node142" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().</title>
<g id="a_node142"><a xlink:title="pub fn benchmark_group_send_endorsements(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;const DAY_ALIGNED_TIMESTAMP: zkgroup::Timestamp = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;zkgroup::Timestamp::from_epoch_seconds(1681344000); // 2023&#45;04&#45;13 00:00:00 U...">
<polygon fill="white" stroke="black" points="562,-3457.78 272,-3457.78 272,-3421.78 562,-3421.78 562,-3457.78"/>
<text text-anchor="middle" x="417" y="-3436.08" font-family="Helvetica,sans-Serif" font-size="14.00">benchmark_group_send_endorsements</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements(). -->
<g id="edge239" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M56.56,-3695.63C62.84,-3643.8 83.5,-3496.86 119,-3466.78 169.14,-3424.29 242.57,-3417.29 303.88,-3421.04"/>
<polygon fill="blue" stroke="blue" points="303.77,-3424.55 314,-3421.77 304.27,-3417.56 303.77,-3424.55"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 bench_server_param_serialization().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge491" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 bench_server_param_serialization().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M501.58,-3731.81C569.3,-3741.03 661.91,-3740.38 715,-3683.78 756.46,-3639.58 694.29,-3183.66 735,-3138.78 772.31,-3097.64 840.1,-3097.09 886.31,-3102.64"/>
<polygon fill="blue" stroke="blue" points="886.03,-3106.14 896.4,-3103.99 886.96,-3099.2 886.03,-3106.14"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key(). -->
<g id="edge248" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M531.34,-3536.27C595.08,-3536.57 670.56,-3549.53 715,-3600.78 756.96,-3649.15 688.94,-4132.29 735,-4176.78 767.13,-4207.81 1099.55,-4201.12 1137,-4176.78 1155.35,-4164.85 1140.11,-4145.7 1157,-4131.78 1192.71,-4102.33 1241.68,-4088.55 1285.26,-4082.35"/>
<polygon fill="blue" stroke="blue" points="1285.88,-4085.8 1295.34,-4081.03 1284.97,-4078.85 1285.88,-4085.8"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key(). -->
<g id="edge256" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M531.04,-3536.53C594.68,-3536.92 670.16,-3549.88 715,-3600.78 744.2,-3633.91 705.11,-3965.26 735,-3997.78 763.53,-4028.8 809.41,-4036.63 850.04,-4036.21"/>
<polygon fill="blue" stroke="blue" points="850.34,-4039.71 860.24,-4035.94 850.15,-4032.71 850.34,-4039.71"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id(). -->
<g id="edge249" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M531.16,-3536.43C594.84,-3536.78 670.31,-3549.75 715,-3600.78 748.05,-3638.51 701.16,-4014.75 735,-4051.78 764.04,-4083.55 811.28,-4091.05 852.55,-4090.25"/>
<polygon fill="blue" stroke="blue" points="852.76,-4093.74 862.63,-4089.89 852.51,-4086.75 852.76,-4093.74"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment(). -->
<g id="edge250" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M531.05,-3535.88C595.11,-3535.95 671.01,-3548.8 715,-3600.78 749.01,-3640.96 700.44,-5456.07 735,-5495.78 764.88,-5530.1 815.77,-5537.36 858.73,-5536.16"/>
<polygon fill="blue" stroke="blue" points="859.06,-5539.65 868.9,-5535.72 858.76,-5532.65 859.06,-5539.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="edge252" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.63,-3565.78C563.61,-3576.47 659.9,-3578.41 715,-3520.78 748.51,-3485.72 702.26,-3120.55 735,-3084.78 737.05,-3082.53 739.19,-3080.41 741.42,-3078.41"/>
<polygon fill="blue" stroke="blue" points="743.72,-3081.05 749.28,-3072.03 739.31,-3075.61 743.72,-3081.05"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge251" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M531.16,-3549.72C589.42,-3555.08 659.64,-3568.61 715,-3600.78 727.01,-3607.75 722.85,-3618.06 735,-3624.78 742.94,-3629.16 751.31,-3632.94 759.96,-3636.19"/>
<polygon fill="blue" stroke="blue" points="758.85,-3639.51 769.44,-3639.5 761.16,-3632.9 758.85,-3639.51"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge254" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M531.34,-3565.14C591.77,-3568.1 663.96,-3560.78 715,-3520.78 736.46,-3503.96 713.91,-3480.06 735,-3462.78 749.06,-3451.25 765.64,-3443.29 783.14,-3437.92"/>
<polygon fill="blue" stroke="blue" points="784.25,-3441.25 792.94,-3435.2 782.37,-3434.5 784.25,-3441.25"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="edge247" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M507.6,-3565.78C573.26,-3573.41 660.16,-3571.09 715,-3520.78 752.26,-3486.59 698.49,-3443.76 735,-3408.78 750.34,-3394.07 769.64,-3384.82 790.15,-3379.26"/>
<polygon fill="blue" stroke="blue" points="791.08,-3382.64 799.98,-3376.89 789.44,-3375.84 791.08,-3382.64"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge255" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M496.21,-3565.8C564.09,-3576.34 659.89,-3578.04 715,-3520.78 773.94,-3459.53 677.4,-3201.29 735,-3138.78 772.52,-3098.05 839.94,-3097.32 886.04,-3102.72"/>
<polygon fill="blue" stroke="blue" points="885.75,-3106.21 896.12,-3104.04 886.65,-3099.27 885.75,-3106.21"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation(). -->
<g id="node200" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().</title>
<g id="a_node200"><a xlink:title=" &#160;&#160;&#160;pub fn verify_expiring_profile_key_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: api::groups::GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::profiles::ExpiringProfileKeyCred...">
<polygon fill="white" stroke="black" points="1572.5,-3191.78 1203.5,-3191.78 1203.5,-3155.78 1572.5,-3155.78 1572.5,-3191.78"/>
<text text-anchor="middle" x="1388" y="-3170.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify_expiring_profile_key_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation(). -->
<g id="edge253" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.37,-3565.79C563.42,-3576.57 659.95,-3578.64 715,-3520.78 752.56,-3481.3 695.69,-3068.51 735,-3030.78 767.22,-2999.84 1093.83,-3019.3 1137,-3030.78 1223.71,-3053.82 1311.69,-3114.82 1356.56,-3149.24"/>
<polygon fill="blue" stroke="blue" points="1354.64,-3152.18 1364.68,-3155.54 1358.93,-3146.65 1354.64,-3152.18"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="node144" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<g id="a_node144"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; AuthCredentialWithPniZkcPr...">
<polygon fill="white" stroke="black" points="970.5,-2746.78 901.5,-2746.78 901.5,-2710.78 970.5,-2710.78 970.5,-2746.78"/>
<text text-anchor="middle" x="936" y="-2725.08" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="edge263" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.55,-3511.8C562.77,-3522.83 660.06,-3525.27 715,-3466.78 769.11,-3409.17 682.16,-2814.54 735,-2755.78 773.55,-2712.9 845.18,-2713.99 891.43,-2720.24"/>
<polygon fill="blue" stroke="blue" points="891.06,-2723.72 901.46,-2721.73 892.09,-2716.8 891.06,-2723.72"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="node145" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<g id="a_node145"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: &amp;GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailu...">
<polygon fill="white" stroke="black" points="964,-2800.78 908,-2800.78 908,-2764.78 964,-2764.78 964,-2800.78"/>
<text text-anchor="middle" x="936" y="-2779.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="edge261" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.85,-3511.82C563.03,-3522.79 660.08,-3525.11 715,-3466.78 765.06,-3413.6 686.1,-2864.03 735,-2809.78 775.37,-2764.99 851.84,-2768.21 897.64,-2775.14"/>
<polygon fill="blue" stroke="blue" points="897.31,-2778.63 907.75,-2776.81 898.45,-2771.73 897.31,-2778.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="node150" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<g id="a_node150"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;AuthCredentialWithPniZkc, ZkGroupV...">
<polygon fill="white" stroke="black" points="969,-2962.78 903,-2962.78 903,-2926.78 969,-2926.78 969,-2962.78"/>
<text text-anchor="middle" x="936" y="-2941.08" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="edge265" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.68,-3511.82C563.69,-3522.54 659.99,-3524.49 715,-3466.78 750.99,-3429.02 702.32,-3038.42 735,-2997.78 772.56,-2951.06 846.14,-2942.73 892.82,-2942.59"/>
<polygon fill="blue" stroke="blue" points="892.89,-2946.09 902.92,-2942.68 892.95,-2939.09 892.89,-2946.09"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="node151" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<g id="a_node151"><a xlink:title=" &#160;&#160;&#160;pub fn issue_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;S...">
<polygon fill="white" stroke="black" points="1000,-2908.78 872,-2908.78 872,-2872.78 1000,-2872.78 1000,-2908.78"/>
<text text-anchor="middle" x="936" y="-2887.08" font-family="Helvetica,sans-Serif" font-size="14.00">issue_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="edge262" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.1,-3511.8C563.2,-3522.66 659.99,-3524.85 715,-3466.78 756.98,-3422.46 694,-2963 735,-2917.78 766.05,-2883.53 818.21,-2877.41 861.48,-2879.52"/>
<polygon fill="blue" stroke="blue" points="861.49,-2883.03 871.7,-2880.18 861.94,-2876.05 861.49,-2883.03"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key(). -->
<g id="edge264" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.83,-3475.75C562.98,-3464.81 660.02,-3462.49 715,-3520.78 762.14,-3570.75 685.64,-4090.99 735,-4138.78 799.18,-4200.91 1048.93,-4153.74 1137,-4138.78 1146.28,-4137.2 1147.95,-4134.39 1157,-4131.78 1199.73,-4119.42 1247.57,-4108.01 1288.52,-4098.97"/>
<polygon fill="blue" stroke="blue" points="1289.48,-4102.34 1298.49,-4096.78 1287.98,-4095.5 1289.48,-4102.34"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id(). -->
<g id="edge259" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.08,-3475.77C563.17,-3464.92 659.96,-3462.73 715,-3520.78 755.63,-3563.62 695.31,-4008.06 735,-4051.78 763.94,-4083.65 811.17,-4091.15 852.47,-4090.32"/>
<polygon fill="blue" stroke="blue" points="852.68,-4093.82 862.55,-4089.96 852.43,-4086.82 852.68,-4093.82"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge260" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M496.75,-3511.78C564.52,-3522.16 659.83,-3523.62 715,-3466.78 765.86,-3414.38 685.29,-3192.27 735,-3138.78 772.7,-3098.21 840.08,-3097.44 886.12,-3102.79"/>
<polygon fill="blue" stroke="blue" points="885.81,-3106.28 896.18,-3104.1 886.71,-3099.34 885.81,-3106.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key(). -->
<g id="edge304" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.84,-3421.74C563.01,-3410.78 660.05,-3408.46 715,-3466.78 763.72,-3518.47 683.99,-4056.34 735,-4105.78 773.51,-4143.1 1111.76,-4110.44 1285.27,-4090.9"/>
<polygon fill="blue" stroke="blue" points="1285.89,-4094.35 1295.44,-4089.75 1285.11,-4087.4 1285.89,-4094.35"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge303" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M498.96,-3457.78C567.2,-3467.67 661.95,-3468.01 715,-3409.78 765.26,-3354.59 685.67,-778.79 735,-722.78 759.18,-695.32 796.92,-685.77 833.12,-684.09"/>
<polygon fill="blue" stroke="blue" points="833.38,-687.58 843.28,-683.81 833.19,-680.58 833.38,-687.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge305" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M498.96,-3457.78C567.19,-3467.67 661.95,-3468.01 715,-3409.78 764.26,-3355.71 686.66,-831.66 735,-776.78 775.18,-731.16 852.75,-734.97 898.58,-742.17"/>
<polygon fill="blue" stroke="blue" points="898.24,-745.66 908.68,-743.89 899.41,-738.76 898.24,-745.66"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded(). -->
<g id="node184" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().</title>
<g id="a_node184"><a xlink:title=" &#160;&#160;&#160;pub fn receive_with_service_ids_single_threaded( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_ids: impl IntoIterator&lt;Item = libsignal_core::ServiceId&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_params: &amp;GroupSecretPara...">
<polygon fill="white" stroke="black" points="1087,-929.78 785,-929.78 785,-893.78 1087,-893.78 1087,-929.78"/>
<text text-anchor="middle" x="936" y="-908.08" font-family="Helvetica,sans-Serif" font-size="14.00">receive_with_service_ids_single_threaded</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded(). -->
<g id="edge307" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M499.28,-3457.81C567.48,-3467.64 662.01,-3467.88 715,-3409.78 758.07,-3362.55 710.06,-1167.63 735,-1108.78 768.03,-1030.83 848.31,-967.97 896.51,-935.6"/>
<polygon fill="blue" stroke="blue" points="898.71,-938.35 905.12,-929.92 894.85,-932.51 898.71,-938.35"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts(). -->
<g id="edge308" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M499.29,-3457.82C567.5,-3467.66 662.03,-3467.9 715,-3409.78 762.24,-3357.93 688.63,-937.4 735,-884.78 758.98,-857.56 796.27,-847.94 832.18,-846.14"/>
<polygon fill="blue" stroke="blue" points="832.37,-849.63 842.26,-845.83 832.16,-842.64 832.37,-849.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration(). -->
<g id="edge306" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M498.96,-3457.78C567.2,-3467.67 661.96,-3468.02 715,-3409.78 766.27,-3353.48 684.68,-725.92 735,-668.78 767.44,-631.94 824.26,-627.33 869.07,-630.71"/>
<polygon fill="blue" stroke="blue" points="869.03,-634.22 879.31,-631.64 869.66,-627.25 869.03,-634.22"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge302" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M504.78,-3457.78C571.82,-3466.16 661.86,-3464.37 715,-3409.78 757.12,-3366.5 693.61,-3182.75 735,-3138.78 772.95,-3098.45 840.27,-3097.63 886.23,-3102.9"/>
<polygon fill="blue" stroke="blue" points="885.91,-3106.39 896.27,-3104.19 886.8,-3099.44 885.91,-3106.39"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key(). -->
<g id="node143" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().</title>
<g id="a_node143"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn verify_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_key: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: &amp;GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), Zk...">
<polygon fill="white" stroke="black" points="1444.5,-2800.78 1331.5,-2800.78 1331.5,-2764.78 1444.5,-2764.78 1444.5,-2800.78"/>
<text text-anchor="middle" x="1388" y="-2779.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge30" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1444.93,-2791.03C1495.45,-2795.32 1569.28,-2793.34 1619,-2755.78 1695.18,-2698.22 1781.79,-2403.88 1807.46,-2311.53"/>
<polygon fill="blue" stroke="blue" points="1810.86,-2312.35 1810.15,-2301.78 1804.12,-2310.48 1810.86,-2312.35"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key(). -->
<g id="node147" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().</title>
<g id="a_node147"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn present_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; AuthCredentia...">
<polygon fill="white" stroke="black" points="1451,-2746.78 1325,-2746.78 1325,-2710.78 1451,-2710.78 1451,-2746.78"/>
<text text-anchor="middle" x="1388" y="-2725.08" font-family="Helvetica,sans-Serif" font-size="14.00">present_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key(). -->
<g id="edge144" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M970.82,-2728.78C1043.57,-2728.78 1216.28,-2728.78 1314.82,-2728.78"/>
<polygon fill="blue" stroke="blue" points="1315,-2732.28 1325,-2728.78 1315,-2725.28 1315,-2732.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key(). -->
<g id="edge190" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M964.14,-2782.78C1033.85,-2782.78 1220.8,-2782.78 1321.16,-2782.78"/>
<polygon fill="blue" stroke="blue" points="1321.19,-2786.28 1331.19,-2782.78 1321.19,-2779.28 1321.19,-2786.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key(). -->
<g id="node146" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().</title>
<g id="a_node146"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn issue_credential_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_key: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1480.5,-2881.78 1295.5,-2881.78 1295.5,-2845.78 1480.5,-2845.78 1480.5,-2881.78"/>
<text text-anchor="middle" x="1388" y="-2860.08" font-family="Helvetica,sans-Serif" font-size="14.00">issue_credential_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge215" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1480.65,-2863.78C1573.77,-2863.78 1713.32,-2863.78 1778.73,-2863.78"/>
<polygon fill="blue" stroke="blue" points="1778.95,-2867.28 1788.95,-2863.78 1778.95,-2860.28 1778.95,-2867.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge234" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1451.07,-2740.05C1503.7,-2745.67 1577.11,-2743.54 1619,-2698.78 1686.24,-2626.91 1580.83,-2329.63 1647,-2256.78 1677.59,-2223.1 1732.18,-2220.17 1770.82,-2223.18"/>
<polygon fill="blue" stroke="blue" points="1770.98,-2226.71 1781.27,-2224.17 1771.64,-2219.74 1770.98,-2226.71"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present(). -->
<g id="node148" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().</title>
<g id="a_node148"><a xlink:title=" &#160;&#160;&#160;fn issue_receive_present() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const ACI: Aci = Aci::from_uuid_bytes([b&#39;a&#39;; 16]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const PNI: Pni = Pni::from_uuid_bytes([b&#39;p&#39;; 16]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const REDEMPTION_TIME: Timestamp = Timest...">
<polygon fill="white" stroke="black" points="1020,-2854.78 852,-2854.78 852,-2818.78 1020,-2818.78 1020,-2854.78"/>
<text text-anchor="middle" x="936" y="-2833.08" font-family="Helvetica,sans-Serif" font-size="14.00">issue_receive_present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate(). -->
<g id="edge368" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1020.12,-2848.53C1061.39,-2849.35 1108.41,-2841.79 1137,-2809.78 1171.94,-2770.65 1120.45,-1903.41 1157,-1865.78 1249.08,-1770.96 2216.34,-1836.03 2345,-1805.78 2368.29,-1800.3 2392.81,-1790.08 2412.78,-1780.47"/>
<polygon fill="blue" stroke="blue" points="2414.48,-1783.54 2421.9,-1775.98 2411.39,-1777.26 2414.48,-1783.54"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key(). -->
<g id="edge371" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1020.06,-2826.81C1106.83,-2816.4 1241.19,-2800.27 1320.99,-2790.7"/>
<polygon fill="blue" stroke="blue" points="1321.89,-2794.11 1331.4,-2789.45 1321.05,-2787.16 1321.89,-2794.11"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key(). -->
<g id="edge372" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1020.06,-2841.76C1094.83,-2846.25 1204.94,-2852.85 1285.02,-2857.66"/>
<polygon fill="blue" stroke="blue" points="1284.94,-2861.16 1295.13,-2858.26 1285.35,-2854.17 1284.94,-2861.16"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key(). -->
<g id="edge370" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1020.06,-2844.23C1059.33,-2843.44 1104.59,-2835.73 1137,-2809.78 1156.98,-2793.78 1136.88,-2771.6 1157,-2755.78 1201.12,-2721.07 1265.54,-2716.19 1314.98,-2718.93"/>
<polygon fill="blue" stroke="blue" points="1314.77,-2722.42 1324.98,-2719.59 1315.23,-2715.44 1314.77,-2722.42"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key(). -->
<g id="node149" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().</title>
<g id="a_node149"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn receive_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;AuthCredentialWithPni...">
<polygon fill="white" stroke="black" points="1449.5,-2935.78 1326.5,-2935.78 1326.5,-2899.78 1449.5,-2899.78 1449.5,-2935.78"/>
<text text-anchor="middle" x="1388" y="-2914.08" font-family="Helvetica,sans-Serif" font-size="14.00">receive_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key(). -->
<g id="edge369" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1020.12,-2833.64C1058.05,-2835.68 1102.16,-2843.19 1137,-2863.78 1149.86,-2871.37 1144.08,-2883.29 1157,-2890.78 1204.97,-2918.56 1267.99,-2924.25 1315.93,-2923.58"/>
<polygon fill="blue" stroke="blue" points="1316.31,-2927.07 1326.22,-2923.34 1316.15,-2920.08 1316.31,-2927.07"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate(). -->
<g id="node178" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate().</title>
<g id="a_node178"><a xlink:title=" &#160;&#160;&#160;pub fn generate(randomness: RandomnessBytes) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b&#39; Signal_ZKGroup_20200424_Random_GroupSecretParams_Generate&#39; , &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;randomness, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="975.5,-3988.78 896.5,-3988.78 896.5,-3952.78 975.5,-3952.78 975.5,-3988.78"/>
<text text-anchor="middle" x="936" y="-3967.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate(). -->
<g id="edge373" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M851.99,-2822.53C802.33,-2819.53 745.3,-2827.2 725,-2872.78 713.05,-2899.6 713.05,-3902.95 725,-3929.78 750.32,-3986.62 832.18,-3986.81 886.18,-3980.03"/>
<polygon fill="blue" stroke="blue" points="886.82,-3983.47 896.25,-3978.64 885.87,-3976.54 886.82,-3983.47"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge388" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1449.58,-2917.78C1539.13,-2917.78 1704.15,-2917.78 1777.81,-2917.78"/>
<polygon fill="blue" stroke="blue" points="1777.99,-2921.28 1787.99,-2917.78 1777.99,-2914.28 1777.99,-2921.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key(). -->
<g id="edge427" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M969,-2942.86C1040.95,-2938.54 1216.92,-2927.98 1316.08,-2922.03"/>
<polygon fill="blue" stroke="blue" points="1316.53,-2925.51 1326.31,-2921.42 1316.11,-2918.52 1316.53,-2925.51"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key(). -->
<g id="edge460" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1000.04,-2886.99C1073.92,-2882.56 1197.34,-2875.15 1284.92,-2869.9"/>
<polygon fill="blue" stroke="blue" points="1285.38,-2873.38 1295.15,-2869.29 1284.96,-2866.39 1285.38,-2873.38"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp(). -->
<g id="node152" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().</title>
<g id="a_node152"><a xlink:title=" &#160;&#160;&#160;fn test_client_enforces_timestamp() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let redemption_time: Timestamp = DAY_ALIGNED_TIMESTAMP; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let request_context = BackupAuthCredentialRequestContext::new(&amp;KEY, ACI.into()); &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1053,-1210.78 819,-1210.78 819,-1174.78 1053,-1174.78 1053,-1210.78"/>
<text text-anchor="middle" x="936" y="-1189.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_client_enforces_timestamp</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new(). -->
<g id="edge15" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1053.18,-1183.48C1151.61,-1175.61 1286.63,-1164.81 1350.58,-1159.69"/>
<polygon fill="blue" stroke="blue" points="1350.89,-1163.18 1360.58,-1158.89 1350.33,-1156.2 1350.89,-1163.18"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge16" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1053.18,-1197.42C1151.61,-1201.36 1286.63,-1206.76 1350.58,-1209.32"/>
<polygon fill="blue" stroke="blue" points="1350.45,-1212.82 1360.58,-1209.72 1350.73,-1205.82 1350.45,-1212.82"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge17" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1053.24,-1196.63C1081.58,-1200.73 1111.17,-1207.82 1137,-1219.78 1147.85,-1224.8 1146.1,-1232.85 1157,-1237.78 1217.96,-1265.35 1296.86,-1268.49 1344.61,-1267.3"/>
<polygon fill="blue" stroke="blue" points="1345.01,-1270.79 1354.89,-1266.97 1344.78,-1263.79 1345.01,-1270.79"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="node153" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<g id="a_node153"><a xlink:title=" &#160;&#160;&#160;fn generate_credential(redemption_time: Timestamp) &#45;&gt; BackupAuthCredential { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// client generated materials; issuance request &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let request_context = BackupAuthCredentialRequestContex...">
<polygon fill="white" stroke="black" points="1013,-1264.78 859,-1264.78 859,-1228.78 1013,-1228.78 1013,-1264.78"/>
<text text-anchor="middle" x="936" y="-1243.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new(). -->
<g id="edge55" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1013.06,-1252.18C1053.07,-1251.37 1101.12,-1244.27 1137,-1219.78 1152.12,-1209.46 1141.79,-1193.96 1157,-1183.78 1215.81,-1144.37 1302.53,-1146.4 1350.94,-1151.51"/>
<polygon fill="blue" stroke="blue" points="1350.62,-1154.99 1360.96,-1152.66 1351.42,-1148.04 1350.62,-1154.99"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge54" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1013.08,-1240.69C1111.02,-1232.85 1277.28,-1219.55 1350.52,-1213.69"/>
<polygon fill="blue" stroke="blue" points="1350.94,-1217.17 1360.63,-1212.89 1350.38,-1210.19 1350.94,-1217.17"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge53" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1013.08,-1249.82C1108.47,-1253.63 1268.66,-1260.04 1344.6,-1263.08"/>
<polygon fill="blue" stroke="blue" points="1344.61,-1266.58 1354.75,-1263.49 1344.89,-1259.59 1344.61,-1266.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity(). -->
<g id="node154" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().</title>
<g id="a_node154"><a xlink:title=" &#160;&#160;&#160;fn test_client_enforces_timestamp_granularity() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let redemption_time: Timestamp = DAY_ALIGNED_TIMESTAMP.add_seconds(60 * 60); // not on a day boundary! &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let request_context = Back...">
<polygon fill="white" stroke="black" points="1094.5,-1156.78 777.5,-1156.78 777.5,-1120.78 1094.5,-1120.78 1094.5,-1156.78"/>
<text text-anchor="middle" x="936" y="-1135.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_client_enforces_timestamp_granularity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new(). -->
<g id="edge96" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1094.7,-1145.08C1186.81,-1148.77 1295.5,-1153.12 1350.77,-1155.33"/>
<polygon fill="blue" stroke="blue" points="1350.64,-1158.82 1360.77,-1155.73 1350.92,-1151.83 1350.64,-1158.82"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge97" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1094.62,-1150.88C1109.29,-1154.71 1123.65,-1159.59 1137,-1165.78 1147.85,-1170.8 1146.1,-1178.85 1157,-1183.78 1220.55,-1212.52 1303.59,-1214.71 1350.53,-1213.13"/>
<polygon fill="blue" stroke="blue" points="1350.96,-1216.61 1360.81,-1212.7 1350.67,-1209.62 1350.96,-1216.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge98" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1094.93,-1141.92C1110.3,-1147.36 1124.72,-1155.07 1137,-1165.78 1162.03,-1187.6 1131.78,-1216.17 1157,-1237.78 1209.13,-1282.43 1294.03,-1279.53 1344.8,-1272.65"/>
<polygon fill="blue" stroke="blue" points="1345.4,-1276.1 1354.79,-1271.18 1344.39,-1269.17 1345.4,-1276.1"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate(). -->
<g id="edge164" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1415.3,-1159.22C1458.12,-1163.34 1545.5,-1172.35 1619,-1183.78 1782.73,-1209.23 1857.1,-1149.43 1985,-1254.78 2017.94,-1281.9 1987.78,-1317 2021,-1343.78 2051.15,-1368.08 2095.29,-1373.87 2129.09,-1374.14"/>
<polygon fill="blue" stroke="blue" points="2129.25,-1377.63 2139.22,-1374.05 2129.19,-1370.63 2129.25,-1377.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind(). -->
<g id="edge163" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1415.21,-1152.71C1500.3,-1140.57 1775.38,-1109.67 1985,-1180.78 2053.03,-1203.85 2118.36,-1259.07 2152.81,-1291.6"/>
<polygon fill="blue" stroke="blue" points="2150.44,-1294.18 2160.08,-1298.57 2155.28,-1289.13 2150.44,-1294.18"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge167" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M970.59,-1293.68C1015.91,-1286.31 1095.71,-1281.5 1137,-1327.78 1173.07,-1368.2 1118.3,-2264.86 1157,-2302.78 1193.67,-2338.7 1574.25,-2327.93 1619,-2302.78 1639.86,-2291.05 1627.13,-2270.13 1647,-2256.78 1683.71,-2232.11 1734.94,-2227.06 1771.16,-2227.12"/>
<polygon fill="blue" stroke="blue" points="1771.36,-2230.62 1781.41,-2227.27 1771.47,-2223.62 1771.36,-2230.62"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge195" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1415.1,-1205.32C1462.04,-1197.14 1561.15,-1187.58 1619,-1237.78 1655.8,-1269.71 1610.88,-1311.07 1647,-1343.78 1682.72,-1376.13 1741.15,-1378.21 1778.84,-1375.46"/>
<polygon fill="blue" stroke="blue" points="1779.22,-1378.94 1788.88,-1374.58 1778.61,-1371.97 1779.22,-1378.94"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge335" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1416.72,-1282.84C1462.62,-1311.86 1558.2,-1368.58 1647,-1397.78 1690.62,-1412.12 1743.2,-1419 1777.78,-1422.19"/>
<polygon fill="blue" stroke="blue" points="1777.64,-1425.69 1787.9,-1423.06 1778.24,-1418.72 1777.64,-1425.69"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption(). -->
<g id="node159" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().</title>
<g id="a_node159"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_wrong_redemption() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let valid_presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_param...">
<polygon fill="white" stroke="black" points="554.5,-1318.78 279.5,-1318.78 279.5,-1282.78 554.5,-1282.78 554.5,-1318.78"/>
<text text-anchor="middle" x="417" y="-1297.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_wrong_redemption</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge362" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M554.86,-1289.24C605.24,-1284.76 662.75,-1279.36 715,-1273.78 759.18,-1269.06 808.26,-1263.1 848.84,-1257.99"/>
<polygon fill="blue" stroke="blue" points="849.48,-1261.43 858.96,-1256.71 848.6,-1254.49 849.48,-1261.43"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge363" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M554.51,-1300.78C666.29,-1300.78 817.55,-1300.78 891.14,-1300.78"/>
<polygon fill="blue" stroke="blue" points="891.42,-1304.28 901.42,-1300.78 891.42,-1297.28 891.42,-1304.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge361" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M554.86,-1312.31C605.24,-1316.8 662.75,-1322.2 715,-1327.78 779.33,-1334.65 854.06,-1344.14 897.78,-1349.85"/>
<polygon fill="blue" stroke="blue" points="897.57,-1353.35 907.94,-1351.18 898.48,-1346.41 897.57,-1353.35"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge367" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M949.89,-1372.97C987.45,-1427.21 1096.71,-1593.73 1137,-1750.78 1144.97,-1781.84 1133.93,-2305.49 1157,-2327.78 1230.84,-2399.1 1516.96,-2339.09 1619,-2327.78 1675.28,-2321.54 1739.01,-2305.51 1778.11,-2294.62"/>
<polygon fill="blue" stroke="blue" points="1779.06,-2297.99 1787.73,-2291.91 1777.16,-2291.26 1779.06,-2297.99"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level(). -->
<g id="node161" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().</title>
<g id="a_node161"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_wrong_receipt_level() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let valid_presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_pa...">
<polygon fill="white" stroke="black" points="558,-1264.78 276,-1264.78 276,-1228.78 558,-1228.78 558,-1264.78"/>
<text text-anchor="middle" x="417" y="-1243.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_wrong_receipt_level</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge416" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M558.25,-1246.78C650.83,-1246.78 769.2,-1246.78 848.32,-1246.78"/>
<polygon fill="blue" stroke="blue" points="848.74,-1250.28 858.74,-1246.78 848.74,-1243.28 848.74,-1250.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge414" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M558.22,-1258.61C607.79,-1263.04 663.9,-1268.32 715,-1273.78 776.28,-1280.32 847,-1289.24 891.35,-1295.01"/>
<polygon fill="blue" stroke="blue" points="891.12,-1298.51 901.49,-1296.33 892.03,-1291.57 891.12,-1298.51"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge415" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M558.01,-1229.34C611.91,-1229.86 671.01,-1240.1 715,-1273.78 735.32,-1289.33 715.02,-1311.78 735,-1327.78 781.34,-1364.88 853.94,-1364.7 897.74,-1360.33"/>
<polygon fill="blue" stroke="blue" points="898.15,-1363.81 907.7,-1359.22 897.37,-1356.85 898.15,-1363.81"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id(). -->
<g id="node162" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().</title>
<g id="a_node162"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_wrong_backup_id() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let valid_presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_params...">
<polygon fill="white" stroke="black" points="550,-1210.78 284,-1210.78 284,-1174.78 550,-1174.78 550,-1210.78"/>
<text text-anchor="middle" x="417" y="-1189.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_wrong_backup_id</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge420" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M550.04,-1203.88C601.55,-1208.45 661.07,-1214.02 715,-1219.78 759.18,-1224.49 808.26,-1230.45 848.84,-1235.56"/>
<polygon fill="blue" stroke="blue" points="848.6,-1239.06 858.96,-1236.85 849.48,-1232.12 848.6,-1239.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge418" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M550.12,-1175.34C606.07,-1174.91 668.85,-1184.45 715,-1219.78 735.32,-1235.33 715.02,-1257.78 735,-1273.78 779.06,-1309.05 846.86,-1310.62 891.08,-1306.94"/>
<polygon fill="blue" stroke="blue" points="891.61,-1310.41 901.23,-1305.97 890.95,-1303.44 891.61,-1310.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge419" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M508.53,-1174.76C574.02,-1167.32 660.28,-1169.9 715,-1219.78 751.08,-1252.66 699.65,-1294.11 735,-1327.78 778.34,-1369.05 852.88,-1367.26 897.69,-1361.51"/>
<polygon fill="blue" stroke="blue" points="898.46,-1364.93 907.87,-1360.07 897.47,-1358 898.46,-1364.93"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration(). -->
<g id="node163" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().</title>
<g id="a_node163"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_expiration() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_params().get_publ...">
<polygon fill="white" stroke="black" points="525,-1372.78 309,-1372.78 309,-1336.78 525,-1336.78 525,-1372.78"/>
<text text-anchor="middle" x="417" y="-1351.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_expiration</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge471" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M525.25,-1371.39C586.68,-1374.94 661.86,-1368.45 715,-1327.78 735.32,-1312.22 715.02,-1289.77 735,-1273.78 766.51,-1248.55 810.16,-1240.56 848.65,-1239.4"/>
<polygon fill="blue" stroke="blue" points="848.88,-1242.9 858.83,-1239.25 848.78,-1235.9 848.88,-1242.9"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge470" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M525.31,-1345.84C581.8,-1340.93 652.19,-1334.48 715,-1327.78 776.28,-1321.23 847,-1312.31 891.35,-1306.54"/>
<polygon fill="blue" stroke="blue" points="892.03,-1309.98 901.49,-1305.22 891.12,-1303.04 892.03,-1309.98"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge472" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M525.12,-1354.78C641.36,-1354.78 820.66,-1354.78 897.71,-1354.78"/>
<polygon fill="blue" stroke="blue" points="897.89,-1358.28 907.89,-1354.78 897.89,-1351.28 897.89,-1358.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge4" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1421.13,-2530.38C1471.22,-2520.95 1567.51,-2511.66 1619,-2564.78 1669.61,-2616.99 1597.51,-2837.5 1647,-2890.78 1679.8,-2926.09 1739.04,-2927.36 1777.68,-2923.63"/>
<polygon fill="blue" stroke="blue" points="1778.45,-2927.07 1788,-2922.47 1777.67,-2920.11 1778.45,-2927.07"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge393" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1452,-2471.68C1504.3,-2465.64 1576.73,-2467.2 1619,-2510.78 1669.17,-2562.49 1598.4,-2780.58 1647,-2833.78 1679.88,-2869.76 1739.89,-2871.89 1778.58,-2868.81"/>
<polygon fill="blue" stroke="blue" points="1779.26,-2872.26 1788.88,-2867.82 1778.6,-2865.29 1779.26,-2872.26"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge417" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1422.74,-2599.45C1473.23,-2608.72 1567.94,-2617.19 1619,-2564.78 1666.96,-2515.55 1600.1,-2307.01 1647,-2256.78 1678.05,-2223.52 1732.55,-2220.5 1771.04,-2223.38"/>
<polygon fill="blue" stroke="blue" points="1771.17,-2226.91 1781.44,-2224.33 1771.8,-2219.94 1771.17,-2226.91"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge478" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1416.04,-2649.87C1461.85,-2655.34 1555.91,-2660.03 1619,-2618.78 1733.29,-2544.04 1789.46,-2377.69 1807.9,-2311.61"/>
<polygon fill="blue" stroke="blue" points="1811.3,-2312.47 1810.54,-2301.9 1804.54,-2310.63 1811.3,-2312.47"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate(). -->
<g id="edge31" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1415.28,-1442.98C1462.49,-1450.68 1562.03,-1459.15 1619,-1407.78 1659.03,-1371.68 1604.71,-1323.2 1647,-1289.78 1705.92,-1243.2 1918.78,-1254.33 1985,-1289.78 2010.43,-1303.39 1996.82,-1328.05 2021,-1343.78 2053.01,-1364.59 2096.16,-1370.81 2129.12,-1372.12"/>
<polygon fill="blue" stroke="blue" points="2129.35,-1375.62 2139.43,-1372.38 2129.53,-1368.63 2129.35,-1375.62"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind(). -->
<g id="edge32" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1415.17,-1443.2C1462.65,-1451.38 1563.24,-1460.75 1619,-1407.78 1669.12,-1360.16 1593.9,-1299.04 1647,-1254.78 1794.33,-1131.96 2049.82,-1247.83 2142.84,-1297.06"/>
<polygon fill="blue" stroke="blue" points="2141.37,-1300.25 2151.84,-1301.89 2144.68,-1294.08 2141.37,-1300.25"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge425" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1421.29,-1551.41C1469.47,-1557.91 1560.73,-1562.7 1619,-1518.78 1644.77,-1499.35 1621.65,-1471.74 1647,-1451.78 1684.07,-1422.58 1740.29,-1419.31 1777.32,-1420.97"/>
<polygon fill="blue" stroke="blue" points="1777.5,-1424.49 1787.69,-1421.59 1777.92,-1417.5 1777.5,-1424.49"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge429" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1416.23,-1650.69C1465.44,-1646.81 1568.72,-1646.79 1619,-1706.78 1697.61,-1800.57 1565.28,-2165.68 1647,-2256.78 1679.18,-2292.66 1738.59,-2293.77 1777.44,-2289.85"/>
<polygon fill="blue" stroke="blue" points="1778.29,-2293.28 1787.81,-2288.64 1777.47,-2286.33 1778.29,-2293.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge488" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1415.18,-1496.54C1461.36,-1503.4 1558.16,-1510.63 1619,-1464.78 1644.77,-1445.35 1621.65,-1417.74 1647,-1397.78 1684.49,-1368.25 1741.57,-1365.23 1778.58,-1367.03"/>
<polygon fill="blue" stroke="blue" points="1778.72,-1370.55 1788.92,-1367.68 1779.16,-1363.56 1778.72,-1370.55"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge497" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1422.57,-1593.43C1471.56,-1586.22 1562.88,-1580.77 1619,-1626.78 1803.02,-1777.64 1816.02,-2103.68 1815.61,-2201.48"/>
<polygon fill="blue" stroke="blue" points="1812.1,-2201.72 1815.51,-2211.75 1819.1,-2201.78 1812.1,-2201.72"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt(). -->
<g id="node242" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt().</title>
<g id="a_node242"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn decrypt( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: &amp;Ciphertext, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;libsignal_core::ServiceId, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let M2 = key_pair &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;....">
<polygon fill="white" stroke="black" points="1851,-7440.78 1781,-7440.78 1781,-7404.78 1851,-7404.78 1851,-7440.78"/>
<text text-anchor="middle" x="1816" y="-7419.08" font-family="Helvetica,sans-Serif" font-size="14.00">decrypt</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt(). -->
<g id="edge364" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1437.19,-4949.86C1491.52,-4955.08 1577.65,-4972.67 1619,-5030.78 1654.84,-5081.13 1622.9,-7198.86 1647,-7255.78 1673.72,-7318.89 1736.84,-7370.6 1777.65,-7399.01"/>
<polygon fill="blue" stroke="blue" points="1775.77,-7401.96 1786,-7404.71 1779.72,-7396.18 1775.77,-7401.96"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from(). -->
<g id="edge375" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1470.03,-4907.16C1520.58,-4910.47 1582.72,-4904.4 1619,-4863.78 1680.95,-4794.4 1606.1,-3273.31 1647,-3189.78 1672.24,-3138.23 1727.55,-3099.98 1767.84,-3077.61"/>
<polygon fill="blue" stroke="blue" points="1769.57,-3080.65 1776.7,-3072.8 1766.24,-3074.49 1769.57,-3080.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate(). -->
<g id="node175" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate().</title>
<g id="a_node175"><a xlink:title=" &#160;&#160;&#160;pub fn generate(randomness: RandomnessBytes) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;version: Default::default(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_key: zkcredential::credentials::CredentialKeyPair::generate(ra...">
<polygon fill="white" stroke="black" points="1427.5,-1754.78 1348.5,-1754.78 1348.5,-1718.78 1427.5,-1718.78 1427.5,-1754.78"/>
<text text-anchor="middle" x="1388" y="-1733.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate(). -->
<g id="edge445" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1427.87,-1743.45C1558.09,-1764.81 1990.71,-1827.62 2345,-1784.78 2365.53,-1782.29 2387.76,-1777.29 2406.82,-1772.26"/>
<polygon fill="blue" stroke="blue" points="2407.74,-1775.64 2416.48,-1769.64 2405.91,-1768.88 2407.74,-1775.64"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from(). -->
<g id="edge61" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1408.26,-4060.5C1454.82,-4014.89 1573.07,-3890.21 1619,-3758.78 1660.76,-3639.27 1589.49,-3302.56 1647,-3189.78 1673.15,-3138.49 1728.55,-3100.08 1768.6,-3077.6"/>
<polygon fill="blue" stroke="blue" points="1770.32,-3080.65 1777.4,-3072.78 1766.95,-3074.52 1770.32,-3080.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt(). -->
<g id="node219" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt().</title>
<g id="a_node219"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn decrypt( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: &amp;Ciphertext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_bytes: UidBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;profile_key_struct::ProfileKeyStruct, ZkGroupVerificationFailure&gt; {...">
<polygon fill="white" stroke="black" points="1851,-4828.78 1781,-4828.78 1781,-4792.78 1851,-4792.78 1851,-4828.78"/>
<text text-anchor="middle" x="1816" y="-4807.08" font-family="Helvetica,sans-Serif" font-size="14.00">decrypt</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt(). -->
<g id="edge162" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1011.62,-4013.31C1054.78,-4011.27 1106.43,-4017.54 1137,-4051.78 1172.12,-4091.11 1119.32,-4963.88 1157,-5000.78 1193.68,-5036.69 1571.42,-5020.05 1619,-5000.78 1701.19,-4967.48 1767.94,-4881.36 1797.91,-4837.41"/>
<polygon fill="blue" stroke="blue" points="1800.92,-4839.22 1803.58,-4828.96 1795.1,-4835.32 1800.92,-4839.22"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key(). -->
<g id="edge244" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M975.71,-3973.93C1016.27,-3977.71 1081.65,-3985.18 1137,-3997.78 1204.56,-4013.15 1279.95,-4038.79 1330.1,-4057.11"/>
<polygon fill="blue" stroke="blue" points="1329.19,-4060.5 1339.78,-4060.67 1331.61,-4053.93 1329.19,-4060.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt(). -->
<g id="edge467" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M945.86,-4096.94C979.26,-4166.55 1097.64,-4423.77 1137,-4650.78 1143.77,-4689.82 1128.88,-7475.85 1157,-7503.78 1328.76,-7674.34 1662.38,-7510 1776.01,-7445.9"/>
<polygon fill="blue" stroke="blue" points="1777.79,-7448.91 1784.75,-7440.92 1774.33,-7442.83 1777.79,-7448.91"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge131" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1028.61,-703.74C1188.61,-716.48 1512.12,-736.62 1619,-701.78 1690.11,-678.59 1756.87,-618.77 1791.11,-584.29"/>
<polygon fill="blue" stroke="blue" points="1793.81,-586.53 1798.3,-576.93 1788.81,-581.63 1793.81,-586.53"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration(). -->
<g id="node183" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration().</title>
<g id="a_node183"><a xlink:title=" &#160;&#160;&#160;fn derive_public_signing_key_from_expiration( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root_public_key: impl AsRef&lt;zkcredential::endorsements::ServerRootPublicKey&gt;, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;zkcredent...">
<polygon fill="white" stroke="black" points="1544.5,-659.78 1231.5,-659.78 1231.5,-623.78 1544.5,-623.78 1544.5,-659.78"/>
<text text-anchor="middle" x="1388" y="-638.08" font-family="Helvetica,sans-Serif" font-size="14.00">derive_public_signing_key_from_expiration</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration(). -->
<g id="edge130" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1028.61,-684.78C1085.44,-677.96 1160.04,-669.01 1226.45,-661.04"/>
<polygon fill="blue" stroke="blue" points="1227.1,-664.49 1236.61,-659.82 1226.27,-657.54 1227.1,-664.49"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]for_first_point_of_attribute(). -->
<g id="edge283" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ClientDecryptionKey]for_first_point_of_attribute().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M973.59,-810.95C1018.89,-817.48 1095.15,-820.38 1137,-776.78 1170.07,-742.32 1125.63,-598.79 1157,-562.78 1186.81,-528.56 1233.81,-513.83 1277.57,-508.14"/>
<polygon fill="blue" stroke="blue" points="1278.2,-511.59 1287.73,-506.97 1277.4,-504.64 1278.2,-511.59"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge334" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M963.2,-752.03C1076.27,-761.18 1521.17,-790.91 1619,-701.78 1675.6,-650.2 1592.75,-585.82 1647,-531.78 1681.24,-497.66 1740.34,-496.13 1778.53,-499.46"/>
<polygon fill="blue" stroke="blue" points="1778.41,-502.97 1788.71,-500.51 1779.12,-496 1778.41,-502.97"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key(). -->
<g id="edge462" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootPublicKey]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1544.63,-649.65C1572.61,-643.82 1599.14,-632.35 1619,-611.78 1664.89,-564.24 1601.82,-363.99 1647,-315.78 1675.25,-285.63 1722.77,-280.36 1760.08,-281.79"/>
<polygon fill="blue" stroke="blue" points="1760.13,-285.3 1770.3,-282.35 1760.51,-278.31 1760.13,-285.3"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge476" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1087.17,-894.59C1104.06,-891.75 1120.96,-888.49 1137,-884.78 1356.91,-833.9 1422.18,-835.28 1619,-724.78 1688.41,-685.81 1756.31,-620.48 1791.07,-584.49"/>
<polygon fill="blue" stroke="blue" points="1793.99,-586.5 1798.37,-576.85 1788.93,-581.66 1793.99,-586.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration(). -->
<g id="edge475" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1087.05,-908.27C1104.96,-903.15 1122.14,-895.62 1137,-884.78 1153.7,-872.59 1144.51,-859.25 1157,-842.78 1213.81,-767.82 1302.29,-700.25 1351.3,-665.81"/>
<polygon fill="blue" stroke="blue" points="1353.48,-668.56 1359.68,-659.97 1349.48,-662.81 1353.48,-668.56"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge506" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1029.61,-868.65C1067.98,-867.85 1109.78,-859.16 1137,-830.78 1170.37,-795.98 1122.79,-648.74 1157,-614.78 1243.65,-528.77 1641.56,-547.11 1772.84,-555.7"/>
<polygon fill="blue" stroke="blue" points="1772.7,-559.2 1782.91,-556.38 1773.17,-552.22 1772.7,-559.2"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration(). -->
<g id="edge505" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]derive_public_signing_key_from_expiration().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1029.66,-855.15C1064.36,-851.65 1103.47,-844.59 1137,-830.78 1231.01,-792.05 1320.98,-709.15 1362.72,-667.21"/>
<polygon fill="blue" stroke="blue" points="1365.42,-669.45 1369.94,-659.87 1360.43,-664.54 1365.42,-669.45"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key(). -->
<g id="edge527" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]derive_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M992.89,-650.55C1037.25,-657.05 1100.92,-665.35 1157,-668.78 1259.48,-675.04 1542.39,-737.13 1619,-668.78 1659.89,-632.29 1609.14,-463.4 1647,-423.78 1675.54,-393.9 1723.04,-388.61 1760.26,-389.96"/>
<polygon fill="blue" stroke="blue" points="1760.29,-393.47 1770.46,-390.5 1760.66,-386.48 1760.29,-393.47"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new(). -->
<g id="node214" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new().</title>
<g id="a_node214"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;profile_key: profile_key_struct::ProfileKeyStruct, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_bytes: UidBytes, &#160;&#160;&#160;&#160;) &#45;&gt; CommitmentWithSecretNonce { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let commitment_system = SystemParams::get_hardcoded...">
<polygon fill="white" stroke="black" points="1843,-6724.78 1789,-6724.78 1789,-6688.78 1843,-6688.78 1843,-6724.78"/>
<text text-anchor="middle" x="1816" y="-6703.08" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new(). -->
<g id="edge208" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M937.28,-5543.79C939.85,-5681.97 963.85,-6572.63 1157,-6733.78 1235.83,-6799.55 1516.57,-6740.8 1619,-6733.78 1675.15,-6729.93 1739.72,-6719.94 1778.93,-6713.26"/>
<polygon fill="blue" stroke="blue" points="1779.55,-6716.7 1788.81,-6711.55 1778.36,-6709.8 1779.55,-6716.7"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new(). -->
<g id="node228" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().</title>
<g id="a_node228"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential: credentials::ReceiptCredential, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sho: &amp;mut Sho, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credentials_system = cred...">
<polygon fill="white" stroke="black" points="1843,-3345.78 1789,-3345.78 1789,-3309.78 1843,-3309.78 1843,-3345.78"/>
<text text-anchor="middle" x="1816" y="-3324.08" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new(). -->
<g id="edge23" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1077.15,-3166.88C1098.58,-3171.91 1119.39,-3180.06 1137,-3192.78 1153.44,-3204.65 1140.61,-3221.84 1157,-3233.78 1257.61,-3307.04 1655.86,-3323.58 1778.72,-3326.97"/>
<polygon fill="blue" stroke="blue" points="1778.65,-3330.47 1788.74,-3327.23 1778.84,-3323.47 1778.65,-3330.47"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature(). -->
<g id="node189" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().</title>
<g id="a_node189"><a xlink:title=" &#160;&#160;&#160;pub fn verify_signature( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature: NotarySignatureBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.sig_public_key.verify(messag...">
<polygon fill="white" stroke="black" points="1000,-3615.78 872,-3615.78 872,-3579.78 1000,-3579.78 1000,-3615.78"/>
<text text-anchor="middle" x="936" y="-3594.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify(). -->
<g id="node235" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().</title>
<g id="a_node235"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature: SignatureBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match poksho::verify_signature(&amp;signature, self.p...">
<polygon fill="white" stroke="black" points="1416,-5406.78 1360,-5406.78 1360,-5370.78 1416,-5370.78 1416,-5406.78"/>
<text text-anchor="middle" x="1388" y="-5385.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify(). -->
<g id="edge29" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1000.1,-3586.97C1045.29,-3583.22 1103.81,-3587.24 1137,-3624.78 1168.96,-3660.92 1124.72,-5325.91 1157,-5361.78 1205.05,-5415.18 1298.08,-5407.19 1349.89,-5397.49"/>
<polygon fill="blue" stroke="blue" points="1350.86,-5400.86 1359.98,-5395.48 1349.49,-5394 1350.86,-5400.86"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify(). -->
<g id="node230" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().</title>
<g id="a_node230"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_key_pair: credentials::KeyPair&lt;credentials::ReceiptCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_struct: ReceiptStruct, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFail...">
<polygon fill="white" stroke="black" points="1844,-3561.78 1788,-3561.78 1788,-3525.78 1844,-3525.78 1844,-3561.78"/>
<text text-anchor="middle" x="1816" y="-3540.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify(). -->
<g id="edge134" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1075.14,-3287.52C1096.05,-3291.01 1117.23,-3295.36 1137,-3300.78 1374.41,-3365.82 1410.43,-3448.75 1647,-3516.78 1691,-3529.43 1743.29,-3536.66 1777.71,-3540.39"/>
<polygon fill="blue" stroke="blue" points="1777.48,-3543.89 1787.79,-3541.44 1778.21,-3536.92 1777.48,-3543.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new(). -->
<g id="node222" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().</title>
<g id="a_node222"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_enc_key_pair: uid_encryption::KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;profile_key_enc_key_pair: profile_key_encryption::KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cr...">
<polygon fill="white" stroke="black" points="1843,-3237.78 1789,-3237.78 1789,-3201.78 1843,-3201.78 1843,-3237.78"/>
<text text-anchor="middle" x="1816" y="-3216.08" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new(). -->
<g id="edge181" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1122.83,-3073.33C1127.84,-3076.72 1132.59,-3080.52 1137,-3084.78 1174.66,-3121.09 1117.48,-3166.5 1157,-3200.78 1250.22,-3281.63 1654.41,-3239.59 1778.58,-3224.46"/>
<polygon fill="blue" stroke="blue" points="1779.21,-3227.91 1788.71,-3223.21 1778.35,-3220.96 1779.21,-3227.91"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ReceiptCredential&gt;`]create_blinded_receipt_credential(). -->
<g id="node209" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ReceiptCredential&gt;`]create_blinded_receipt_credential().</title>
<g id="a_node209"><a xlink:title=" &#160;&#160;&#160;pub fn create_blinded_receipt_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: receipt_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: receipt_credential_request::Ciphertext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_expi...">
<polygon fill="white" stroke="black" points="1939.5,-6870.78 1692.5,-6870.78 1692.5,-6834.78 1939.5,-6834.78 1939.5,-6870.78"/>
<text text-anchor="middle" x="1816" y="-6849.08" font-family="Helvetica,sans-Serif" font-size="14.00">create_blinded_receipt_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ReceiptCredential&gt;`]create_blinded_receipt_credential(). -->
<g id="edge196" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ReceiptCredential&gt;`]create_blinded_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1027.2,-3477.78C1066.77,-3477.88 1110.22,-3486.32 1137,-3516.78 1168.64,-3552.76 1123.02,-6932.99 1157,-6966.78 1302.61,-7111.55 1453.05,-7087.7 1619,-6966.78 1651.83,-6942.85 1616.18,-6906.23 1647,-6879.78 1657.46,-6870.8 1669.69,-6864.19 1682.7,-6859.4"/>
<polygon fill="blue" stroke="blue" points="1683.9,-6862.69 1692.29,-6856.22 1681.7,-6856.04 1683.9,-6862.69"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new(). -->
<g id="node221" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().</title>
<g id="a_node221"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: credentials::KeyPair&lt;credentials::ReceiptCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request_public_key: receipt_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: receipt_credential_request::...">
<polygon fill="white" stroke="black" points="1843,-3507.78 1789,-3507.78 1789,-3471.78 1843,-3471.78 1843,-3507.78"/>
<text text-anchor="middle" x="1816" y="-3486.08" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new(). -->
<g id="edge197" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1027.24,-3489.78C1217.08,-3489.78 1650.74,-3489.78 1778.77,-3489.78"/>
<polygon fill="blue" stroke="blue" points="1778.83,-3493.28 1788.83,-3489.78 1778.83,-3486.28 1778.83,-3493.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt(). -->
<g id="node231" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt().</title>
<g id="a_node231"><a xlink:title=" &#160;&#160;&#160;pub fn encrypt( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_serial_bytes: ReceiptSerialBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sho: &amp;mut Sho, &#160;&#160;&#160;&#160;) &#45;&gt; CiphertextWithSecretNonce { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let M2 = credentials::convert_to_point_M2_recei...">
<polygon fill="white" stroke="black" points="1423,-7303.78 1353,-7303.78 1353,-7267.78 1423,-7267.78 1423,-7303.78"/>
<text text-anchor="middle" x="1388" y="-7282.08" font-family="Helvetica,sans-Serif" font-size="14.00">encrypt</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt(). -->
<g id="edge198" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M960.84,-3723.86C1005.61,-3759.5 1101,-3843.85 1137,-3940.78 1153.03,-3983.94 1126.52,-7221.27 1157,-7255.78 1202.49,-7307.27 1289.51,-7303.45 1342.5,-7295.17"/>
<polygon fill="blue" stroke="blue" points="1343.34,-7298.58 1352.62,-7293.47 1342.18,-7291.68 1343.34,-7298.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]generate(). -->
<g id="node232" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]generate().</title>
<g id="a_node232"><a xlink:title=" &#160;&#160;&#160;pub fn generate(sho: &amp;mut Sho) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let y = sho.get_scalar(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Y = y * RISTRETTO_BASEPOINT_POINT; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;KeyPair { y, Y } &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1427.5,-7357.78 1348.5,-7357.78 1348.5,-7321.78 1427.5,-7321.78 1427.5,-7357.78"/>
<text text-anchor="middle" x="1388" y="-7336.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]generate(). -->
<g id="edge199" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M960.84,-3723.86C1005.61,-3759.5 1101.01,-3843.84 1137,-3940.78 1153.3,-3984.68 1125.77,-7277.87 1157,-7312.78 1201.58,-7362.6 1285.28,-7359.09 1338.48,-7350.51"/>
<polygon fill="blue" stroke="blue" points="1339.11,-7353.95 1348.37,-7348.8 1337.92,-7347.05 1339.11,-7353.95"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="node194" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<g id="a_node194"><a xlink:title=" &#160;&#160;&#160;pub fn verify_profile_key_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: api::groups::GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::profiles::AnyProfileKeyCredentialPresenta...">
<polygon fill="white" stroke="black" points="1088.5,-3237.78 783.5,-3237.78 783.5,-3201.78 1088.5,-3201.78 1088.5,-3237.78"/>
<text text-anchor="middle" x="936" y="-3216.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify_profile_key_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation(). -->
<g id="edge207" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1088.72,-3204.27C1124.68,-3200.59 1163.43,-3196.63 1200.72,-3192.82"/>
<polygon fill="blue" stroke="blue" points="1201.09,-3196.3 1210.68,-3191.8 1200.38,-3189.33 1201.09,-3196.3"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new(). -->
<g id="edge295" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1102.7,-3653.89C1115.64,-3659.78 1127.39,-3667.86 1137,-3678.78 1187.99,-3736.69 1114.84,-6392.14 1157,-6456.78 1287.42,-6656.72 1418.9,-6606.38 1647,-6676.78 1691.39,-6690.47 1744.42,-6698.65 1778.86,-6702.92"/>
<polygon fill="blue" stroke="blue" points="1778.57,-6706.41 1788.92,-6704.13 1779.4,-6699.46 1778.57,-6706.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate(). -->
<g id="node216" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate().</title>
<g id="a_node216"><a xlink:title=" &#160;&#160;&#160;pub fn generate(sho: &amp;mut Sho) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let y = sho.get_scalar(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Y = y * RISTRETTO_BASEPOINT_POINT; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;KeyPair { y, Y } &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1855.5,-7220.78 1776.5,-7220.78 1776.5,-7184.78 1855.5,-7184.78 1855.5,-7220.78"/>
<text text-anchor="middle" x="1816" y="-7199.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate(). -->
<g id="edge297" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1102.72,-3653.88C1115.66,-3659.77 1127.4,-3667.85 1137,-3678.78 1169.36,-3715.59 1122.24,-7173.22 1157,-7207.78 1241.87,-7292.17 1628.65,-7235.06 1766.24,-7211.55"/>
<polygon fill="blue" stroke="blue" points="1767.21,-7214.93 1776.47,-7209.78 1766.02,-7208.03 1767.21,-7214.93"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt(). -->
<g id="node217" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt().</title>
<g id="a_node217"><a xlink:title=" &#160;&#160;&#160;pub fn encrypt( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;profile_key_struct: profile_key_struct::ProfileKeyStruct, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sho: &amp;mut Sho, &#160;&#160;&#160;&#160;) &#45;&gt; CiphertextWithSecretNonce { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let r1 = sho.get_scalar(); &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1851,-7166.78 1781,-7166.78 1781,-7130.78 1851,-7130.78 1851,-7166.78"/>
<text text-anchor="middle" x="1816" y="-7145.08" font-family="Helvetica,sans-Serif" font-size="14.00">encrypt</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt(). -->
<g id="edge296" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1102.72,-3653.88C1115.66,-3659.77 1127.4,-3667.86 1137,-3678.78 1169.09,-3715.27 1122.54,-7143.51 1157,-7177.78 1229.8,-7250.16 1516.61,-7185.31 1619,-7177.78 1671.54,-7173.91 1731.38,-7164.29 1770.97,-7157.18"/>
<polygon fill="blue" stroke="blue" points="1771.61,-7160.62 1780.83,-7155.39 1770.36,-7153.74 1771.61,-7160.62"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new(). -->
<g id="node225" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new().</title>
<g id="a_node225"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: profile_key_credential_request::KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: profile_key_credential_request::CiphertextWithSecretNonce, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;commitment: profile_key_commitment::Co...">
<polygon fill="white" stroke="black" points="1843,-3291.78 1789,-3291.78 1789,-3255.78 1843,-3255.78 1843,-3291.78"/>
<text text-anchor="middle" x="1816" y="-3270.08" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new(). -->
<g id="edge298" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1102.64,-3635.16C1114.41,-3632.24 1125.97,-3628.8 1137,-3624.78 1389.25,-3532.67 1395.93,-3396.04 1647,-3300.78 1690.43,-3284.3 1743.88,-3277.88 1778.67,-3275.37"/>
<polygon fill="blue" stroke="blue" points="1779.08,-3278.85 1788.83,-3274.72 1778.63,-3271.87 1779.08,-3278.85"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify(). -->
<g id="node227" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().</title>
<g id="a_node227"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request_public_key: profile_key_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci_bytes: UidBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;re...">
<polygon fill="white" stroke="black" points="1844,-3723.78 1788,-3723.78 1788,-3687.78 1844,-3687.78 1844,-3723.78"/>
<text text-anchor="middle" x="1816" y="-3702.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify(). -->
<g id="edge436" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1079.03,-3431.45C1100.82,-3436.97 1121.26,-3446.69 1137,-3462.78 1192.37,-3519.36 1100.67,-3584.15 1157,-3639.78 1329.89,-3810.51 1666.65,-3744.05 1778.15,-3715.9"/>
<polygon fill="blue" stroke="blue" points="1779.11,-3719.26 1787.93,-3713.38 1777.37,-3712.48 1779.11,-3719.26"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign(). -->
<g id="node197" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().</title>
<g id="a_node197"><a xlink:title=" &#160;&#160;&#160;pub fn sign(&amp;self, randomness: RandomnessBytes, message: &amp;[u8]) &#45;&gt; NotarySignatureBytes { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b&#39; Signal_ZKGroup_20200424_Random_ServerSecretParams_Sign&#39; , &#160;...">
<polygon fill="white" stroke="black" points="963,-3561.78 909,-3561.78 909,-3525.78 963,-3525.78 963,-3561.78"/>
<text text-anchor="middle" x="936" y="-3540.08" font-family="Helvetica,sans-Serif" font-size="14.00">sign</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign(). -->
<g id="node238" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().</title>
<g id="a_node238"><a xlink:title=" &#160;&#160;&#160;pub fn sign(&amp;self, message: &amp;[u8], sho: &amp;mut Sho) &#45;&gt; SignatureBytes { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let vec_bytes = poksho::sign( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.signing_key, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.public_key, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1415,-5352.78 1361,-5352.78 1361,-5316.78 1415,-5316.78 1415,-5352.78"/>
<text text-anchor="middle" x="1388" y="-5331.08" font-family="Helvetica,sans-Serif" font-size="14.00">sign</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign(). -->
<g id="edge444" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M963.29,-3537.91C1006.87,-3529.92 1093.57,-3521.72 1137,-3570.78 1166.41,-3604 1136.61,-5128.38 1157,-5167.78 1198.43,-5247.81 1297.81,-5298.65 1351.36,-5321.21"/>
<polygon fill="blue" stroke="blue" points="1350.23,-5324.53 1360.81,-5325.09 1352.89,-5318.05 1350.23,-5324.53"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ExpiringProfileKeyCredential&gt;`]create_blinded_expiring_profile_key_credential(). -->
<g id="node210" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ExpiringProfileKeyCredential&gt;`]create_blinded_expiring_profile_key_credential().</title>
<g id="a_node210"><a xlink:title=" &#160;&#160;&#160;pub fn create_blinded_expiring_profile_key_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid: uid_struct::UidStruct, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: profile_key_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: profile...">
<polygon fill="white" stroke="black" points="1985,-6924.78 1647,-6924.78 1647,-6888.78 1985,-6888.78 1985,-6924.78"/>
<text text-anchor="middle" x="1816" y="-6903.08" font-family="Helvetica,sans-Serif" font-size="14.00">create_blinded_expiring_profile_key_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ExpiringProfileKeyCredential&gt;`]create_blinded_expiring_profile_key_credential(). -->
<g id="edge447" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ExpiringProfileKeyCredential&gt;`]create_blinded_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1072.11,-3374.1C1096.92,-3379.26 1120.23,-3389.7 1137,-3408.78 1169.63,-3445.89 1121.96,-6931.93 1157,-6966.78 1302.6,-7111.56 1415.93,-6997.16 1619,-6966.78 1632.23,-6964.8 1697.49,-6944.46 1749.13,-6928"/>
<polygon fill="blue" stroke="blue" points="1750.46,-6931.25 1758.92,-6924.87 1748.33,-6924.58 1750.46,-6931.25"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify(). -->
<g id="node223" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify().</title>
<g id="a_node223"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: profile_key_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: profile_key_credential_request::Ciphertext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;commitment: profile_key_commitm...">
<polygon fill="white" stroke="black" points="1844,-3399.78 1788,-3399.78 1788,-3363.78 1844,-3363.78 1844,-3399.78"/>
<text text-anchor="middle" x="1816" y="-3378.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify(). -->
<g id="edge446" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1072.26,-3381.78C1277.95,-3381.78 1658.11,-3381.78 1777.87,-3381.78"/>
<polygon fill="blue" stroke="blue" points="1777.99,-3385.28 1787.99,-3381.78 1777.99,-3378.28 1777.99,-3385.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new(). -->
<g id="node224" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().</title>
<g id="a_node224"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: credentials::KeyPair&lt;credentials::ExpiringProfileKeyCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request_public_key: profile_key_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: profile_key_c...">
<polygon fill="white" stroke="black" points="1843,-3669.78 1789,-3669.78 1789,-3633.78 1843,-3633.78 1843,-3669.78"/>
<text text-anchor="middle" x="1816" y="-3648.08" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new(). -->
<g id="edge448" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1072.04,-3375.92C1096.39,-3381.08 1119.55,-3391.05 1137,-3408.78 1189.75,-3462.36 1103.7,-3523.74 1157,-3576.78 1179.27,-3598.93 1643.21,-3637.93 1778.36,-3648.86"/>
<polygon fill="blue" stroke="blue" points="1778.35,-3652.37 1788.6,-3649.68 1778.92,-3645.39 1778.35,-3652.37"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate(). -->
<g id="edge494" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M975.74,-3119.69C1021.77,-3126.57 1097.31,-3129.42 1137,-3084.78 1180.89,-3035.4 1111.32,-1943.5 1157,-1895.78 1202.72,-1848.01 2281.84,-1843.35 2345,-1823.78 2373.79,-1814.85 2402.89,-1796.92 2423.92,-1781.99"/>
<polygon fill="blue" stroke="blue" points="2426.1,-1784.73 2432.13,-1776.02 2421.98,-1779.07 2426.1,-1784.73"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate(). -->
<g id="edge495" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[ServerRootKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M975.75,-3119.7C1021.78,-3126.58 1097.32,-3129.43 1137,-3084.78 1181.99,-3034.15 1112.74,-1917.05 1157,-1865.78 1292.97,-1708.25 1482.77,-1947.08 1619,-1789.78 1670.66,-1730.13 1595.23,-429.33 1647,-369.78 1675.82,-336.62 1727.85,-332.87 1766.4,-335.56"/>
<polygon fill="blue" stroke="blue" points="1766.12,-339.05 1776.38,-336.41 1766.72,-332.07 1766.12,-339.05"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]generate(). -->
<g id="node206" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]generate().</title>
<g id="a_node206"><a xlink:title=" &#160;&#160;&#160;pub fn generate(sho: &amp;mut Sho) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert!(S::NUM_ATTRS &gt;= 1, &#39; at least one attribute required&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;S::NUM_ATTRS &lt;= NUM_SUPPORTED_ATTRS, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#39; mo...">
<polygon fill="white" stroke="black" points="1855.5,-6816.78 1776.5,-6816.78 1776.5,-6780.78 1855.5,-6780.78 1855.5,-6816.78"/>
<text text-anchor="middle" x="1816" y="-6795.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]generate(). -->
<g id="edge496" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M975.83,-3103.78C1021.94,-3096.82 1097.57,-3093.9 1137,-3138.78 1171.79,-3178.37 1119.63,-6896.6 1157,-6933.78 1193.39,-6969.98 1578.4,-6965.19 1619,-6933.78 1658.22,-6903.43 1610.32,-6859.15 1647,-6825.78 1678.86,-6796.79 1728.92,-6792.06 1766.11,-6793.36"/>
<polygon fill="blue" stroke="blue" points="1766.07,-6796.87 1776.24,-6793.88 1766.43,-6789.88 1766.07,-6796.87"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]generate(). -->
<g id="node237" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]generate().</title>
<g id="a_node237"><a xlink:title=" &#160;&#160;&#160;pub fn generate(sho: &amp;mut Sho) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let signing_key = sho.get_scalar(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let public_key = signing_key * RISTRETTO_BASEPOINT_POINT; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;KeyPair { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signing_key, &#160;&#160;...">
<polygon fill="white" stroke="black" points="1427.5,-5460.78 1348.5,-5460.78 1348.5,-5424.78 1427.5,-5424.78 1427.5,-5460.78"/>
<text text-anchor="middle" x="1388" y="-5439.08" font-family="Helvetica,sans-Serif" font-size="14.00">generate</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]generate(). -->
<g id="edge493" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M975.8,-3103.81C1021.89,-3096.87 1097.49,-3093.97 1137,-3138.78 1178.84,-3186.22 1114.75,-5368.7 1157,-5415.78 1201.65,-5465.53 1285.33,-5462.04 1338.51,-5453.48"/>
<polygon fill="blue" stroke="blue" points="1339.13,-5456.93 1348.39,-5451.78 1337.94,-5450.03 1339.13,-5456.93"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify(). -->
<g id="node226" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().</title>
<g id="a_node226"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_key_pair: credentials::KeyPair&lt;credentials::ExpiringProfileKeyCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_ciphertext: uid_encryption::Ciphertext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_enc_pub...">
<polygon fill="white" stroke="black" points="1844,-3453.78 1788,-3453.78 1788,-3417.78 1844,-3417.78 1844,-3453.78"/>
<text text-anchor="middle" x="1816" y="-3432.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify(). -->
<g id="edge513" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1429.19,-3191.93C1480.1,-3216.84 1567.4,-3266.21 1619,-3332.78 1641.06,-3361.23 1619.2,-3385.9 1647,-3408.78 1683.54,-3438.85 1740.13,-3441.86 1777.37,-3439.9"/>
<polygon fill="blue" stroke="blue" points="1778.06,-3443.36 1787.8,-3439.19 1777.58,-3436.37 1778.06,-3443.36"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify(). -->
<g id="node229" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().</title>
<g id="a_node229"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request_public_key: receipt_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: receipt_credential_request...">
<polygon fill="white" stroke="black" points="1844,-3615.78 1788,-3615.78 1788,-3579.78 1844,-3579.78 1844,-3615.78"/>
<text text-anchor="middle" x="1816" y="-3594.08" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify(). -->
<g id="edge514" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1033.61,-3320C1069.7,-3322.04 1108.74,-3330.81 1137,-3354.78 1160.05,-3374.32 1135.63,-3398.4 1157,-3419.78 1318.1,-3580.95 1425.07,-3519.01 1647,-3570.78 1691.45,-3581.14 1743.45,-3588.83 1777.69,-3593.3"/>
<polygon fill="blue" stroke="blue" points="1777.35,-3596.78 1787.71,-3594.58 1778.24,-3589.84 1777.35,-3596.78"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 main(). -->
<g id="node202" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 main().</title>
<g id="a_node202"><a xlink:title="fn main() { &#160;&#160;&#160;&#160;let mut rng = rand::rng(); &#160;&#160;&#160;&#160;let mut randomness = [0u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;rng.fill(&amp;mut randomness); &#160;&#160;&#160;&#160;&#160;let secret_params = GenericServerSecretParams::generate(randomness); &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="444,-3374.78 390,-3374.78 390,-3338.78 444,-3338.78 444,-3374.78"/>
<text text-anchor="middle" x="417" y="-3353.08" font-family="Helvetica,sans-Serif" font-size="14.00">main</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate(). -->
<g id="edge50" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M444.37,-3364.07C503.1,-3378.53 645,-3403.22 715,-3326.78 744.57,-3294.49 704.18,-1781.87 735,-1750.78 777.09,-1708.32 1193.55,-1726.39 1337.98,-1734.01"/>
<polygon fill="blue" stroke="blue" points="1338.13,-1737.53 1348.3,-1734.56 1338.5,-1730.54 1338.13,-1737.53"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge51" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M444.3,-3363.69C502.27,-3377.18 641.7,-3399.69 715,-3326.78 744.79,-3297.15 705.71,-3168.9 735,-3138.78 773.49,-3099.19 840.37,-3098.11 886.11,-3103.13"/>
<polygon fill="blue" stroke="blue" points="885.76,-3106.61 896.11,-3104.36 886.61,-3099.66 885.76,-3106.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="node203" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<g id="a_node203"><a xlink:title=" &#160;&#160;&#160;pub fn get_scalar(&amp;mut self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar::from_bytes_mod_order_wide(&amp;self.internal_sho.squeeze_and_ratchet_as_array()) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2499.5,-6961.78 2412.5,-6961.78 2412.5,-6925.78 2499.5,-6925.78 2499.5,-6961.78"/>
<text text-anchor="middle" x="2456" y="-6940.08" font-family="Helvetica,sans-Serif" font-size="14.00">get_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide(). -->
<g id="edge71" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order_wide().</title>
<path fill="none" stroke="blue" d="M2477.66,-6925.65C2533.89,-6874.85 2689.5,-6724.06 2750,-6560.78 2774.55,-6494.51 2741.07,-5980.32 2786,-5925.78 2786.61,-5925.04 2787.23,-5924.32 2787.87,-5923.62"/>
<polygon fill="blue" stroke="blue" points="2790.32,-5926.13 2795.31,-5916.78 2785.58,-5920.97 2790.32,-5926.13"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 common/simple_types/encode_receipt_serial_bytes(). -->
<g id="node204" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 common/simple_types/encode_receipt_serial_bytes().</title>
<g id="a_node204"><a xlink:title="pub fn encode_receipt_serial_bytes(receipt_serial_bytes: ReceiptSerialBytes) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;let mut scalar_bytes: [u8; 32] = Default::default(); &#160;&#160;&#160;&#160;scalar_bytes[0..16].copy_from_slice(&amp;receipt_seria...">
<polygon fill="white" stroke="black" points="1921,-6558.78 1711,-6558.78 1711,-6522.78 1921,-6522.78 1921,-6558.78"/>
<text text-anchor="middle" x="1816" y="-6537.08" font-family="Helvetica,sans-Serif" font-size="14.00">encode_receipt_serial_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 common/simple_types/encode_receipt_serial_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order(). -->
<g id="edge268" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 common/simple_types/encode_receipt_serial_bytes().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().</title>
<path fill="none" stroke="blue" d="M1921.04,-6551.63C2084.12,-6562.08 2396.03,-6554.19 2539,-6363.78 2630.42,-6242.01 2653.95,-6052.51 2659.72,-5981.2"/>
<polygon fill="blue" stroke="blue" points="2663.22,-5981.41 2660.48,-5971.17 2656.24,-5980.88 2663.22,-5981.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 common/simple_types/encode_redemption_time(). -->
<g id="node205" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 common/simple_types/encode_redemption_time().</title>
<g id="a_node205"><a xlink:title="pub fn encode_redemption_time(redemption_time: u32) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;let mut scalar_bytes: [u8; 32] = Default::default(); &#160;&#160;&#160;&#160;scalar_bytes[0..4].copy_from_slice(&amp;redemption_time.to_be_bytes()); &#160;&#160;&#160;&#160;Sca...">
<polygon fill="white" stroke="black" points="1911.5,-6504.78 1720.5,-6504.78 1720.5,-6468.78 1911.5,-6468.78 1911.5,-6504.78"/>
<text text-anchor="middle" x="1816" y="-6483.08" font-family="Helvetica,sans-Serif" font-size="14.00">encode_redemption_time</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 common/simple_types/encode_redemption_time().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order(). -->
<g id="edge492" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 common/simple_types/encode_redemption_time().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]from_bytes_mod_order().</title>
<path fill="none" stroke="blue" d="M1911.57,-6491.17C2043.11,-6495.64 2273.25,-6497.07 2345,-6456.78 2537.6,-6348.62 2629.24,-6069.62 2654.23,-5980.55"/>
<polygon fill="blue" stroke="blue" points="2657.61,-5981.45 2656.89,-5970.88 2650.86,-5979.6 2657.61,-5981.45"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge58" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1855.76,-6791.74C1946.35,-6777.2 2177,-6751.28 2345,-6828.78 2385.97,-6847.68 2419.44,-6889.27 2438.3,-6916.9"/>
<polygon fill="blue" stroke="blue" points="2435.45,-6918.95 2443.9,-6925.34 2441.28,-6915.07 2435.45,-6918.95"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct(). -->
<g id="node207" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct().</title>
<g id="a_node207"><a xlink:title="pub(crate) fn convert_to_points_receipt_struct( &#160;&#160;&#160;&#160;receipt: receipt_struct::ReceiptStruct, ) &#45;&gt; Vec&lt;RistrettoPoint&gt; { &#160;&#160;&#160;&#160;let system = SystemParams::get_hardcoded(); &#160;&#160;&#160;&#160;let m1 = receipt.calc_m1(); &#160;...">
<polygon fill="white" stroke="black" points="1508,-6816.78 1268,-6816.78 1268,-6780.78 1508,-6780.78 1508,-6816.78"/>
<text text-anchor="middle" x="1388" y="-6795.08" font-family="Helvetica,sans-Serif" font-size="14.00">convert_to_points_receipt_struct</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/simple_types/encode_receipt_serial_bytes(). -->
<g id="edge200" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/simple_types/encode_receipt_serial_bytes().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1508.05,-6805.02C1548.19,-6800.89 1590.09,-6788.71 1619,-6759.78 1671.88,-6706.85 1597.88,-6650.22 1647,-6593.78 1661.36,-6577.27 1680.82,-6565.85 1701.4,-6557.96"/>
<polygon fill="blue" stroke="blue" points="1702.67,-6561.23 1710.92,-6554.58 1700.33,-6554.63 1702.67,-6561.23"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1(). -->
<g id="node233" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1().</title>
<g id="a_node233"><a xlink:title=" &#160;&#160;&#160;pub fn calc_m1(&amp;self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::calc_m1_from(self.receipt_expiration_time, self.receipt_level) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1852.5,-6641.78 1779.5,-6641.78 1779.5,-6605.78 1852.5,-6605.78 1852.5,-6641.78"/>
<text text-anchor="middle" x="1816" y="-6620.08" font-family="Helvetica,sans-Serif" font-size="14.00">calc_m1</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1(). -->
<g id="edge201" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1508.01,-6802.14C1547.2,-6797.54 1588.51,-6785.81 1619,-6759.78 1648.61,-6734.5 1619.2,-6704.03 1647,-6676.78 1679.74,-6644.68 1731.74,-6632 1769.22,-6627"/>
<polygon fill="blue" stroke="blue" points="1769.87,-6630.45 1779.38,-6625.79 1769.03,-6623.5 1769.87,-6630.45"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac(). -->
<g id="node208" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().</title>
<g id="a_node208"><a xlink:title=" &#160;&#160;&#160;fn test_mac() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// It doesn&#39;t really matter *which* credential we test here, we just want to generally know &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// we&#39;ve set things up correctly. (Also, the credentials hardcoded here ...">
<polygon fill="white" stroke="black" points="1427.5,-6924.78 1348.5,-6924.78 1348.5,-6888.78 1427.5,-6888.78 1427.5,-6924.78"/>
<text text-anchor="middle" x="1388" y="-6903.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_mac</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]generate(). -->
<g id="edge229" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1427.81,-6912.57C1476.86,-6917.75 1561.78,-6919.32 1619,-6879.78 1641.24,-6864.41 1625.09,-6841.61 1647,-6825.78 1681.32,-6800.97 1729.88,-6795.48 1765.97,-6795.45"/>
<polygon fill="blue" stroke="blue" points="1766.23,-6798.95 1776.27,-6795.59 1766.32,-6791.95 1766.23,-6798.95"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ExpiringProfileKeyCredential&gt;`]create_blinded_expiring_profile_key_credential(). -->
<g id="edge225" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ExpiringProfileKeyCredential&gt;`]create_blinded_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1427.56,-6906.78C1474.99,-6906.78 1558.79,-6906.78 1636.35,-6906.78"/>
<polygon fill="blue" stroke="blue" points="1636.75,-6910.28 1646.75,-6906.78 1636.75,-6903.28 1636.75,-6910.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate(). -->
<g id="edge227" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1414.31,-6925.03C1459.97,-6958.96 1557.11,-7035.88 1619,-7118.78 1635.89,-7141.39 1624.31,-7158.99 1647,-7175.78 1681.16,-7201.04 1729.95,-7206.44 1766.16,-7206.32"/>
<polygon fill="blue" stroke="blue" points="1766.55,-7209.81 1776.49,-7206.14 1766.43,-7202.81 1766.55,-7209.81"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt(). -->
<g id="edge228" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1415.04,-6924.96C1460.83,-6956.54 1559.22,-7022.77 1647,-7070.78 1688.26,-7093.34 1737.21,-7115.58 1771.59,-7130.5"/>
<polygon fill="blue" stroke="blue" points="1770.32,-7133.76 1780.89,-7134.51 1773.09,-7127.34 1770.32,-7133.76"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new(). -->
<g id="edge226" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1427.61,-6915.78C1479.72,-6925.37 1571.47,-6932.74 1619,-6879.78 1678.39,-6813.59 1589.03,-3746.2 1647,-3678.78 1678.77,-3641.82 1739.37,-3641.28 1778.44,-3645.57"/>
<polygon fill="blue" stroke="blue" points="1778.49,-3649.11 1788.85,-3646.89 1779.37,-3642.16 1778.49,-3649.11"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify(). -->
<g id="edge230" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1427.6,-6915.77C1479.69,-6925.35 1571.43,-6932.71 1619,-6879.78 1670.02,-6823 1632.36,-4206.7 1647,-4131.78 1677.87,-3973.74 1765.05,-3799.12 1800.12,-3733.07"/>
<polygon fill="blue" stroke="blue" points="1803.27,-3734.6 1804.9,-3724.13 1797.1,-3731.3 1803.27,-3734.6"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ReceiptCredential&gt;`]create_blinded_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge278" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ReceiptCredential&gt;`]create_blinded_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1939.74,-6838.38C2048.86,-6829.9 2211.36,-6827.97 2345,-6870.78 2376.02,-6880.71 2406.51,-6902.12 2427.49,-6919.19"/>
<polygon fill="blue" stroke="blue" points="2425.4,-6922.01 2435.32,-6925.73 2429.88,-6916.63 2425.4,-6922.01"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]credential_core(). -->
<g id="node211" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]credential_core().</title>
<g id="a_node211"><a xlink:title=" &#160;&#160;&#160;fn credential_core( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;M: &amp;[RistrettoPoint], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sho: &amp;mut Sho, &#160;&#160;&#160;&#160;) &#45;&gt; (Scalar, RistrettoPoint, RistrettoPoint) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;M.len() &lt;= S::NUM_ATTRS, &#160;&#160;...">
<polygon fill="white" stroke="black" points="2239.5,-6915.78 2118.5,-6915.78 2118.5,-6879.78 2239.5,-6879.78 2239.5,-6915.78"/>
<text text-anchor="middle" x="2179" y="-6894.08" font-family="Helvetica,sans-Serif" font-size="14.00">credential_core</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ReceiptCredential&gt;`]create_blinded_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]credential_core(). -->
<g id="edge276" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ReceiptCredential&gt;`]create_blinded_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]credential_core().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1939.72,-6868.07C1996.02,-6875.09 2060.69,-6883.15 2108.45,-6889.11"/>
<polygon fill="blue" stroke="blue" points="2108.01,-6892.58 2118.37,-6890.34 2108.88,-6885.63 2108.01,-6892.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from(). -->
<g id="node234" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from().</title>
<g id="a_node234"><a xlink:title=" &#160;&#160;&#160;pub fn calc_m1_from(receipt_expiration_time: Timestamp, receipt_level: ReceiptLevel) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut bytes = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;[0u8; std::mem::size_of::&lt;Timestamp&gt;() + std::mem::size_of::&lt;Re...">
<polygon fill="white" stroke="black" points="2235,-6641.78 2123,-6641.78 2123,-6605.78 2235,-6605.78 2235,-6641.78"/>
<text text-anchor="middle" x="2179" y="-6620.08" font-family="Helvetica,sans-Serif" font-size="14.00">calc_m1_from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ReceiptCredential&gt;`]create_blinded_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from(). -->
<g id="edge277" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ReceiptCredential&gt;`]create_blinded_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1939.61,-6850.44C1956.39,-6845.43 1972.21,-6837.61 1985,-6825.78 2035.01,-6779.51 1975,-6727.03 2021,-6676.78 2044.48,-6651.12 2080.81,-6637.87 2112.61,-6631.04"/>
<polygon fill="blue" stroke="blue" points="2113.61,-6634.41 2122.75,-6629.04 2112.26,-6627.54 2113.61,-6634.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ExpiringProfileKeyCredential&gt;`]create_blinded_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge311" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ExpiringProfileKeyCredential&gt;`]create_blinded_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1985.05,-6922.2C1997.21,-6923.13 2009.29,-6924 2021,-6924.78 2158.48,-6933.85 2320.76,-6939.65 2402.43,-6942.23"/>
<polygon fill="blue" stroke="blue" points="2402.36,-6945.72 2412.46,-6942.54 2402.57,-6938.73 2402.36,-6945.72"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ExpiringProfileKeyCredential&gt;`]create_blinded_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]credential_core(). -->
<g id="edge309" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ExpiringProfileKeyCredential&gt;`]create_blinded_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]credential_core().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1985.08,-6902.59C2028.45,-6901.5 2072.78,-6900.4 2107.99,-6899.52"/>
<polygon fill="blue" stroke="blue" points="2108.23,-6903.02 2118.14,-6899.27 2108.06,-6896.02 2108.23,-6903.02"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from(). -->
<g id="node239" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from().</title>
<g id="a_node239"><a xlink:title=" &#160;&#160;&#160;pub fn calc_m_from(timestamp: Timestamp) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b&#39; Signal_ZKGroup_20220524_Timestamp_Calc_m&#39; , &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;timestamp.to_be_bytes(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;); &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="2230.5,-7007.78 2127.5,-7007.78 2127.5,-6971.78 2230.5,-6971.78 2230.5,-7007.78"/>
<text text-anchor="middle" x="2179" y="-6986.08" font-family="Helvetica,sans-Serif" font-size="14.00">calc_m_from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ExpiringProfileKeyCredential&gt;`]create_blinded_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from(). -->
<g id="edge310" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ExpiringProfileKeyCredential&gt;`]create_blinded_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1881.97,-6924.81C1921.91,-6935.61 1974.23,-6949.24 2021,-6959.78 2052.6,-6966.89 2088.03,-6973.76 2117.22,-6979.12"/>
<polygon fill="blue" stroke="blue" points="2116.81,-6982.6 2127.27,-6980.95 2118.06,-6975.71 2116.81,-6982.6"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]credential_core().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge402" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]credential_core().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2239.67,-6907.76C2288.24,-6915.88 2356.12,-6927.24 2402.61,-6935.01"/>
<polygon fill="blue" stroke="blue" points="2402.04,-6938.47 2412.48,-6936.66 2403.19,-6931.56 2402.04,-6938.47"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_point_M2_receipt_serial_bytes(). -->
<g id="node212" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_point_M2_receipt_serial_bytes().</title>
<g id="a_node212"><a xlink:title="pub(crate) fn convert_to_point_M2_receipt_serial_bytes( &#160;&#160;&#160;&#160;receipt_serial_bytes: ReceiptSerialBytes, ) &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;let system = SystemParams::get_hardcoded(); &#160;&#160;&#160;&#160;let receipt_serial_scala...">
<polygon fill="white" stroke="black" points="1539,-6870.78 1237,-6870.78 1237,-6834.78 1539,-6834.78 1539,-6870.78"/>
<text text-anchor="middle" x="1388" y="-6849.08" font-family="Helvetica,sans-Serif" font-size="14.00">convert_to_point_M2_receipt_serial_bytes</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_point_M2_receipt_serial_bytes().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/simple_types/encode_receipt_serial_bytes(). -->
<g id="edge498" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_point_M2_receipt_serial_bytes().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/simple_types/encode_receipt_serial_bytes().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1539.02,-6863.34C1568.87,-6858.27 1597.57,-6847.13 1619,-6825.78 1692.56,-6752.46 1580.68,-6673.7 1647,-6593.78 1661.06,-6576.84 1680.49,-6565.23 1701.16,-6557.3"/>
<polygon fill="blue" stroke="blue" points="1702.48,-6560.55 1710.74,-6553.91 1700.14,-6553.95 1702.48,-6560.55"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]calc_j3(). -->
<g id="node213" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]calc_j3().</title>
<g id="a_node213"><a xlink:title=" &#160;&#160;&#160;pub fn calc_j3(profile_key_bytes: ProfileKeyBytes, uid_bytes: UidBytes) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut combined_array = [0u8; PROFILE_KEY_LEN + UUID_LEN]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;combined_array[..PROFILE_KEY_LEN].co...">
<polygon fill="white" stroke="black" points="2210.5,-6724.78 2147.5,-6724.78 2147.5,-6688.78 2210.5,-6688.78 2210.5,-6724.78"/>
<text text-anchor="middle" x="2179" y="-6703.08" font-family="Helvetica,sans-Serif" font-size="14.00">calc_j3</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]calc_j3().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge81" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]calc_j3().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2210.65,-6712.13C2246.21,-6719.63 2305.05,-6736.17 2345,-6768.78 2394.51,-6809.18 2428.37,-6878.06 2444.39,-6916.24"/>
<polygon fill="blue" stroke="blue" points="2441.24,-6917.77 2448.26,-6925.7 2447.71,-6915.12 2441.24,-6917.77"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]calc_j3(). -->
<g id="edge214" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]calc_j3().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.25,-6706.78C1905.42,-6706.78 2062.01,-6706.78 2136.88,-6706.78"/>
<polygon fill="blue" stroke="blue" points="2137.32,-6710.28 2147.32,-6706.78 2137.32,-6703.28 2137.32,-6710.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/tests/test_commitment(). -->
<g id="node215" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/tests/test_commitment().</title>
<g id="a_node215"><a xlink:title=" &#160;&#160;&#160;fn test_commitment() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let profile_key = profile_key_struct::ProfileKeyStruct::new(TEST_ARRAY_32, TEST_ARRAY_16); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let c1 = CommitmentWithSecretNonce::new(profile_key, TEST_ARRAY_16...">
<polygon fill="white" stroke="black" points="1456.5,-6724.78 1319.5,-6724.78 1319.5,-6688.78 1456.5,-6688.78 1456.5,-6724.78"/>
<text text-anchor="middle" x="1388" y="-6703.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_commitment</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/tests/test_commitment().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new(). -->
<g id="edge312" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/tests/test_commitment().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1456.5,-6706.78C1547.77,-6706.78 1707.32,-6706.78 1778.69,-6706.78"/>
<polygon fill="blue" stroke="blue" points="1778.96,-6710.28 1788.96,-6706.78 1778.96,-6703.28 1778.96,-6710.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge2" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1855.71,-7207.54C1948.68,-7216.9 2188.44,-7228.63 2345,-7124.78 2400.65,-7087.86 2432.7,-7012.23 2446.63,-6971.39"/>
<polygon fill="blue" stroke="blue" points="2449.98,-6972.4 2449.78,-6961.81 2443.33,-6970.21 2449.98,-6972.4"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge59" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1851.04,-7151.56C1938.9,-7157.18 2178.06,-7162.37 2345,-7070.78 2387.64,-7047.38 2421.4,-7000.58 2439.76,-6970.79"/>
<polygon fill="blue" stroke="blue" points="2442.81,-6972.51 2444.96,-6962.14 2436.81,-6968.91 2442.81,-6972.51"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response(). -->
<g id="node218" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response().</title>
<g id="a_node218"><a xlink:title=" &#160;&#160;&#160;fn test_request_response() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new(b&#39; Test_Profile_Key_Credential_Request&#39; , b&#39; &#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// client &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let blind_key_pair = KeyPair::generate(&amp;mut sho); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1474,-7168.78 1302,-7168.78 1302,-7132.78 1474,-7132.78 1474,-7168.78"/>
<text text-anchor="middle" x="1388" y="-7147.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_request_response</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new(). -->
<g id="edge136" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_commitment/impl#[CommitmentWithSecretNonce]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1423.95,-7132.77C1476.01,-7103.93 1572.75,-7042.14 1619,-6959.78 1661.01,-6884.97 1592.96,-6835.41 1647,-6768.78 1679.22,-6729.05 1739.42,-6714.78 1778.32,-6709.65"/>
<polygon fill="blue" stroke="blue" points="1779.17,-6713.07 1788.69,-6708.43 1778.35,-6706.12 1779.17,-6713.07"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate(). -->
<g id="edge138" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1474.18,-7161.17C1561.78,-7171.87 1695.14,-7188.14 1766.28,-7196.83"/>
<polygon fill="blue" stroke="blue" points="1765.96,-7200.32 1776.31,-7198.05 1766.81,-7193.37 1765.96,-7200.32"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt(). -->
<g id="edge137" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/tests/test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_credential_request/impl#[KeyPair]encrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1474.18,-7150.38C1563.56,-7149.96 1700.59,-7149.31 1770.55,-7148.98"/>
<polygon fill="blue" stroke="blue" points="1770.8,-7152.48 1780.78,-7148.94 1770.76,-7145.48 1770.8,-7152.48"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge68" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="blue" d="M1851.32,-4827.84C1984.8,-4895.78 2475.57,-5160.48 2750,-5510.78 2827.16,-5609.27 2870.06,-5755.93 2885.42,-5816.77"/>
<polygon fill="blue" stroke="blue" points="2882.09,-5817.9 2887.89,-5826.77 2888.89,-5816.22 2882.09,-5817.9"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption(). -->
<g id="node220" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption().</title>
<g id="a_node220"><a xlink:title=" &#160;&#160;&#160;fn test_profile_key_encryption() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let master_key = TEST_ARRAY_32_1; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new(b&#39; Test_Profile_Key_Encryption&#39; , &amp;master_key); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;//let system = SystemParams::ge...">
<polygon fill="white" stroke="black" points="1490.5,-4828.78 1285.5,-4828.78 1285.5,-4792.78 1490.5,-4792.78 1490.5,-4828.78"/>
<text text-anchor="middle" x="1388" y="-4807.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_encryption</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from(). -->
<g id="edge94" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1490.64,-4802.94C1537.58,-4793.66 1589.36,-4774.18 1619,-4733.78 1669.75,-4664.6 1609.22,-3266.8 1647,-3189.78 1672.28,-3138.24 1727.58,-3100 1767.85,-3077.62"/>
<polygon fill="blue" stroke="blue" points="1769.59,-3080.66 1776.71,-3072.81 1766.25,-3074.5 1769.59,-3080.66"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt(). -->
<g id="edge93" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/tests/test_profile_key_encryption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/profile_key_encryption/impl#[ProfileKeyEncryptionDomain]decrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1490.77,-4810.78C1579.78,-4810.78 1704.81,-4810.78 1770.57,-4810.78"/>
<polygon fill="blue" stroke="blue" points="1770.6,-4814.28 1780.6,-4810.78 1770.6,-4807.28 1770.6,-4814.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge33" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.04,-3493.49C1879.47,-3497.13 1945.61,-3497.83 1985,-3462.78 2087.07,-3371.95 2157.29,-2925.51 2174.11,-2808.76"/>
<polygon fill="blue" stroke="blue" points="2177.58,-2809.2 2175.52,-2798.81 2170.65,-2808.21 2177.58,-2809.2"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from(). -->
<g id="edge34" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.13,-3484.9C1880.94,-3479.54 1950.17,-3476.4 1985,-3516.78 2038.35,-3578.61 1990.45,-6381.03 2021,-6456.78 2045.84,-6518.36 2105.01,-6570.62 2143.2,-6599.54"/>
<polygon fill="blue" stroke="blue" points="2141.36,-6602.54 2151.48,-6605.7 2145.54,-6596.92 2141.36,-6602.54"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge46" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.24,-3207.08C1878.72,-3188.92 1942.47,-3152.71 1985,-3107.78 2074.96,-3012.74 2141.46,-2868.46 2166.78,-2808.46"/>
<polygon fill="blue" stroke="blue" points="2170.15,-2809.49 2170.76,-2798.92 2163.68,-2806.8 2170.15,-2809.49"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge47" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.13,-3214.9C1880.94,-3209.54 1950.17,-3206.4 1985,-3246.78 2038.66,-3308.97 1966.03,-6142.73 2021,-6203.78 2118.02,-6311.52 2245.29,-6136.52 2345,-6241.78 2369.42,-6267.56 2359.81,-6525.64 2365,-6560.78 2384.92,-6695.55 2428.43,-6852.81 2446.68,-6915.7"/>
<polygon fill="blue" stroke="blue" points="2443.42,-6917.03 2449.59,-6925.65 2450.14,-6915.07 2443.42,-6917.03"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge211" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1844.26,-3383.13C1879.2,-3383.65 1940.57,-3380.33 1985,-3354.78 2016.04,-3336.92 2348.03,-2916.67 2434.5,-2806.84"/>
<polygon fill="blue" stroke="blue" points="2437.32,-2808.92 2440.75,-2798.9 2431.82,-2804.59 2437.32,-2808.92"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge245" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.29,-3655.76C1880.02,-3659.73 1946.51,-3660.82 1985,-3624.78 2108.65,-3508.97 2164.18,-2942.74 2175.69,-2809.08"/>
<polygon fill="blue" stroke="blue" points="2179.2,-2809.12 2176.55,-2798.86 2172.22,-2808.52 2179.2,-2809.12"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from(). -->
<g id="edge246" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.14,-3646.9C1880.95,-3641.53 1950.19,-3638.38 1985,-3678.78 2044.49,-3747.82 1962.53,-6889.86 2021,-6959.78 2043.91,-6987.17 2083.46,-6994.6 2117.13,-6995.22"/>
<polygon fill="blue" stroke="blue" points="2117.37,-6998.72 2127.37,-6995.21 2117.36,-6991.72 2117.37,-6998.72"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge340" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.19,-3277C1879.2,-3279.94 1944.18,-3279.69 1985,-3246.78 2019.18,-3219.22 2004.5,-3195.47 2021,-3154.78 2073.76,-3024.65 2139.58,-2870.33 2166.11,-2808.46"/>
<polygon fill="blue" stroke="blue" points="2169.44,-2809.57 2170.16,-2799 2163,-2806.81 2169.44,-2809.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge349" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1844.29,-3435.39C1878.48,-3434.02 1938.25,-3428.67 1985,-3408.78 2169.28,-3330.36 2229.91,-3301.67 2345,-3137.78 2419.69,-3031.41 2444.85,-2872.8 2452.26,-2808.92"/>
<polygon fill="blue" stroke="blue" points="2455.75,-2809.14 2453.37,-2798.82 2448.8,-2808.37 2455.75,-2809.14"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from(). -->
<g id="edge350" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1844.09,-3430.76C1882.11,-3425.47 1950.5,-3422.7 1985,-3462.78 2048.39,-3536.39 1958.71,-6885.23 2021,-6959.78 2043.9,-6987.18 2083.45,-6994.61 2117.12,-6995.23"/>
<polygon fill="blue" stroke="blue" points="2117.36,-6998.73 2127.36,-6995.21 2117.36,-6991.73 2117.36,-6998.73"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge392" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1844.3,-3704.83C1933.9,-3700.11 2220.37,-3671.77 2345,-3501.78 2428.22,-3388.27 2449.86,-2928.18 2454.11,-2809.05"/>
<polygon fill="blue" stroke="blue" points="2457.61,-2809.03 2454.46,-2798.91 2450.62,-2808.79 2457.61,-2809.03"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from(). -->
<g id="edge391" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1827.08,-3724.14C1858.16,-3781.91 1952.4,-3966.01 1985,-4131.78 2000.16,-4208.86 1970.55,-6899.55 2021,-6959.78 2043.93,-6987.15 2083.48,-6994.58 2117.15,-6995.21"/>
<polygon fill="blue" stroke="blue" points="2117.39,-6998.71 2127.38,-6995.2 2117.38,-6991.71 2117.39,-6998.71"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge500" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.2,-3331.67C1879.84,-3335.53 1946.21,-3336.49 1985,-3300.78 2034.16,-3255.5 2000,-3218.22 2021,-3154.78 2065.01,-3021.79 2135.42,-2869.65 2164.63,-2808.42"/>
<polygon fill="blue" stroke="blue" points="2167.95,-2809.59 2169.11,-2799.06 2161.64,-2806.57 2167.95,-2809.59"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge499" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1843.13,-3322.9C1880.93,-3317.54 1950.16,-3314.41 1985,-3354.78 2037.4,-3415.49 1967.32,-6182.19 2021,-6241.78 2118.04,-6349.5 2244.85,-6174.94 2345,-6279.78 2366.62,-6302.41 2360.29,-6529.83 2365,-6560.78 2385.48,-6695.47 2428.68,-6852.78 2446.77,-6915.69"/>
<polygon fill="blue" stroke="blue" points="2443.5,-6917.01 2449.64,-6925.64 2450.23,-6915.06 2443.5,-6917.01"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge510" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1844.07,-3597.17C1932.94,-3593.59 2217.38,-3569.05 2345,-3402.78 2418.35,-3307.21 2446.82,-2917.55 2453.42,-2808.98"/>
<polygon fill="blue" stroke="blue" points="2456.92,-2809 2454.02,-2798.81 2449.93,-2808.58 2456.92,-2809"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct(). -->
<g id="edge509" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1787.9,-3592.75C1749.88,-3587.46 1681.48,-3584.68 1647,-3624.78 1590.22,-3690.81 1675.49,-6693.5 1619,-6759.78 1594.16,-6788.92 1556.29,-6801.85 1518.41,-6806.58"/>
<polygon fill="blue" stroke="blue" points="1517.84,-6803.12 1508.26,-6807.66 1518.58,-6810.08 1517.84,-6803.12"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge516" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1844.11,-3542.94C1878.11,-3541.11 1937.68,-3535.28 1985,-3516.78 2163.86,-3446.84 2236.36,-3436.14 2345,-3277.78 2449.56,-3125.35 2456.69,-2890.23 2455.8,-2809.29"/>
<polygon fill="blue" stroke="blue" points="2459.29,-2808.86 2455.63,-2798.92 2452.3,-2808.98 2459.29,-2808.86"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct(). -->
<g id="edge515" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_points_receipt_struct().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1787.9,-3538.75C1749.87,-3533.45 1681.47,-3530.68 1647,-3570.78 1589.25,-3637.95 1676.46,-6692.35 1619,-6759.78 1594.16,-6788.92 1556.3,-6801.86 1518.41,-6806.58"/>
<polygon fill="blue" stroke="blue" points="1517.84,-6803.12 1508.27,-6807.66 1518.58,-6810.08 1517.84,-6803.12"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge28" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1423.21,-7286.75C1576.43,-7290.44 2198.47,-7297.93 2345,-7181.78 2412.94,-7127.92 2440.67,-7022.47 2450.42,-6972"/>
<polygon fill="blue" stroke="blue" points="2453.87,-6972.57 2452.24,-6962.11 2446.99,-6971.31 2453.87,-6972.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_point_M2_receipt_serial_bytes(). -->
<g id="edge27" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/convert_to_point_M2_receipt_serial_bytes().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1352.88,-7294.39C1294.2,-7306.48 1179.42,-7319.57 1147,-7246.78 1138.91,-7228.61 1138.91,-6906.94 1147,-6888.78 1169.48,-6838.3 1231.76,-6829.96 1287.38,-6833.9"/>
<polygon fill="blue" stroke="blue" points="1287.41,-6837.41 1297.67,-6834.77 1288,-6830.44 1287.41,-6837.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge99" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1427.51,-7341.05C1587.92,-7345.56 2201.35,-7354.79 2345,-7237.78 2428.53,-7169.73 2448.65,-7031.45 2453.48,-6971.99"/>
<polygon fill="blue" stroke="blue" points="2456.98,-6972.07 2454.22,-6961.84 2450,-6971.56 2456.98,-6972.07"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from(). -->
<g id="edge151" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1852.6,-6623.78C1912.91,-6623.78 2036.04,-6623.78 2112.34,-6623.78"/>
<polygon fill="blue" stroke="blue" points="2112.79,-6627.28 2122.79,-6623.78 2112.79,-6620.28 2112.79,-6627.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge435" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_struct/impl#[ReceiptStruct]calc_m1_from().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2235.35,-6629.57C2270.57,-6635.9 2315.04,-6649.12 2345,-6676.78 2416.32,-6742.61 2442.68,-6861.56 2451.29,-6915.65"/>
<polygon fill="blue" stroke="blue" points="2447.83,-6916.2 2452.79,-6925.56 2454.76,-6915.15 2447.83,-6916.2"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature(). -->
<g id="edge25" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1416.31,-5395.47C1465.16,-5405.63 1567.27,-5418.25 1619,-5361.78 1654.89,-5322.6 1627.46,-4455.18 1647,-4405.78 1675.11,-4334.72 1742.31,-4272.69 1782.69,-4240.1"/>
<polygon fill="blue" stroke="blue" points="1784.98,-4242.75 1790.63,-4233.79 1780.62,-4237.27 1784.98,-4242.75"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature(). -->
<g id="node236" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().</title>
<g id="a_node236"><a xlink:title=" &#160;&#160;&#160;fn test_signature() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let group_key = TEST_ARRAY_32; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new(b&#39; Test_Signature&#39; , &amp;group_key); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let key_pair = KeyPair::generate(&amp;mut sho); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Test s...">
<polygon fill="white" stroke="black" points="993.5,-5406.78 878.5,-5406.78 878.5,-5370.78 993.5,-5370.78 993.5,-5406.78"/>
<text text-anchor="middle" x="936" y="-5385.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify(). -->
<g id="edge39" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M993.54,-5388.78C1086.76,-5388.78 1270.27,-5388.78 1349.31,-5388.78"/>
<polygon fill="blue" stroke="blue" points="1349.75,-5392.28 1359.75,-5388.78 1349.75,-5385.28 1349.75,-5392.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]generate(). -->
<g id="edge38" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M993.51,-5395.79C1037.94,-5401.29 1101.41,-5409.1 1157,-5415.78 1219.53,-5423.28 1291.66,-5431.71 1338.22,-5437.12"/>
<polygon fill="blue" stroke="blue" points="1338,-5440.62 1348.33,-5438.3 1338.8,-5433.67 1338,-5440.62"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign(). -->
<g id="edge40" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M993.51,-5381.76C1037.94,-5376.26 1101.41,-5368.45 1157,-5361.78 1225.51,-5353.55 1305.54,-5344.22 1350.85,-5338.96"/>
<polygon fill="blue" stroke="blue" points="1351.25,-5342.44 1360.78,-5337.81 1350.44,-5335.48 1351.25,-5342.44"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge428" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]generate().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1427.7,-5438.73C1480.34,-5435.65 1573.2,-5439.27 1619,-5495.78 1673.13,-5562.55 1585.67,-6982.55 1647,-7042.78 1674.67,-7069.95 2308.8,-7056.67 2345,-7042.78 2382.76,-7028.28 2415.68,-6994.17 2435.43,-6970.06"/>
<polygon fill="blue" stroke="blue" points="2438.36,-6971.99 2441.86,-6961.99 2432.89,-6967.63 2438.36,-6971.99"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/sign(). -->
<g id="edge465" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1415.07,-5325.03C1465.27,-5304.69 1574.31,-5252.44 1619,-5167.78 1644.4,-5119.66 1611.12,-4229.68 1647,-4188.78 1679.14,-4152.13 1739.63,-4151.51 1778.58,-4155.69"/>
<polygon fill="blue" stroke="blue" points="1778.6,-4159.22 1788.96,-4156.98 1779.46,-4152.28 1778.6,-4159.22"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar(). -->
<g id="edge19" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 common/sho/impl#[Sho]get_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2230.76,-6981.28C2279.44,-6973.14 2352.64,-6960.9 2402.05,-6952.63"/>
<polygon fill="blue" stroke="blue" points="2402.92,-6956.04 2412.21,-6950.93 2401.77,-6949.13 2402.92,-6956.04"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m(). -->
<g id="node240" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m().</title>
<g id="a_node240"><a xlink:title=" &#160;&#160;&#160;pub fn calc_m(&amp;self) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::calc_m_from(self.timestamp) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1848,-7007.78 1784,-7007.78 1784,-6971.78 1848,-6971.78 1848,-7007.78"/>
<text text-anchor="middle" x="1816" y="-6986.08" font-family="Helvetica,sans-Serif" font-size="14.00">calc_m</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from(). -->
<g id="edge56" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/timestamp_struct/impl#[TimestampStruct]calc_m_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1848.09,-6989.78C1907.83,-6989.78 2039.62,-6989.78 2117.34,-6989.78"/>
<polygon fill="blue" stroke="blue" points="2117.47,-6993.28 2127.47,-6989.78 2117.47,-6986.28 2117.47,-6993.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption(). -->
<g id="node241" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption().</title>
<g id="a_node241"><a xlink:title=" &#160;&#160;&#160;fn test_pni_encryption() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new(b&#39; Test_Pni_Encryption&#39; , &amp;[]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let key_pair = KeyPair::derive_from(sho.as_mut()); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let pni = libsignal_core::Pni::from_uu...">
<polygon fill="white" stroke="black" points="1464,-7440.78 1312,-7440.78 1312,-7404.78 1464,-7404.78 1464,-7440.78"/>
<text text-anchor="middle" x="1388" y="-7419.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_pni_encryption</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from(). -->
<g id="edge7" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1464.05,-7435.83C1515.68,-7440.08 1581.46,-7435.24 1619,-7392.78 1657.66,-7349.04 1621.59,-3242.33 1647,-3189.78 1671.9,-3138.26 1727.01,-3100.11 1767.34,-3077.75"/>
<polygon fill="blue" stroke="blue" points="1769.09,-3080.78 1776.22,-3072.95 1765.76,-3074.63 1769.09,-3080.78"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt(). -->
<g id="edge6" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_pni_encryption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1464.18,-7422.78C1553.08,-7422.78 1698.12,-7422.78 1770.7,-7422.78"/>
<polygon fill="blue" stroke="blue" points="1770.87,-7426.28 1780.87,-7422.78 1770.87,-7419.28 1770.87,-7426.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert(). -->
<g id="edge52" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar]invert().</title>
<path fill="none" stroke="blue" d="M1851.07,-7422.79C1940.53,-7421.21 2186.14,-7406.21 2345,-7293.78 2473.69,-7202.69 2461.39,-7134.02 2539,-6996.78 2644.97,-6809.39 2696.43,-6769.28 2750,-6560.78 2769.07,-6486.53 2737.39,-5931.06 2786,-5871.78 2802.18,-5852.04 2830.6,-5845.58 2853.93,-5843.9"/>
<polygon fill="blue" stroke="blue" points="2854.4,-5847.39 2864.24,-5843.44 2854.09,-5840.39 2854.4,-5847.39"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption(). -->
<g id="node243" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption().</title>
<g id="a_node243"><a xlink:title=" &#160;&#160;&#160;fn test_uid_encryption() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let master_key = TEST_ARRAY_32; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new(b&#39; Test_Uid_Encryption&#39; , &amp;master_key); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;//let system = SystemParams::generate(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1464,-7494.78 1312,-7494.78 1312,-7458.78 1464,-7458.78 1464,-7494.78"/>
<text text-anchor="middle" x="1388" y="-7473.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_uid_encryption</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from(). -->
<g id="edge180" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1464.2,-7490.95C1515.72,-7495.88 1581.32,-7491.86 1619,-7449.78 1658.47,-7405.7 1621.25,-3243.05 1647,-3189.78 1671.9,-3138.26 1727.01,-3100.11 1767.34,-3077.75"/>
<polygon fill="blue" stroke="blue" points="1769.09,-3080.78 1776.22,-3072.95 1765.76,-3074.63 1769.09,-3080.78"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt(). -->
<g id="edge179" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/tests/test_uid_encryption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/uid_encryption/impl#[UidEncryptionDomain]decrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1464.15,-7468.34C1509.1,-7463.2 1567.35,-7456.36 1619,-7449.78 1671.08,-7443.13 1730.84,-7434.8 1770.54,-7429.16"/>
<polygon fill="blue" stroke="blue" points="1771.28,-7432.59 1780.68,-7427.71 1770.29,-7425.66 1771.28,-7432.59"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic(). -->
<g id="node244" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().</title>
<g id="a_node244"><a xlink:title="fn test_mac_generic() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;&#160;&#160;let label = b&#39; 20221221_AuthCre...">
<polygon fill="white" stroke="black" points="1456.5,-2159.78 1319.5,-2159.78 1319.5,-2123.78 1456.5,-2123.78 1456.5,-2159.78"/>
<text text-anchor="middle" x="1388" y="-2138.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_mac_generic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from(). -->
<g id="edge67" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1456.56,-2128.66C1508.87,-2122.81 1578.94,-2125.19 1619,-2168.78 1683.62,-2239.09 1583.89,-2956.11 1647,-3027.78 1673.5,-3057.87 1719.13,-3063.64 1756.15,-3062.42"/>
<polygon fill="blue" stroke="blue" points="1756.53,-3065.91 1766.34,-3061.91 1756.18,-3058.92 1756.53,-3065.91"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate(). -->
<g id="edge65" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1456.75,-2137.89C1669.1,-2125.43 2309.72,-2085.79 2345,-2058.78 2432.93,-1991.44 2450.62,-1846.85 2454.14,-1785.84"/>
<polygon fill="blue" stroke="blue" points="2457.64,-1785.95 2454.64,-1775.79 2450.65,-1785.61 2457.64,-1785.95"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge62" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1456.72,-2128.73C1508.93,-2122.98 1578.8,-2125.45 1619,-2168.78 1669.3,-2222.99 1598.34,-2778.08 1647,-2833.78 1679.16,-2870.59 1739.65,-2872.41 1778.59,-2869.05"/>
<polygon fill="blue" stroke="blue" points="1779.37,-2872.49 1788.96,-2868 1778.66,-2865.53 1779.37,-2872.49"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge63" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1456.76,-2128.69C1508.99,-2122.92 1578.87,-2125.39 1619,-2168.78 1673.51,-2227.72 1593.76,-2830.69 1647,-2890.78 1678.97,-2926.85 1738.43,-2927.91 1777.35,-2923.93"/>
<polygon fill="blue" stroke="blue" points="1778.23,-2927.35 1787.75,-2922.7 1777.4,-2920.4 1778.23,-2927.35"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge64" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1456.55,-2137.99C1504.27,-2138.04 1568.47,-2143.75 1619,-2168.78 1635.05,-2176.73 1631.24,-2189.26 1647,-2197.78 1685.75,-2218.72 1736.01,-2226.14 1771.42,-2228.67"/>
<polygon fill="blue" stroke="blue" points="1771.25,-2232.17 1781.45,-2229.29 1771.68,-2225.18 1771.25,-2232.17"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge66" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1456.64,-2131.62C1506.92,-2127.98 1574.26,-2131.87 1619,-2168.78 1650.66,-2194.89 1615.9,-2229.99 1647,-2256.78 1683.11,-2287.88 1740.43,-2290.5 1777.88,-2288.19"/>
<polygon fill="blue" stroke="blue" points="1778.18,-2291.68 1787.89,-2287.43 1777.65,-2284.7 1778.18,-2291.68"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point(). -->
<g id="node245" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().</title>
<g id="a_node245"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn as_point(&amp;self) &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.opaque_id &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1425,-2105.78 1351,-2105.78 1351,-2069.78 1425,-2069.78 1425,-2105.78"/>
<text text-anchor="middle" x="1388" y="-2084.08" font-family="Helvetica,sans-Serif" font-size="14.00">as_point</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge74" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1425.19,-2079.39C1476.59,-2069.88 1569.93,-2061.86 1619,-2114.78 1669.89,-2169.65 1594.39,-2734.54 1647,-2787.78 1701.54,-2842.96 2267.97,-2817.09 2345,-2807.78 2361.97,-2805.72 2380.11,-2801.95 2396.66,-2797.86"/>
<polygon fill="blue" stroke="blue" points="2397.91,-2801.15 2406.73,-2795.29 2396.17,-2794.37 2397.91,-2801.15"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge73" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1425.14,-2089.7C1541.2,-2096.61 1901.74,-2123.89 1985,-2199.78 2153.69,-2353.54 2175.18,-2658.17 2177.72,-2752.36"/>
<polygon fill="blue" stroke="blue" points="2174.23,-2752.61 2177.94,-2762.53 2181.22,-2752.46 2174.23,-2752.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge76" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1425.19,-2096.15C1476.58,-2105.67 1569.91,-2113.67 1619,-2060.78 1669.15,-2006.73 1598,-1452.87 1647,-1397.78 1679.3,-1361.45 1739.47,-1360.67 1778.35,-1364.74"/>
<polygon fill="blue" stroke="blue" points="1778.37,-1368.27 1788.71,-1366 1779.21,-1361.32 1778.37,-1368.27"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind(). -->
<g id="edge72" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]blind().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1425.11,-2092.43C1473.13,-2096.75 1558.93,-2097.8 1619,-2060.78 1870.54,-1905.75 1869.71,-1777.83 1985,-1505.78 2013.78,-1437.87 1967.6,-1394.65 2021,-1343.78 2052.94,-1313.35 2106.02,-1310.35 2141.51,-1312.42"/>
<polygon fill="blue" stroke="blue" points="2141.68,-1315.94 2151.91,-1313.2 2142.2,-1308.96 2141.68,-1315.94"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge75" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1425.16,-2096.13C1476.52,-2105.61 1569.81,-2113.58 1619,-2060.78 1665.17,-2011.21 1601.89,-1502.31 1647,-1451.78 1679.1,-1415.82 1738.52,-1414.73 1777.4,-1418.67"/>
<polygon fill="blue" stroke="blue" points="1777.45,-1422.19 1787.79,-1419.88 1778.26,-1415.24 1777.45,-1422.19"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge77" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1425.4,-2081.1C1474.93,-2074.21 1563.72,-2069.97 1619,-2114.78 1649.24,-2139.29 1617.65,-2172.2 1647,-2197.78 1681.07,-2227.46 1734,-2233.16 1771.33,-2232.9"/>
<polygon fill="blue" stroke="blue" points="1771.5,-2236.4 1781.42,-2232.69 1771.35,-2229.4 1771.5,-2236.4"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge78" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1425.41,-2080.23C1475.79,-2072.11 1566.47,-2066.18 1619,-2114.78 1666.22,-2158.46 1600.72,-2212.1 1647,-2256.78 1681.48,-2290.06 1739.74,-2292 1777.78,-2288.96"/>
<polygon fill="blue" stroke="blue" points="1778.32,-2292.42 1787.94,-2287.99 1777.65,-2285.45 1778.32,-2292.42"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key(). -->
<g id="node246" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key().</title>
<g id="a_node246"><a xlink:title="fn test_inverse_key() { &#160;&#160;&#160;&#160;let aci = libsignal_core::Aci::from_uuid_bytes(TEST_ARRAY_16); &#160;&#160;&#160;&#160;let uid = UidStruct::from_service_id(aci.into()); &#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new(b&#39; test_inverse_key&#39; , b&#39; &#39;...">
<polygon fill="white" stroke="black" points="1453.5,-2267.78 1322.5,-2267.78 1322.5,-2231.78 1453.5,-2231.78 1453.5,-2267.78"/>
<text text-anchor="middle" x="1388" y="-2246.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_inverse_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]inverse_of(). -->
<g id="edge128" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]inverse_of().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1453.54,-2264.73C1507.76,-2281 1582.13,-2312.82 1619,-2370.78 1654.82,-2427.09 1602.98,-2920.62 1647,-2970.78 1674.78,-3002.43 1723.5,-3008.18 1761.35,-3007.03"/>
<polygon fill="blue" stroke="blue" points="1761.88,-3010.51 1771.71,-3006.54 1761.55,-3003.52 1761.88,-3010.51"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from(). -->
<g id="edge129" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_inverse_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1453.6,-2264.69C1507.86,-2280.94 1582.25,-2312.74 1619,-2370.78 1658.09,-2432.5 1598.44,-2973.18 1647,-3027.78 1673.65,-3057.74 1719.27,-3063.52 1756.25,-3062.33"/>
<polygon fill="blue" stroke="blue" points="1756.62,-3065.82 1766.43,-3061.83 1756.27,-3058.83 1756.62,-3065.82"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key(). -->
<g id="node247" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().</title>
<g id="a_node247"><a xlink:title="fn test_profile_key_credential_only_verifying_one_encryption_key() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_a...">
<polygon fill="white" stroke="black" points="1611,-1997.78 1165,-1997.78 1165,-1961.78 1611,-1961.78 1611,-1997.78"/>
<text text-anchor="middle" x="1388" y="-1976.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_credential_only_verifying_one_encryption_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from(). -->
<g id="edge183" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1610.01,-1998.05C1613.15,-2000.75 1616.15,-2003.66 1619,-2006.78 1695.58,-2090.53 1572.22,-2942.41 1647,-3027.78 1673.42,-3057.94 1719.06,-3063.7 1756.1,-3062.47"/>
<polygon fill="blue" stroke="blue" points="1756.49,-3065.95 1766.3,-3061.95 1756.13,-3058.96 1756.49,-3065.95"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate(). -->
<g id="edge182" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1611.06,-1995.18C1874.2,-2011.48 2284.77,-2030.02 2345,-1991.78 2417.53,-1945.73 2443.09,-1837.75 2451.38,-1786.17"/>
<polygon fill="blue" stroke="blue" points="2454.87,-1786.47 2452.89,-1776.06 2447.95,-1785.43 2454.87,-1786.47"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate(). -->
<g id="edge188" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1592.35,-1961.72C1601.46,-1959.09 1610.38,-1956.13 1619,-1952.78 1805.93,-1880.08 1874.14,-1855.92 1985,-1688.78 2024.57,-1629.12 1986.73,-1594.63 2021,-1531.78 2052.05,-1474.81 2108.95,-1423.96 2145.05,-1395.29"/>
<polygon fill="blue" stroke="blue" points="2147.59,-1397.75 2153.31,-1388.83 2143.27,-1392.24 2147.59,-1397.75"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge184" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1609.91,-1961.41C1613.08,-1958.73 1616.12,-1955.86 1619,-1952.78 1661.19,-1907.69 1605.78,-1443.75 1647,-1397.78 1679.45,-1361.59 1739.58,-1360.76 1778.41,-1364.79"/>
<polygon fill="blue" stroke="blue" points="1778.41,-1368.32 1788.76,-1366.03 1779.24,-1361.37 1778.41,-1368.32"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]encrypt(). -->
<g id="edge189" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]encrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1608.47,-1961.64C1612.13,-1958.91 1615.64,-1955.96 1619,-1952.78 1672.34,-1902.2 1622.99,-1859.25 1647,-1789.78 1685.75,-1677.65 1761.77,-1557.52 1796.68,-1505.41"/>
<polygon fill="blue" stroke="blue" points="1799.62,-1507.32 1802.31,-1497.07 1793.82,-1503.4 1799.62,-1507.32"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge185" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1609.44,-1961.77C1612.78,-1958.99 1615.97,-1956 1619,-1952.78 1695.41,-1871.56 1572.34,-1534.6 1647,-1451.78 1679.27,-1415.98 1738.65,-1414.84 1777.47,-1418.73"/>
<polygon fill="blue" stroke="blue" points="1777.5,-1422.25 1787.84,-1419.93 1778.31,-1415.3 1777.5,-1422.25"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge187" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1601.8,-1997.86C1607.71,-2000.55 1613.46,-2003.51 1619,-2006.78 1637.38,-2017.61 1633.56,-2029.2 1647,-2045.78 1694.87,-2104.81 1756.17,-2169.49 1789.92,-2204.25"/>
<polygon fill="blue" stroke="blue" points="1787.6,-2206.89 1797.08,-2211.61 1792.61,-2202.01 1787.6,-2206.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge186" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1609.19,-1998.01C1612.61,-2000.72 1615.88,-2003.64 1619,-2006.78 1697.85,-2086.04 1569.85,-2175.85 1647,-2256.78 1680.16,-2291.56 1739.03,-2293.04 1777.54,-2289.49"/>
<polygon fill="blue" stroke="blue" points="1778.25,-2292.94 1787.82,-2288.38 1777.5,-2285.98 1778.25,-2292.94"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key(). -->
<g id="node248" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().</title>
<g id="a_node248"><a xlink:title="fn test_mac_generic_without_verifying_encryption_key() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1575.5,-2213.78 1200.5,-2213.78 1200.5,-2177.78 1575.5,-2177.78 1575.5,-2213.78"/>
<text text-anchor="middle" x="1388" y="-2192.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_mac_generic_without_verifying_encryption_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from(). -->
<g id="edge331" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1575.75,-2193.67C1592.02,-2200.22 1606.88,-2209.62 1619,-2222.78 1679.63,-2288.6 1587.78,-2960.67 1647,-3027.78 1673.53,-3057.84 1719.16,-3063.61 1756.17,-3062.4"/>
<polygon fill="blue" stroke="blue" points="1756.55,-3065.89 1766.36,-3061.89 1756.2,-3058.9 1756.55,-3065.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate(). -->
<g id="edge327" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1575.71,-2198.96C1820.03,-2199.28 2230.57,-2185.39 2345,-2092.78 2441.01,-2015.07 2454.01,-1851.76 2455.21,-1786.05"/>
<polygon fill="blue" stroke="blue" points="2458.71,-1786.05 2455.31,-1776.01 2451.71,-1785.98 2458.71,-1786.05"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge332" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1575.6,-2193.8C1591.9,-2200.33 1606.81,-2209.68 1619,-2222.78 1665.32,-2272.51 1602.19,-2782.68 1647,-2833.78 1679.23,-2870.53 1739.7,-2872.37 1778.62,-2869.03"/>
<polygon fill="blue" stroke="blue" points="1779.39,-2872.47 1788.98,-2867.98 1778.68,-2865.51 1779.39,-2872.47"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge329" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1575.65,-2193.75C1591.94,-2200.29 1606.83,-2209.66 1619,-2222.78 1669.52,-2277.24 1597.64,-2835.25 1647,-2890.78 1679.02,-2926.8 1738.47,-2927.87 1777.38,-2923.91"/>
<polygon fill="blue" stroke="blue" points="1778.24,-2927.33 1787.76,-2922.69 1777.42,-2920.38 1778.24,-2927.33"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge328" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1575.54,-2210.66C1648.13,-2216.46 1724.88,-2222.58 1771.37,-2226.29"/>
<polygon fill="blue" stroke="blue" points="1771.14,-2229.79 1781.38,-2227.09 1771.69,-2222.81 1771.14,-2229.79"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge330" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1575.53,-2205.08C1590.71,-2209.57 1605.41,-2215.36 1619,-2222.78 1636.19,-2232.15 1630.02,-2247.04 1647,-2256.78 1687.47,-2279.98 1741.93,-2284.83 1777.73,-2285.14"/>
<polygon fill="blue" stroke="blue" points="1777.77,-2288.64 1787.76,-2285.11 1777.75,-2281.64 1777.77,-2288.64"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_room_credential(). -->
<g id="node249" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_room_credential().</title>
<g id="a_node249"><a xlink:title="fn test_room_credential() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; RoomCredential&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;&#160;let blinding_keypair = Blindin...">
<polygon fill="white" stroke="black" points="1468,-2051.78 1308,-2051.78 1308,-2015.78 1468,-2015.78 1468,-2051.78"/>
<text text-anchor="middle" x="1388" y="-2030.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_room_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_room_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate(). -->
<g id="edge398" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_room_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1468.31,-2043.07C1671.25,-2065.19 2203.34,-2112.34 2345,-2016.78 2423.78,-1963.63 2446.35,-1841.7 2452.65,-1786.21"/>
<polygon fill="blue" stroke="blue" points="2456.15,-1786.34 2453.7,-1776.04 2449.19,-1785.62 2456.15,-1786.34"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_room_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate(). -->
<g id="edge397" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_room_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1468.09,-2033.37C1600.88,-2027.87 1865.83,-1995.25 1985,-1827.78 2061.84,-1719.8 1963.72,-1651.28 2021,-1531.78 2049,-1473.35 2106.67,-1423.02 2143.78,-1394.84"/>
<polygon fill="blue" stroke="blue" points="2145.91,-1397.62 2151.83,-1388.83 2141.72,-1392.01 2145.91,-1397.62"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential(). -->
<g id="node250" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().</title>
<g id="a_node250"><a xlink:title="fn test_profile_key_credential() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;&#160;let blinding_keypair ...">
<polygon fill="white" stroke="black" points="1487.5,-1943.78 1288.5,-1943.78 1288.5,-1907.78 1487.5,-1907.78 1487.5,-1943.78"/>
<text text-anchor="middle" x="1388" y="-1922.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from(). -->
<g id="edge454" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 attributes/impl#[`KeyPair&lt;D&gt;`]derive_from().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1487.52,-1910.37C1534.12,-1909.02 1586.54,-1917.22 1619,-1952.78 1699.57,-2041.01 1568.33,-2937.85 1647,-3027.78 1673.4,-3057.96 1719.04,-3063.72 1756.09,-3062.48"/>
<polygon fill="blue" stroke="blue" points="1756.48,-3065.96 1766.29,-3061.96 1756.12,-3058.97 1756.48,-3065.96"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate(). -->
<g id="edge455" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 credentials/impl#[CredentialKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1487.81,-1936.51C1717.47,-1960.57 2273.16,-2013.43 2345,-1969.78 2411.71,-1929.23 2439.79,-1833.67 2449.98,-1785.93"/>
<polygon fill="blue" stroke="blue" points="2453.45,-1786.46 2452,-1775.97 2446.59,-1785.08 2453.45,-1786.46"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate(). -->
<g id="edge456" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1435.6,-1907.7C1483.28,-1888.35 1558.7,-1855.31 1619,-1817.78 1840.32,-1680.01 2074.32,-1467.84 2151.57,-1395.74"/>
<polygon fill="blue" stroke="blue" points="2154.06,-1398.21 2158.97,-1388.82 2149.28,-1393.09 2154.06,-1398.21"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge452" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1476.94,-1907.72C1527.17,-1892.56 1586.47,-1865.41 1619,-1817.78 1671.75,-1740.53 1584,-1466.92 1647,-1397.78 1679.74,-1361.85 1739.79,-1360.95 1778.52,-1364.89"/>
<polygon fill="blue" stroke="blue" points="1778.5,-1368.42 1788.84,-1366.11 1779.32,-1361.46 1778.5,-1368.42"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]encrypt(). -->
<g id="edge450" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[BlindingKeyPair]encrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1472.92,-1907.77C1523.3,-1892.46 1584.19,-1865.14 1619,-1817.78 1673.46,-1743.68 1601.58,-1692.73 1647,-1612.78 1675.83,-1562.02 1732.17,-1523.25 1771.63,-1500.78"/>
<polygon fill="blue" stroke="blue" points="1773.74,-1503.61 1780.77,-1495.69 1770.33,-1497.5 1773.74,-1503.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge453" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1476.48,-1907.69C1526.72,-1892.5 1586.18,-1865.34 1619,-1817.78 1665.33,-1750.64 1591.76,-1511.8 1647,-1451.78 1679.64,-1416.31 1738.92,-1415.08 1777.62,-1418.86"/>
<polygon fill="blue" stroke="blue" points="1777.62,-1422.38 1787.95,-1420.03 1778.41,-1415.43 1777.62,-1422.38"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge451" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1487.56,-1919.92C1530.55,-1921.6 1579.94,-1929.58 1619,-1952.78 1718.87,-2012.09 1781.16,-2144.34 1804.52,-2202"/>
<polygon fill="blue" stroke="blue" points="1801.37,-2203.55 1808.31,-2211.55 1807.88,-2200.97 1801.37,-2203.55"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge449" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1487.7,-1911.26C1533.77,-1910.32 1585.67,-1918.6 1619,-1952.78 1666.37,-2001.34 1600.67,-2207.21 1647,-2256.78 1679.82,-2291.89 1738.78,-2293.28 1777.4,-2289.62"/>
<polygon fill="blue" stroke="blue" points="1778.16,-2293.06 1787.72,-2288.48 1777.39,-2286.1 1778.16,-2293.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response(). -->
<g id="node251" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().</title>
<g id="a_node251"><a xlink:title="fn test_backup_auth_request_response() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: Randomne...">
<polygon fill="white" stroke="black" points="550.5,-1072.78 283.5,-1072.78 283.5,-1036.78 550.5,-1036.78 550.5,-1072.78"/>
<text text-anchor="middle" x="417" y="-1051.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_backup_auth_request_response</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new(). -->
<g id="edge324" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M478.6,-1036.66C604.15,-1002.09 900.69,-935.83 1137,-1002.78 1226.34,-1028.09 1315.12,-1095.35 1358.9,-1132.05"/>
<polygon fill="blue" stroke="blue" points="1356.65,-1134.73 1366.54,-1138.53 1361.18,-1129.39 1356.65,-1134.73"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge325" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M550.67,-1045.91C608.97,-1049.43 673.48,-1064.73 715,-1108.78 765.66,-1162.53 683.12,-1221.19 735,-1273.78 775.18,-1314.5 845.47,-1314.26 891.11,-1308.74"/>
<polygon fill="blue" stroke="blue" points="891.86,-1312.17 901.3,-1307.37 890.92,-1305.24 891.86,-1312.17"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge322" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M550.6,-1047.61C607.37,-1044.89 674.42,-1042.11 735,-1040.78 824.31,-1038.8 1069.6,-982.15 1137,-1040.78 1185.42,-1082.89 1111.12,-1138.9 1157,-1183.78 1208.36,-1234.01 1300.08,-1227.27 1350.79,-1218.62"/>
<polygon fill="blue" stroke="blue" points="1351.45,-1222.06 1360.66,-1216.82 1350.2,-1215.17 1351.45,-1222.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge323" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M550.56,-1050.1C746.47,-1044.54 1094.84,-1040.32 1137,-1078.78 1189.62,-1126.78 1106.43,-1187.62 1157,-1237.78 1206.11,-1286.48 1293.08,-1281.92 1344.85,-1273.69"/>
<polygon fill="blue" stroke="blue" points="1345.44,-1277.14 1354.71,-1272.01 1344.27,-1270.24 1345.44,-1277.14"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge321" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M550.5,-1045.32C609.13,-1048.63 673.96,-1063.92 715,-1108.78 747.99,-1144.83 701.2,-1292.48 735,-1327.78 776.6,-1371.2 852.31,-1368.54 897.7,-1362.06"/>
<polygon fill="blue" stroke="blue" points="898.39,-1365.5 907.73,-1360.5 897.31,-1358.58 898.39,-1365.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate(). -->
<g id="edge326" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M550.83,-1063.64C757.22,-1077.57 1131.98,-1103.54 1137,-1108.78 1183.02,-1156.75 1112.31,-1657.56 1157,-1706.78 1201.92,-1756.24 1285.24,-1754.19 1338.31,-1746.62"/>
<polygon fill="blue" stroke="blue" points="1339.15,-1750.03 1348.5,-1745.04 1338.08,-1743.11 1339.15,-1750.03"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity(). -->
<g id="node252" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().</title>
<g id="a_node252"><a xlink:title="fn test_create_call_link_enforces_timestamp_granularity() { &#160;&#160;&#160;&#160;let randomness0: RandomnessBytes = [0x42u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let ra...">
<polygon fill="white" stroke="black" points="1128,-1798.78 744,-1798.78 744,-1762.78 1128,-1762.78 1128,-1798.78"/>
<text text-anchor="middle" x="936" y="-1777.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_create_call_link_enforces_timestamp_granularity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new(). -->
<g id="edge203" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M959.75,-1762.61C1001.83,-1727.69 1091.65,-1646.73 1137,-1557.78 1156.2,-1520.11 1125.72,-1493.22 1157,-1464.78 1209.9,-1416.67 1300.31,-1422.37 1350.57,-1430.34"/>
<polygon fill="blue" stroke="blue" points="1350.22,-1433.83 1360.66,-1432.05 1351.39,-1426.93 1350.22,-1433.83"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="edge202" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M974.65,-1762.67C1019.59,-1739.21 1094.05,-1694.17 1137,-1634.78 1153.97,-1611.31 1134.63,-1591.16 1157,-1572.78 1209.89,-1529.32 1294.17,-1531.72 1344.69,-1538.21"/>
<polygon fill="blue" stroke="blue" points="1344.24,-1541.68 1354.63,-1539.6 1345.21,-1534.75 1344.24,-1541.68"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="edge204" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M965.34,-1762.74C1009.07,-1733.4 1092.56,-1671.08 1137,-1596.78 1155.37,-1566.06 1130.05,-1542.33 1157,-1518.78 1210.84,-1471.72 1300.88,-1477.01 1350.84,-1484.63"/>
<polygon fill="blue" stroke="blue" points="1350.43,-1488.11 1360.86,-1486.27 1351.56,-1481.2 1350.43,-1488.11"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate(). -->
<g id="edge205" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1121.33,-1762.75C1200.29,-1755.03 1286.16,-1746.64 1338.29,-1741.54"/>
<polygon fill="blue" stroke="blue" points="1338.64,-1745.02 1348.25,-1740.56 1337.96,-1738.05 1338.64,-1745.02"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response(). -->
<g id="node253" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().</title>
<g id="a_node253"><a xlink:title="fn test_create_call_link_request_response() { &#160;&#160;&#160;&#160;let randomness0: RandomnessBytes = [0x42u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: Ran...">
<polygon fill="white" stroke="black" points="1077.5,-1852.78 794.5,-1852.78 794.5,-1816.78 1077.5,-1816.78 1077.5,-1852.78"/>
<text text-anchor="middle" x="936" y="-1831.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_create_call_link_request_response</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new(). -->
<g id="edge286" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1077.74,-1840.32C1100.22,-1834.82 1121.22,-1824.8 1137,-1807.78 1188.9,-1751.78 1104.62,-1520.32 1157,-1464.78 1206.55,-1412.24 1299.8,-1420.13 1351.03,-1429.52"/>
<polygon fill="blue" stroke="blue" points="1350.51,-1432.99 1360.99,-1431.46 1351.85,-1426.12 1350.51,-1432.99"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="edge287" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1077.63,-1839.91C1100.04,-1834.43 1121.06,-1824.53 1137,-1807.78 1173.14,-1769.81 1120.54,-1610.42 1157,-1572.78 1205.25,-1522.96 1292.91,-1528.02 1344.95,-1536.62"/>
<polygon fill="blue" stroke="blue" points="1344.41,-1540.08 1354.87,-1538.37 1345.63,-1533.18 1344.41,-1540.08"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify(). -->
<g id="edge289" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1077.67,-1838.04C1099.68,-1832.65 1120.54,-1823.26 1137,-1807.78 1170.33,-1776.42 1125.15,-1739.63 1157,-1706.78 1207.59,-1654.59 1298.5,-1649.28 1349.56,-1650.94"/>
<polygon fill="blue" stroke="blue" points="1349.68,-1654.44 1359.83,-1651.38 1349.99,-1647.45 1349.68,-1654.44"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="edge291" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1077.59,-1840.18C1100.08,-1834.69 1121.13,-1824.71 1137,-1807.78 1181.02,-1760.8 1112.58,-1565.37 1157,-1518.78 1206.7,-1466.64 1299.48,-1474.25 1350.71,-1483.52"/>
<polygon fill="blue" stroke="blue" points="1350.19,-1486.99 1360.67,-1485.44 1351.52,-1480.11 1350.19,-1486.99"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present(). -->
<g id="edge285" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1077.54,-1839.52C1099.89,-1834.06 1120.91,-1824.26 1137,-1807.78 1193.53,-1749.86 1099.97,-1684.2 1157,-1626.78 1205.34,-1578.1 1291.42,-1582.32 1343.45,-1590.54"/>
<polygon fill="blue" stroke="blue" points="1342.94,-1594 1353.38,-1592.23 1344.11,-1587.1 1342.94,-1594"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid(). -->
<g id="edge290" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1077.72,-1828.38C1100.4,-1833.9 1121.49,-1844.15 1137,-1861.78 1193.13,-1925.57 1100.32,-4857.47 1157,-4920.78 1198.95,-4967.63 1275.5,-4967.31 1328.71,-4959.97"/>
<polygon fill="blue" stroke="blue" points="1329.32,-4963.41 1338.69,-4958.47 1328.29,-4956.49 1329.32,-4963.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key(). -->
<g id="edge288" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1077.71,-1828.38C1100.4,-1833.9 1121.49,-1844.15 1137,-1861.78 1192.09,-1924.38 1101.77,-4801.3 1157,-4863.78 1190.68,-4901.87 1247.09,-4909.69 1295.61,-4907.82"/>
<polygon fill="blue" stroke="blue" points="1296.03,-4911.3 1305.84,-4907.28 1295.67,-4904.31 1296.03,-4911.3"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate(). -->
<g id="edge284" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1077.76,-1826.62C1098.21,-1822.37 1118.56,-1816.31 1137,-1807.78 1147.85,-1802.75 1146.39,-1795.29 1157,-1789.78 1214.91,-1759.65 1289.82,-1746.49 1338.14,-1740.85"/>
<polygon fill="blue" stroke="blue" points="1338.77,-1744.31 1348.33,-1739.73 1338.01,-1737.35 1338.77,-1744.31"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity(). -->
<g id="node254" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().</title>
<g id="a_node254"><a xlink:title="fn test_auth_credential_enforces_timestamp_granularity() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;&#160;// cli...">
<polygon fill="white" stroke="black" points="1129,-1906.78 743,-1906.78 743,-1870.78 1129,-1870.78 1129,-1906.78"/>
<text text-anchor="middle" x="936" y="-1885.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_auth_credential_enforces_timestamp_granularity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="edge459" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1128.04,-1907.1C1131.19,-1909.77 1134.18,-1912.66 1137,-1915.78 1181.36,-1964.84 1112.21,-2462.1 1157,-2510.78 1204.08,-2561.95 1292.54,-2556.3 1344.97,-2547.25"/>
<polygon fill="blue" stroke="blue" points="1345.75,-2550.66 1354.95,-2545.41 1344.48,-2543.78 1345.75,-2550.66"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="edge457" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1127.63,-1906.79C1130.92,-1909.54 1134.06,-1912.53 1137,-1915.78 1177.2,-1960.08 1116.7,-2409.57 1157,-2453.78 1195.53,-2496.05 1262.1,-2500.65 1313.74,-2496.37"/>
<polygon fill="blue" stroke="blue" points="1314.24,-2499.83 1323.86,-2495.4 1313.57,-2492.87 1314.24,-2499.83"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate(). -->
<g id="edge458" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1125.36,-1870.65C1129.41,-1867.95 1133.3,-1865 1137,-1861.78 1162.03,-1839.95 1133,-1812.73 1157,-1789.78 1205.62,-1743.27 1286.48,-1734.62 1338.23,-1734.39"/>
<polygon fill="blue" stroke="blue" points="1338.47,-1737.89 1348.49,-1734.46 1338.51,-1730.89 1338.47,-1737.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential(). -->
<g id="node255" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().</title>
<g id="a_node255"><a xlink:title="fn test_auth_credential() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: RandomnessBytes = [0x...">
<polygon fill="white" stroke="black" points="1014,-1960.78 858,-1960.78 858,-1924.78 1014,-1924.78 1014,-1960.78"/>
<text text-anchor="middle" x="936" y="-1939.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_auth_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="edge484" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M947.07,-1961.18C979.7,-2021.65 1083.53,-2220.39 1137,-2396.78 1151.92,-2446 1119.61,-2475.45 1157,-2510.78 1207.03,-2558.05 1293.01,-2554.17 1344.48,-2546.41"/>
<polygon fill="blue" stroke="blue" points="1345.3,-2549.82 1354.61,-2544.77 1344.17,-2542.91 1345.3,-2549.82"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="edge486" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M949.57,-1961.15C985.32,-2014.39 1088.17,-2174.42 1137,-2322.78 1155.41,-2378.72 1114.9,-2412.59 1157,-2453.78 1197.46,-2493.36 1262.83,-2498.52 1313.56,-2495.12"/>
<polygon fill="blue" stroke="blue" points="1314.13,-2498.59 1323.82,-2494.31 1313.58,-2491.61 1314.13,-2498.59"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present(). -->
<g id="edge487" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M944.31,-1961.03C971.71,-2029.76 1070.14,-2279.83 1137,-2490.78 1147.29,-2523.25 1131.2,-2542.52 1157,-2564.78 1208.41,-2609.12 1292.07,-2606.71 1343.07,-2599.93"/>
<polygon fill="blue" stroke="blue" points="1343.72,-2603.38 1353.12,-2598.49 1342.72,-2596.45 1343.72,-2603.38"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify(). -->
<g id="edge483" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M943.8,-1961.07C970.56,-2033.42 1070.38,-2306.84 1137,-2536.78 1147.44,-2572.81 1128.9,-2593.92 1157,-2618.78 1210.14,-2665.78 1299.29,-2660.81 1349.57,-2653.19"/>
<polygon fill="blue" stroke="blue" points="1350.37,-2656.61 1359.68,-2651.54 1349.25,-2649.7 1350.37,-2656.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid(). -->
<g id="edge482" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]decrypt_uid().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M943.59,-1960.85C973.46,-2043.83 1096.38,-2397.04 1137,-2698.78 1141.12,-2729.36 1136.39,-4897.81 1157,-4920.78 1199.01,-4967.58 1275.55,-4967.27 1328.74,-4959.94"/>
<polygon fill="blue" stroke="blue" points="1329.34,-4963.39 1338.72,-4958.45 1328.31,-4956.47 1329.34,-4963.39"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key(). -->
<g id="edge481" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/params/impl#[CallLinkSecretParams]derive_from_root_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M943.59,-1960.85C973.45,-2043.83 1096.35,-2397.05 1137,-2698.78 1141.02,-2728.58 1137.06,-4841.27 1157,-4863.78 1190.72,-4901.83 1247.14,-4909.64 1295.65,-4907.79"/>
<polygon fill="blue" stroke="blue" points="1296.07,-4911.27 1305.87,-4907.25 1295.7,-4904.28 1296.07,-4911.27"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate(). -->
<g id="edge485" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/generic_server_params/impl#[GenericServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1014.42,-1952.82C1056.09,-1953.71 1105.3,-1946.75 1137,-1915.78 1177.56,-1876.15 1118.31,-1831.23 1157,-1789.78 1203.13,-1740.34 1285.34,-1732.62 1337.96,-1733.37"/>
<polygon fill="blue" stroke="blue" points="1337.99,-1736.87 1348.07,-1733.62 1338.16,-1729.87 1337.99,-1736.87"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement(). -->
<g id="node256" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().</title>
<g id="a_node256"><a xlink:title="fn test_endorsement() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: RandomnessBytes = [0x45u8...">
<polygon fill="white" stroke="black" points="488,-821.78 346,-821.78 346,-785.78 488,-785.78 488,-821.78"/>
<text text-anchor="middle" x="417" y="-800.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_endorsement</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate(). -->
<g id="edge11" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M463.7,-821.85C532.9,-852.02 661.82,-919.87 715,-1024.78 749.34,-1092.51 706.7,-3688.3 735,-3758.78 768.44,-3842.05 851.53,-3911.69 899.44,-3946.62"/>
<polygon fill="blue" stroke="blue" points="897.5,-3949.54 907.66,-3952.53 901.59,-3943.86 897.5,-3949.54"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge14" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M488.25,-816.99C553.68,-825.15 650.56,-826.11 715,-776.78 735.32,-761.22 715.02,-738.77 735,-722.78 762.38,-700.85 798.94,-691.95 833.3,-689.23"/>
<polygon fill="blue" stroke="blue" points="833.64,-692.72 843.4,-688.6 833.2,-685.73 833.64,-692.72"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token(). -->
<g id="edge13" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsement]to_token().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M488.26,-803.78C595.53,-803.78 797.25,-803.78 888.3,-803.78"/>
<polygon fill="blue" stroke="blue" points="888.33,-807.28 898.33,-803.78 888.33,-800.28 888.33,-807.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge10" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M488.27,-798.01C548.49,-792.93 637.52,-785.05 715,-776.78 779.87,-769.85 855.29,-760.26 898.85,-754.57"/>
<polygon fill="blue" stroke="blue" points="899.49,-758.01 908.95,-753.24 898.58,-751.07 899.49,-758.01"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts(). -->
<g id="edge8" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M488.26,-811.11C576.97,-820.38 730.27,-836.39 832.16,-847.03"/>
<polygon fill="blue" stroke="blue" points="831.86,-850.52 842.17,-848.08 832.58,-843.56 831.86,-850.52"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration(). -->
<g id="edge9" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M488.04,-819.07C554.95,-829.24 654.35,-832.06 715,-776.78 751.08,-743.89 699.65,-702.44 735,-668.78 770,-635.45 825.35,-630.2 868.96,-632.44"/>
<polygon fill="blue" stroke="blue" points="868.99,-635.95 879.2,-633.12 869.45,-628.97 868.99,-635.95"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge12" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M463.67,-821.86C532.83,-852.05 661.69,-919.93 715,-1024.78 740.94,-1075.79 697.13,-3041.87 735,-3084.78 771.75,-3126.41 839.67,-3126.84 886.07,-3121.13"/>
<polygon fill="blue" stroke="blue" points="886.77,-3124.56 896.2,-3119.74 885.82,-3117.63 886.77,-3124.56"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations(). -->
<g id="node257" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().</title>
<g id="a_node257"><a xlink:title="fn test_client_rejects_bad_expirations() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: Random...">
<polygon fill="white" stroke="black" points="545.5,-767.78 288.5,-767.78 288.5,-731.78 545.5,-731.78 545.5,-767.78"/>
<text text-anchor="middle" x="417" y="-746.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_client_rejects_bad_expirations</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate(). -->
<g id="edge359" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M493.2,-731.75C561.69,-720.31 660.25,-717.22 715,-776.78 743.03,-807.27 719.58,-3720.34 735,-3758.78 768.41,-3842.06 851.52,-3911.7 899.43,-3946.62"/>
<polygon fill="blue" stroke="blue" points="897.5,-3949.55 907.66,-3952.54 901.58,-3943.86 897.5,-3949.55"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge355" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M545.64,-739.06C598.14,-734.42 659.53,-728.7 715,-722.78 753.56,-718.66 795.85,-713.6 832.97,-708.98"/>
<polygon fill="blue" stroke="blue" points="833.8,-712.4 843.29,-707.68 832.93,-705.45 833.8,-712.4"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge358" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M545.8,-749.78C662.13,-749.78 826.37,-749.78 898.56,-749.78"/>
<polygon fill="blue" stroke="blue" points="898.93,-753.28 908.93,-749.78 898.93,-746.28 898.93,-753.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration(). -->
<g id="edge357" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M545.65,-767.16C602.7,-768.13 667.62,-759.05 715,-722.78 735.32,-707.22 715.02,-684.77 735,-668.78 772.35,-638.87 826.76,-633.19 869.4,-634.39"/>
<polygon fill="blue" stroke="blue" points="869.28,-637.89 879.41,-634.81 869.57,-630.9 869.28,-637.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge356" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M493.5,-731.72C561.96,-720.34 660.28,-717.37 715,-776.78 758.44,-823.93 692.6,-3036.69 735,-3084.78 771.73,-3126.43 839.65,-3126.85 886.06,-3121.13"/>
<polygon fill="blue" stroke="blue" points="886.76,-3124.57 896.2,-3119.75 885.81,-3117.64 886.76,-3124.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group(). -->
<g id="node258" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().</title>
<g id="a_node258"><a xlink:title="fn test_single_member_group() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: RandomnessBytes =...">
<polygon fill="white" stroke="black" points="518.5,-713.78 315.5,-713.78 315.5,-677.78 518.5,-677.78 518.5,-713.78"/>
<text text-anchor="middle" x="417" y="-692.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_single_member_group</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate(). -->
<g id="edge412" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M493.2,-677.75C561.69,-666.3 660.25,-663.22 715,-722.78 743.54,-753.82 719.3,-3719.64 735,-3758.78 768.41,-3842.06 851.51,-3911.7 899.43,-3946.63"/>
<polygon fill="blue" stroke="blue" points="897.49,-3949.55 907.66,-3952.54 901.58,-3943.86 897.49,-3949.55"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge411" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M518.6,-695.78C609.35,-695.78 742.18,-695.78 833.27,-695.78"/>
<polygon fill="blue" stroke="blue" points="833.33,-699.28 843.33,-695.78 833.33,-692.28 833.33,-699.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge410" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M518.77,-704.14C576.3,-709.12 649.75,-715.81 715,-722.78 779.87,-729.7 855.29,-739.3 898.85,-744.99"/>
<polygon fill="blue" stroke="blue" points="898.58,-748.48 908.95,-746.31 899.49,-741.54 898.58,-748.48"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration(). -->
<g id="edge409" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendDerivedKeyPair]for_expiration().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M518.6,-685.27C622.16,-674.45 780.53,-657.91 869.13,-648.66"/>
<polygon fill="blue" stroke="blue" points="869.73,-652.11 879.31,-647.59 869,-645.15 869.73,-652.11"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge413" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M493.17,-677.78C561.65,-666.34 660.19,-663.27 715,-722.78 759.45,-771.04 691.61,-3035.56 735,-3084.78 771.73,-3126.44 839.65,-3126.86 886.06,-3121.14"/>
<polygon fill="blue" stroke="blue" points="886.76,-3124.57 896.19,-3119.75 885.81,-3117.64 886.76,-3124.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_blob_encryption(). -->
<g id="node259" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_blob_encryption().</title>
<g id="a_node259"><a xlink:title="fn test_blob_encryption() { &#160;&#160;&#160;&#160;let master_key = zkgroup::groups::GroupMasterKey::new(zkgroup::TEST_ARRAY_32_1); &#160;&#160;&#160;&#160;let group_secret_params = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;zkgroup::groups::GroupSecretParams::derive_from_m...">
<polygon fill="white" stroke="black" points="497.5,-4196.78 336.5,-4196.78 336.5,-4160.78 497.5,-4160.78 497.5,-4196.78"/>
<text text-anchor="middle" x="417" y="-4175.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_blob_encryption</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_blob_encryption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key(). -->
<g id="edge22" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_blob_encryption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M497.83,-4170.53C564.63,-4168.3 657.94,-4176.82 715,-4231.78 745.14,-4260.8 702.42,-4297.52 735,-4323.78 874.11,-4435.89 1004.28,-4443.39 1137,-4323.78 1168.87,-4295.06 1128.58,-4163.91 1157,-4131.78 1188.8,-4095.81 1239.66,-4081.67 1285.48,-4076.9"/>
<polygon fill="blue" stroke="blue" points="1285.83,-4080.38 1295.48,-4076 1285.2,-4073.41 1285.83,-4080.38"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs(). -->
<g id="node260" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().</title>
<g id="a_node260"><a xlink:title="fn test_server_sigs() { &#160;&#160;&#160;&#160;let server_secret_params = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;zkgroup::api::server_params::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params.ge...">
<polygon fill="white" stroke="black" points="481,-4034.78 353,-4034.78 353,-3998.78 481,-3998.78 481,-4034.78"/>
<text text-anchor="middle" x="417" y="-4013.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_sigs</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature(). -->
<g id="edge336" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M481.11,-4032.22C549.13,-4044.68 655.6,-4051.35 715,-3989.78 771.4,-3931.31 679.89,-3684.45 735,-3624.78 766.36,-3590.82 818.51,-3584.69 861.7,-3586.73"/>
<polygon fill="blue" stroke="blue" points="861.7,-3590.23 871.9,-3587.36 862.13,-3583.25 861.7,-3590.23"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign(). -->
<g id="edge338" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M481.19,-4032.29C549.28,-4044.83 655.81,-4051.56 715,-3989.78 747.24,-3956.12 703.5,-3605.13 735,-3570.78 776.08,-3525.98 853.33,-3529.5 898.86,-3536.42"/>
<polygon fill="blue" stroke="blue" points="898.46,-3539.9 908.9,-3538.08 899.6,-3532.99 898.46,-3539.9"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge337" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M481.17,-4032.5C549.49,-4045.31 656.48,-4052.37 715,-3989.78 747.3,-3955.23 703.46,-3174.01 735,-3138.78 772.04,-3097.39 839.89,-3096.91 886.19,-3102.54"/>
<polygon fill="blue" stroke="blue" points="885.93,-3106.03 896.31,-3103.9 886.87,-3099.09 885.93,-3106.03"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile(). -->
<g id="node261" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().</title>
<g id="a_node261"><a xlink:title="fn test_integration_expiring_profile() { &#160;&#160;&#160;&#160;// SERVER &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params...">
<polygon fill="white" stroke="black" points="536.5,-4142.78 297.5,-4142.78 297.5,-4106.78 536.5,-4106.78 536.5,-4142.78"/>
<text text-anchor="middle" x="417" y="-4121.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_integration_expiring_profile</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key(). -->
<g id="edge383" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M504.29,-4106.76C570.6,-4098.34 659.9,-4099.65 715,-4151.78 759.38,-4193.76 688.76,-4247.84 735,-4287.78 802.61,-4346.17 1069.94,-4346.79 1137,-4287.78 1189.48,-4241.6 1110.08,-4183.59 1157,-4131.78 1189.03,-4096.41 1239.51,-4082.25 1285.02,-4077.32"/>
<polygon fill="blue" stroke="blue" points="1285.63,-4080.78 1295.26,-4076.36 1284.97,-4073.81 1285.63,-4080.78"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key(). -->
<g id="edge379" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_profile_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M536.67,-4140.79C595.38,-4142.47 664.32,-4134.39 715,-4097.78 733.07,-4084.72 717.22,-4065.22 735,-4051.78 767.45,-4027.24 811.62,-4019.4 850.19,-4018.17"/>
<polygon fill="blue" stroke="blue" points="850.45,-4021.67 860.38,-4017.99 850.32,-4014.67 850.45,-4021.67"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id(). -->
<g id="edge386" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]decrypt_service_id().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M536.61,-4114.22C633.29,-4105.62 767.34,-4093.69 852.62,-4086.11"/>
<polygon fill="blue" stroke="blue" points="853.13,-4089.57 862.78,-4085.2 852.51,-4082.6 853.13,-4089.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment(). -->
<g id="edge385" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/profiles/profile_key/impl#[ProfileKey]get_commitment().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M493.74,-4106.75C562.13,-4095.46 660.18,-4092.64 715,-4151.78 765.77,-4206.54 685.85,-5439.56 735,-5495.78 764.95,-5530.04 815.84,-5537.3 858.79,-5536.11"/>
<polygon fill="blue" stroke="blue" points="859.11,-5539.6 868.95,-5535.67 858.81,-5532.61 859.11,-5539.6"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="edge387" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.01,-4142.8C562.33,-4153.99 660.12,-4156.69 715,-4097.78 753.37,-4056.59 697.54,-3126.79 735,-3084.78 737.02,-3082.51 739.14,-3080.36 741.34,-3078.33"/>
<polygon fill="blue" stroke="blue" points="743.66,-3080.96 749.12,-3071.88 739.19,-3075.57 743.66,-3080.96"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="edge382" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.29,-4142.8C562.56,-4153.92 660.1,-4156.49 715,-4097.78 747.3,-4063.23 703.46,-3282.01 735,-3246.78 745.73,-3234.78 759.06,-3226.22 773.69,-3220.25"/>
<polygon fill="blue" stroke="blue" points="775.28,-3223.4 783.48,-3216.69 772.89,-3216.82 775.28,-3223.4"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge381" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.94,-4142.81C563.88,-4153.44 659.93,-4155.26 715,-4097.78 747.24,-4064.12 703.5,-3713.13 735,-3678.78 742.36,-3670.75 750.88,-3664.28 760.16,-3659.1"/>
<polygon fill="blue" stroke="blue" points="761.92,-3662.13 769.29,-3654.52 758.78,-3655.87 761.92,-3662.13"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge384" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.84,-4142.81C563,-4153.76 660.05,-4156.08 715,-4097.78 763.42,-4046.41 687.71,-3515.19 735,-3462.78 748.04,-3448.32 764.84,-3438.87 783.16,-3432.93"/>
<polygon fill="blue" stroke="blue" points="784.22,-3436.27 792.86,-3430.14 782.29,-3429.54 784.22,-3436.27"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="edge380" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.54,-4142.79C562.75,-4153.81 660.03,-4156.24 715,-4097.78 767.46,-4041.98 683.77,-3465.7 735,-3408.78 749.69,-3392.46 769.16,-3382.51 790.21,-3376.79"/>
<polygon fill="blue" stroke="blue" points="791.06,-3380.19 799.97,-3374.46 789.43,-3373.38 791.06,-3380.19"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge378" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M493.99,-4142.78C562.31,-4153.97 660.09,-4156.66 715,-4097.78 751.34,-4058.8 699.51,-3178.53 735,-3138.78 771.98,-3097.34 839.85,-3096.87 886.17,-3102.51"/>
<polygon fill="blue" stroke="blue" points="885.91,-3106.01 896.29,-3103.89 886.85,-3099.07 885.91,-3106.01"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc(). -->
<g id="node262" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().</title>
<g id="a_node262"><a xlink:title="fn test_integration_auth_zkc() { &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params.get_public_params(); ...">
<polygon fill="white" stroke="black" points="514,-3980.78 320,-3980.78 320,-3944.78 514,-3944.78 514,-3980.78"/>
<text text-anchor="middle" x="417" y="-3959.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_integration_auth_zkc</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="edge405" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M499.83,-3980.8C567.9,-3990.46 661.94,-3990.47 715,-3932.78 759.27,-3884.64 691.54,-2804.65 735,-2755.78 773.31,-2712.69 845.01,-2713.84 891.34,-2720.16"/>
<polygon fill="blue" stroke="blue" points="890.98,-2723.64 901.39,-2721.66 892.02,-2716.72 890.98,-2723.64"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="edge404" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M499.82,-3980.79C567.89,-3990.45 661.92,-3990.45 715,-3932.78 757.26,-3886.86 693.52,-2856.39 735,-2809.78 775.08,-2764.73 851.66,-2768.05 897.55,-2775.06"/>
<polygon fill="blue" stroke="blue" points="897.24,-2778.56 907.68,-2776.74 898.39,-2771.65 897.24,-2778.56"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="edge407" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M500.1,-3980.78C568.09,-3990.35 661.88,-3990.24 715,-3932.78 749.14,-3895.85 706.61,-3069.29 735,-3027.78 770.58,-2975.74 845.37,-2956.26 892.73,-2949.01"/>
<polygon fill="blue" stroke="blue" points="893.27,-2952.47 902.68,-2947.61 892.29,-2945.54 893.27,-2952.47"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="edge403" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M500.13,-3980.81C568.15,-3990.41 661.95,-3990.3 715,-3932.78 753.23,-3891.31 697.47,-2959.87 735,-2917.78 765.93,-2883.08 818.52,-2877.09 862.01,-2879.38"/>
<polygon fill="blue" stroke="blue" points="861.77,-2882.87 871.99,-2880.05 862.25,-2875.89 861.77,-2882.87"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key(). -->
<g id="edge406" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M499.03,-3944.75C566.37,-3934.99 659.77,-3934.44 715,-3989.78 750.46,-4025.31 697.97,-4180.89 735,-4214.78 767.95,-4244.93 1101.91,-4242.41 1137,-4214.78 1166.81,-4191.3 1130.04,-4158.47 1157,-4131.78 1190.57,-4098.54 1240.55,-4084.49 1285.34,-4079.09"/>
<polygon fill="blue" stroke="blue" points="1285.84,-4082.55 1295.41,-4078 1285.09,-4075.59 1285.84,-4082.55"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge408" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M500.39,-3980.78C568.33,-3990.29 661.88,-3990.06 715,-3932.78 745,-3900.42 705.54,-3171.63 735,-3138.78 772.07,-3097.42 839.91,-3096.93 886.21,-3102.55"/>
<polygon fill="blue" stroke="blue" points="885.94,-3106.04 896.32,-3103.91 886.88,-3099.11 885.94,-3106.04"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify(). -->
<g id="node263" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().</title>
<g id="a_node263"><a xlink:title="fn test_profile_key_credential_presentation_v1_does_not_verify() { &#160;&#160;&#160;&#160;// Originally from test_integration_profile. &#160;&#160;&#160;&#160;// SERVER &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(z...">
<polygon fill="white" stroke="black" points="632.5,-4088.78 201.5,-4088.78 201.5,-4052.78 632.5,-4052.78 632.5,-4088.78"/>
<text text-anchor="middle" x="417" y="-4067.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_credential_presentation_v1_does_not_verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key(). -->
<g id="edge422" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_params/impl#[GroupSecretParams]derive_from_master_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M502.51,-4052.76C569.16,-4043.9 659.81,-4044.62 715,-4097.78 765.03,-4145.96 682.84,-4206.91 735,-4252.78 802.09,-4311.76 1068.88,-4310.56 1137,-4252.78 1178.57,-4217.52 1119.68,-4171.51 1157,-4131.78 1189.54,-4097.13 1239.8,-4083 1285.05,-4077.91"/>
<polygon fill="blue" stroke="blue" points="1285.61,-4081.37 1295.22,-4076.9 1284.92,-4074.4 1285.61,-4081.37"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="edge423" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.26,-4088.78C562.52,-4099.89 660.06,-4102.45 715,-4043.78 745.28,-4011.45 705.44,-3279.76 735,-3246.78 745.65,-3234.9 758.83,-3226.39 773.32,-3220.43"/>
<polygon fill="blue" stroke="blue" points="774.83,-3223.61 783.01,-3216.87 772.42,-3217.03 774.83,-3223.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge424" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.31,-4088.82C562.59,-4099.95 660.14,-4102.53 715,-4043.78 749.32,-4007.02 701.49,-3176.27 735,-3138.78 772.01,-3097.37 839.87,-3096.89 886.18,-3102.52"/>
<polygon fill="blue" stroke="blue" points="885.92,-3106.02 896.3,-3103.89 886.86,-3099.08 885.92,-3106.02"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api(). -->
<g id="node264" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().</title>
<g id="a_node264"><a xlink:title="fn test_api() { &#160;&#160;&#160;&#160;let randomness0: RandomnessBytes = [0x42u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOM...">
<polygon fill="white" stroke="black" points="452.5,-4416.78 381.5,-4416.78 381.5,-4380.78 452.5,-4380.78 452.5,-4416.78"/>
<text text-anchor="middle" x="417" y="-4395.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_api</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="edge112" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M452.76,-4408.05C515.65,-4422.47 647.99,-4441.63 715,-4368.78 759.23,-4320.68 691.58,-3241.61 735,-3192.78 748.44,-3177.66 766,-3167.98 785.13,-3162.07"/>
<polygon fill="blue" stroke="blue" points="786.22,-3165.4 794.94,-3159.39 784.37,-3158.65 786.22,-3165.4"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation(). -->
<g id="edge113" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M452.75,-4408.04C515.62,-4422.44 647.93,-4441.58 715,-4368.78 755.21,-4325.13 695.53,-3345.09 735,-3300.78 748.87,-3285.21 767.1,-3275.42 786.91,-3269.56"/>
<polygon fill="blue" stroke="blue" points="787.96,-3272.9 796.75,-3266.99 786.19,-3266.13 787.96,-3272.9"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="edge111" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M452.71,-4408.01C515.53,-4422.36 647.76,-4441.42 715,-4368.78 747.16,-4334.03 703.42,-3552.06 735,-3516.78 759.67,-3489.21 798.01,-3479.79 834.54,-3478.24"/>
<polygon fill="blue" stroke="blue" points="834.87,-3481.73 844.79,-3478 834.71,-3474.73 834.87,-3481.73"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context(). -->
<g id="edge110" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M452.65,-4407.94C515.36,-4422.2 647.42,-4441.1 715,-4368.78 761.3,-4319.22 692.77,-3811.83 735,-3758.78 745.47,-3745.63 758.79,-3735.51 773.57,-3727.76"/>
<polygon fill="blue" stroke="blue" points="775.47,-3730.74 782.95,-3723.24 772.43,-3724.43 775.47,-3730.74"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate(). -->
<g id="edge109" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M452.76,-4408.05C515.66,-4422.49 648.02,-4441.66 715,-4368.78 761.24,-4318.45 689.61,-3189.86 735,-3138.78 771.89,-3097.26 839.77,-3096.8 886.13,-3102.48"/>
<polygon fill="blue" stroke="blue" points="885.87,-3105.97 896.25,-3103.86 886.82,-3099.04 885.87,-3105.97"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="edge114" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M452.74,-4408.03C515.6,-4422.43 647.9,-4441.54 715,-4368.78 753.2,-4327.35 697.5,-3396.83 735,-3354.78 758.19,-3328.77 793.53,-3318.9 828.1,-3316.54"/>
<polygon fill="blue" stroke="blue" points="828.48,-3320.03 838.3,-3316.06 828.14,-3313.03 828.48,-3320.03"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response(). -->
<g id="node265" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().</title>
<g id="a_node265"><a xlink:title="fn test_request_response() { &#160;&#160;&#160;&#160;let mut sho = Sho::new(b&#39; Test_Receipt_Credential_Request&#39; , b&#39; &#39; ); &#160;&#160;&#160;&#160;&#160;// client receives in response to initial request &#160;&#160;&#160;&#160;let receipt_expiration_time: Timestamp ...">
<polygon fill="white" stroke="black" points="503,-4470.78 331,-4470.78 331,-4434.78 503,-4434.78 503,-4470.78"/>
<text text-anchor="middle" x="417" y="-4449.08" font-family="Helvetica,sans-Serif" font-size="14.00">test_request_response</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]generate(). -->
<g id="edge522" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;S&gt;`]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M471.8,-4470.8C542.15,-4497.6 662.58,-4555.31 715,-4650.78 739.82,-4695.98 726.83,-5527.86 735,-5578.78 836.65,-6212.47 641.12,-6577.99 1157,-6959.78 1322.05,-7081.92 1459.65,-7089.27 1619,-6959.78 1666.22,-6921.41 1602.99,-6867.78 1647,-6825.78 1678.25,-6795.95 1728.63,-6791.39 1766.08,-6792.96"/>
<polygon fill="blue" stroke="blue" points="1766.08,-6796.47 1776.27,-6793.55 1766.49,-6789.48 1766.08,-6796.47"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ReceiptCredential&gt;`]create_blinded_receipt_credential(). -->
<g id="edge520" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/impl#[`KeyPair&lt;ReceiptCredential&gt;`]create_blinded_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M472.24,-4470.85C542.77,-4497.62 663.09,-4555.2 715,-4650.78 758.06,-4730.06 711.72,-6187.6 735,-6274.78 834.2,-6646.17 825.43,-6835.26 1157,-7029.78 1334.11,-7133.68 1461.05,-7160.97 1619,-7029.78 1671.17,-6986.44 1598.45,-6927.12 1647,-6879.78 1657.13,-6869.9 1669.34,-6862.78 1682.51,-6857.72"/>
<polygon fill="blue" stroke="blue" points="1683.92,-6860.93 1692.25,-6854.39 1681.66,-6854.31 1683.92,-6860.93"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new(). -->
<g id="edge518" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.1,-4470.8C563.2,-4481.66 659.99,-4483.85 715,-4425.78 756.98,-4381.46 693.26,-3921.32 735,-3876.78 870.01,-3732.68 1479.24,-3926.27 1619,-3786.78 1661.69,-3744.16 1605.56,-3560.61 1647,-3516.78 1680.3,-3481.56 1739.92,-3480.39 1778.45,-3484.1"/>
<polygon fill="blue" stroke="blue" points="1778.39,-3487.61 1788.72,-3485.25 1779.17,-3480.65 1778.39,-3487.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new(). -->
<g id="edge519" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M494.82,-4470.79C562.97,-4481.73 660.01,-4484.05 715,-4425.78 761.54,-4376.46 687.92,-3864.58 735,-3815.78 800.27,-3748.13 1063.2,-3792.84 1157,-3786.78 1208.32,-3783.46 1582.48,-3794.98 1619,-3758.78 1682.91,-3695.42 1586.3,-3421.21 1647,-3354.78 1679.78,-3318.89 1739.82,-3317.98 1778.54,-3321.91"/>
<polygon fill="blue" stroke="blue" points="1778.51,-3325.43 1788.85,-3323.12 1779.33,-3318.48 1778.51,-3325.43"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify(). -->
<g id="edge523" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.37,-4470.79C563.41,-4481.56 659.94,-4483.63 715,-4425.78 752.18,-4386.71 696.94,-3978.99 735,-3940.78 804.39,-3871.11 1547.56,-3968.33 1619,-3900.78 1663.79,-3858.42 1604.7,-3669.62 1647,-3624.78 1679.98,-3589.81 1738.9,-3588.39 1777.47,-3591.99"/>
<polygon fill="blue" stroke="blue" points="1777.44,-3595.51 1787.76,-3593.12 1778.2,-3588.55 1777.44,-3595.51"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify(). -->
<g id="edge524" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M495.4,-4470.82C563.46,-4481.62 660.01,-4483.69 715,-4425.78 754.5,-4384.16 694.72,-3950.64 735,-3909.78 804.05,-3839.73 1547.99,-3930.83 1619,-3862.78 1666.06,-3817.67 1602.4,-3618.32 1647,-3570.78 1679.89,-3535.72 1738.83,-3534.32 1777.43,-3537.95"/>
<polygon fill="blue" stroke="blue" points="1777.41,-3541.47 1787.74,-3539.09 1778.18,-3534.51 1777.41,-3541.47"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt(). -->
<g id="edge521" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]encrypt().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M472.29,-4470.81C542.9,-4497.55 663.29,-4555.1 715,-4650.78 747.59,-4711.09 694.47,-7063.48 735,-7118.78 808.3,-7218.78 1208.14,-7267.75 1342.75,-7281.57"/>
<polygon fill="blue" stroke="blue" points="1342.42,-7285.05 1352.72,-7282.58 1343.12,-7278.09 1342.42,-7285.05"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]generate(). -->
<g id="edge525" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/receipt_credential_request/impl#[KeyPair]generate().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M472.3,-4470.81C542.91,-4497.54 663.31,-4555.09 715,-4650.78 748.66,-4713.07 691.67,-7143.77 735,-7199.78 880.74,-7388.14 1213.28,-7364.18 1338.29,-7347.5"/>
<polygon fill="blue" stroke="blue" points="1338.9,-7350.94 1348.33,-7346.11 1337.94,-7344.01 1338.9,-7350.94"/>
</g>
</g>
</svg>
