<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: function_subgraph Pages: 1 -->
<svg width="3274pt" height="4540pt"
 viewBox="0.00 0.00 3274.00 4540.20" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 4536.2)">
<title>function_subgraph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-4536.2 3270,-4536.2 3270,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="2599,-2586 2599,-2661 2791,-2661 2791,-2586 2599,-2586"/>
<text text-anchor="middle" x="2695" y="-2645.8" font-family="Helvetica,sans-Serif" font-size="14.00">mod.rs</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="2893,-2572 2893,-2647 3035,-2647 3035,-2572 2893,-2572"/>
<text text-anchor="middle" x="2964" y="-2631.8" font-family="Helvetica,sans-Serif" font-size="14.00">straus.rs</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_2</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="3116,-2605 3116,-2734 3258,-2734 3258,-2605 3116,-2605"/>
<text text-anchor="middle" x="3187" y="-2718.8" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_3</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="2624,-2683 2624,-2812 3006.5,-2812 3006.5,-2683 2624,-2683"/>
<text text-anchor="middle" x="2815.25" y="-2796.8" font-family="Helvetica,sans-Serif" font-size="14.00">ristretto.rs</text>
</g>
<g id="clust5" class="cluster">
<title>cluster_4</title>
<polygon fill="lightblue" stroke="lightblue" points="1510.5,-8 1510.5,-137 1659.5,-137 1659.5,-8 1510.5,-8"/>
<text text-anchor="middle" x="1585" y="-121.8" font-family="Helvetica,sans-Serif" font-size="14.00">usernames.rs</text>
</g>
<g id="clust6" class="cluster">
<title>cluster_5</title>
<polygon fill="lightblue" stroke="lightblue" points="316,-2001 316,-3642 912,-3642 912,-2001 316,-2001"/>
<text text-anchor="middle" x="614" y="-3626.8" font-family="Helvetica,sans-Serif" font-size="14.00">zkgroup.rs</text>
</g>
<g id="clust7" class="cluster">
<title>cluster_6</title>
<polygon fill="lightblue" stroke="lightblue" points="8,-1208 8,-1337 709,-1337 709,-1208 8,-1208"/>
<text text-anchor="middle" x="358.5" y="-1321.8" font-family="Helvetica,sans-Serif" font-size="14.00">gift_badge.rs</text>
</g>
<g id="clust8" class="cluster">
<title>cluster_7</title>
<polygon fill="lightblue" stroke="lightblue" points="41.5,-1125 41.5,-1200 653,-1200 653,-1125 41.5,-1125"/>
<text text-anchor="middle" x="347.25" y="-1184.8" font-family="Helvetica,sans-Serif" font-size="14.00">scramble.rs</text>
</g>
<g id="clust9" class="cluster">
<title>cluster_8</title>
<polygon fill="lightblue" stroke="lightblue" points="501,-1673 501,-1748 727,-1748 727,-1673 501,-1673"/>
<text text-anchor="middle" x="614" y="-1732.8" font-family="Helvetica,sans-Serif" font-size="14.00">fetch_profile_key_credential.rs</text>
</g>
<g id="clust10" class="cluster">
<title>cluster_9</title>
<polygon fill="lightblue" stroke="lightblue" points="502.5,-1536 502.5,-1665 725.5,-1665 725.5,-1536 502.5,-1536"/>
<text text-anchor="middle" x="614" y="-1649.8" font-family="Helvetica,sans-Serif" font-size="14.00">profiles.rs</text>
</g>
<g id="clust11" class="cluster">
<title>cluster_10</title>
<polygon fill="lightblue" stroke="lightblue" points="1519.5,-410 1519.5,-539 2008.5,-539 2008.5,-410 1519.5,-410"/>
<text text-anchor="middle" x="1764" y="-523.8" font-family="Helvetica,sans-Serif" font-size="14.00">sign.rs</text>
</g>
<g id="clust12" class="cluster">
<title>cluster_11</title>
<polygon fill="lightblue" stroke="lightblue" points="1836,-1359 1836,-1454 3096,-1454 3096,-1359 1836,-1359"/>
<text text-anchor="middle" x="2466" y="-1438.8" font-family="Helvetica,sans-Serif" font-size="14.00">statement.rs</text>
</g>
<g id="clust13" class="cluster">
<title>cluster_12</title>
<polygon fill="lightblue" stroke="lightblue" points="568.5,-282 568.5,-357 1657,-357 1657,-282 568.5,-282"/>
<text text-anchor="middle" x="1112.75" y="-341.8" font-family="Helvetica,sans-Serif" font-size="14.00">usernames_benchmarks.rs</text>
</g>
<g id="clust14" class="cluster">
<title>cluster_13</title>
<polygon fill="lightblue" stroke="lightblue" points="1431.5,-145 1431.5,-274 1993.5,-274 1993.5,-145 1431.5,-145"/>
<text text-anchor="middle" x="1712.5" y="-258.8" font-family="Helvetica,sans-Serif" font-size="14.00">username.rs</text>
</g>
<g id="clust15" class="cluster">
<title>cluster_14</title>
<polygon fill="lightblue" stroke="lightblue" points="568.5,-714 568.5,-789 1213,-789 1213,-714 568.5,-714"/>
<text text-anchor="middle" x="890.75" y="-773.8" font-family="Helvetica,sans-Serif" font-size="14.00">endorsements.rs</text>
</g>
<g id="clust16" class="cluster">
<title>cluster_15</title>
<polygon fill="lightblue" stroke="lightblue" points="2057,-3070 2057,-3145 2558,-3145 2558,-3070 2057,-3070"/>
<text text-anchor="middle" x="2307.5" y="-3129.8" font-family="Helvetica,sans-Serif" font-size="14.00">attributes.rs</text>
</g>
<g id="clust17" class="cluster">
<title>cluster_16</title>
<polygon fill="lightblue" stroke="lightblue" points="1027,-798 1027,-1035 1626,-1035 1626,-798 1027,-798"/>
<text text-anchor="middle" x="1326.5" y="-1019.8" font-family="Helvetica,sans-Serif" font-size="14.00">endorsements.rs</text>
</g>
<g id="clust18" class="cluster">
<title>cluster_17</title>
<polygon fill="lightblue" stroke="lightblue" points="1900.5,-3153 1900.5,-3336 2424.5,-3336 2424.5,-3153 1900.5,-3153"/>
<text text-anchor="middle" x="2162.5" y="-3320.8" font-family="Helvetica,sans-Serif" font-size="14.00">issuance.rs</text>
</g>
<g id="clust19" class="cluster">
<title>cluster_18</title>
<polygon fill="lightblue" stroke="lightblue" points="1900.5,-2865 1900.5,-2994 2392.5,-2994 2392.5,-2865 1900.5,-2865"/>
<text text-anchor="middle" x="2146.5" y="-2978.8" font-family="Helvetica,sans-Serif" font-size="14.00">blind.rs</text>
</g>
<g id="clust20" class="cluster">
<title>cluster_19</title>
<polygon fill="lightblue" stroke="lightblue" points="1840.5,-3852 1840.5,-4143 2812,-4143 2812,-3852 1840.5,-3852"/>
<text text-anchor="middle" x="2326.25" y="-4127.8" font-family="Helvetica,sans-Serif" font-size="14.00">presentation.rs</text>
</g>
<g id="clust21" class="cluster">
<title>cluster_20</title>
<polygon fill="lightblue" stroke="lightblue" points="175.5,-1399 175.5,-1474 293.5,-1474 293.5,-1399 175.5,-1399"/>
<text text-anchor="middle" x="234.5" y="-1458.8" font-family="Helvetica,sans-Serif" font-size="14.00">serialization.rs</text>
</g>
<g id="clust22" class="cluster">
<title>cluster_21</title>
<polygon fill="lightblue" stroke="lightblue" points="461,-1345 461,-1528 767,-1528 767,-1345 461,-1345"/>
<text text-anchor="middle" x="614" y="-1512.8" font-family="Helvetica,sans-Serif" font-size="14.00">zkgroup_benchmarks.rs</text>
</g>
<g id="clust23" class="cluster">
<title>cluster_22</title>
<polygon fill="lightblue" stroke="lightblue" points="1030.5,-3338 1030.5,-3467 1236.5,-3467 1236.5,-3338 1030.5,-3338"/>
<text text-anchor="middle" x="1133.5" y="-3451.8" font-family="Helvetica,sans-Serif" font-size="14.00">auth_credential_with_pni.rs</text>
</g>
<g id="clust24" class="cluster">
<title>cluster_23</title>
<polygon fill="lightblue" stroke="lightblue" points="1041,-2971 1041,-3262 1685.5,-3262 1685.5,-2971 1041,-2971"/>
<text text-anchor="middle" x="1363.25" y="-3246.8" font-family="Helvetica,sans-Serif" font-size="14.00">zkc.rs</text>
</g>
<g id="clust25" class="cluster">
<title>cluster_24</title>
<polygon fill="lightblue" stroke="lightblue" points="465,-3733 465,-4024 1626,-4024 1626,-3733 465,-3733"/>
<text text-anchor="middle" x="1045.5" y="-4008.8" font-family="Helvetica,sans-Serif" font-size="14.00">auth_credential.rs</text>
</g>
<g id="clust26" class="cluster">
<title>cluster_25</title>
<polygon fill="lightblue" stroke="lightblue" points="1513,-2481 1513,-2718 1657,-2718 1657,-2481 1513,-2481"/>
<text text-anchor="middle" x="1585" y="-2702.8" font-family="Helvetica,sans-Serif" font-size="14.00">auth_credential.rs</text>
</g>
<g id="clust27" class="cluster">
<title>cluster_26</title>
<polygon fill="lightblue" stroke="lightblue" points="1509.5,-2726 1509.5,-2963 1661.5,-2963 1661.5,-2726 1509.5,-2726"/>
<text text-anchor="middle" x="1585.5" y="-2947.8" font-family="Helvetica,sans-Serif" font-size="14.00">create_credential.rs</text>
</g>
<g id="clust28" class="cluster">
<title>cluster_27</title>
<polygon fill="lightblue" stroke="lightblue" points="974,-1043 974,-1280 1292,-1280 1292,-1043 974,-1043"/>
<text text-anchor="middle" x="1133" y="-1264.8" font-family="Helvetica,sans-Serif" font-size="14.00">group_send_endorsement.rs</text>
</g>
<g id="clust29" class="cluster">
<title>cluster_28</title>
<polygon fill="lightblue" stroke="lightblue" points="938.5,-1432 938.5,-2101 1777.5,-2101 1777.5,-1432 938.5,-1432"/>
<text text-anchor="middle" x="1358" y="-2085.8" font-family="Helvetica,sans-Serif" font-size="14.00">server_params.rs</text>
</g>
<g id="clust30" class="cluster">
<title>cluster_29</title>
<polygon fill="lightblue" stroke="lightblue" points="1530.5,-1205 1530.5,-1280 1640.5,-1280 1640.5,-1205 1530.5,-1205"/>
<text text-anchor="middle" x="1585.5" y="-1264.8" font-family="Helvetica,sans-Serif" font-size="14.00">credentials.rs</text>
</g>
<g id="clust31" class="cluster">
<title>cluster_30</title>
<polygon fill="lightblue" stroke="lightblue" points="1897.5,-1462 1897.5,-2023 1975.5,-2023 1975.5,-1462 1897.5,-1462"/>
<text text-anchor="middle" x="1936.5" y="-2007.8" font-family="Helvetica,sans-Serif" font-size="14.00">proofs.rs</text>
</g>
<g id="clust32" class="cluster">
<title>cluster_31</title>
<polygon fill="lightblue" stroke="lightblue" points="1067.5,-577 1067.5,-706 1621,-706 1621,-577 1067.5,-577"/>
<text text-anchor="middle" x="1344.25" y="-690.8" font-family="Helvetica,sans-Serif" font-size="14.00">signature.rs</text>
</g>
<g id="clust33" class="cluster">
<title>cluster_32</title>
<polygon fill="lightblue" stroke="lightblue" points="1354,-4032 1354,-4323 1816,-4323 1816,-4032 1354,-4032"/>
<text text-anchor="middle" x="1585" y="-4307.8" font-family="Helvetica,sans-Serif" font-size="14.00">zkcredential_examples.rs</text>
</g>
<g id="clust34" class="cluster">
<title>cluster_33</title>
<polygon fill="lightblue" stroke="lightblue" points="472.5,-3650 472.5,-3725 755.5,-3725 755.5,-3650 472.5,-3650"/>
<text text-anchor="middle" x="614" y="-3709.8" font-family="Helvetica,sans-Serif" font-size="14.00">backup_auth_flow.rs</text>
</g>
<g id="clust35" class="cluster">
<title>cluster_34</title>
<polygon fill="lightblue" stroke="lightblue" points="932,-2585 932,-2822 1334,-2822 1334,-2585 932,-2585"/>
<text text-anchor="middle" x="1133" y="-2806.8" font-family="Helvetica,sans-Serif" font-size="14.00">call_link_flow.rs</text>
</g>
<g id="clust36" class="cluster">
<title>cluster_35</title>
<polygon fill="lightblue" stroke="lightblue" points="477.5,-797 477.5,-980 750.5,-980 750.5,-797 477.5,-797"/>
<text text-anchor="middle" x="614" y="-964.8" font-family="Helvetica,sans-Serif" font-size="14.00">group_send_endorsements.rs</text>
</g>
<g id="clust37" class="cluster">
<title>cluster_36</title>
<polygon fill="lightblue" stroke="lightblue" points="390.5,-1756 390.5,-1993 837.5,-1993 837.5,-1756 390.5,-1756"/>
<text text-anchor="middle" x="614" y="-1977.8" font-family="Helvetica,sans-Serif" font-size="14.00">integration_tests.rs</text>
</g>
<g id="clust38" class="cluster">
<title>cluster_37</title>
<polygon fill="lightblue" stroke="lightblue" points="520,-988 520,-1117 708,-1117 708,-988 520,-988"/>
<text text-anchor="middle" x="614" y="-1101.8" font-family="Helvetica,sans-Serif" font-size="14.00">receipt_flow.rs</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().</title>
<g id="a_node1"><a xlink:title="pub fn straus_multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint where &#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;I::Item: core::borrow::Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;J::Item: core::borrow::Borrow&lt;...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2783,-2630 2607,-2630 2607,-2594 2783,-2594 2783,-2630"/>
<text text-anchor="middle" x="2695" y="-2608.3" font-family="Helvetica,sans-Serif" font-size="14.00">straus_multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node2"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;EdwardsPoint&gt;, ...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="3027,-2616 2901,-2616 2901,-2580 3027,-2580 3027,-2616"/>
<text text-anchor="middle" x="2964" y="-2594.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="edge155" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2783.06,-2607.44C2817.81,-2605.61 2857.36,-2603.54 2890.52,-2601.8"/>
<polygon fill="gray" stroke="gray" points="2890.78,-2605.29 2900.59,-2601.27 2890.42,-2598.3 2890.78,-2605.29"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity(). -->
<g id="node4" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity().</title>
<g id="a_node4"><a xlink:title=" &#160;&#160;&#160;fn identity() &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X: FieldElement::ZERO, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y: FieldElement::ONE, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Z: FieldElement::ONE, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;T: FieldElement::ZERO, &#160;&#160;&#160;...">
<polygon fill="green" stroke="black" stroke-dasharray="1,5" points="3221.5,-2649 3152.5,-2649 3152.5,-2613 3221.5,-2613 3221.5,-2649"/>
<text text-anchor="middle" x="3187" y="-2627.3" font-family="Helvetica,sans-Serif" font-size="14.00">identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity(). -->
<g id="edge276" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M3027.15,-2607.28C3063.78,-2612.75 3109.25,-2619.54 3142.14,-2624.45"/>
<polygon fill="gray" stroke="gray" points="3141.94,-2627.96 3152.35,-2625.98 3142.98,-2621.04 3141.94,-2627.96"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="node3" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node3"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;EdwardsPoint&gt;, ...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="3250,-2703 3124,-2703 3124,-2667 3250,-2667 3250,-2703"/>
<text text-anchor="middle" x="3187" y="-2681.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul(). -->
<g id="edge257" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M3123.93,-2680.15C3039.48,-2673.34 2892.84,-2660.68 2840,-2651 2814.81,-2646.38 2787.6,-2639.52 2763.68,-2632.82"/>
<polygon fill="gray" stroke="gray" points="2764.57,-2629.44 2754,-2630.07 2762.66,-2636.17 2764.57,-2629.44"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="node5" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node5"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; RistrettoPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;RistrettoPoin...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2758,-2727 2632,-2727 2632,-2691 2758,-2691 2758,-2727"/>
<text text-anchor="middle" x="2695" y="-2705.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge213" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2758.06,-2705.96C2848.75,-2701.52 3017.14,-2693.27 3113.44,-2688.55"/>
<polygon fill="gray" stroke="gray" points="3113.86,-2692.04 3123.67,-2688.05 3113.51,-2685.05 3113.86,-2692.04"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Default]default(). -->
<g id="node6" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Default]default().</title>
<g id="a_node6"><a xlink:title=" &#160;&#160;&#160;fn default() &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RistrettoPoint::identity() &#160;&#160;&#160;&#160;}">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2727.5,-2781 2662.5,-2781 2662.5,-2745 2727.5,-2745 2727.5,-2781"/>
<text text-anchor="middle" x="2695" y="-2759.3" font-family="Helvetica,sans-Serif" font-size="14.00">default</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="node7" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<g id="a_node7"><a xlink:title=" &#160;&#160;&#160;fn identity() &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RistrettoPoint(EdwardsPoint::identity()) &#160;&#160;&#160;&#160;}">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2998.5,-2781 2929.5,-2781 2929.5,-2745 2998.5,-2745 2998.5,-2781"/>
<text text-anchor="middle" x="2964" y="-2759.3" font-family="Helvetica,sans-Serif" font-size="14.00">identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Default]default().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge228" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Default]default().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2727.68,-2763C2775.2,-2763 2865.12,-2763 2919,-2763"/>
<polygon fill="gray" stroke="gray" points="2919.27,-2766.5 2929.27,-2763 2919.27,-2759.5 2919.27,-2766.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity(). -->
<g id="edge289" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2987.43,-2744.82C3016,-2722.29 3067.49,-2683.74 3116,-2658 3124.37,-2653.56 3133.62,-2649.47 3142.6,-2645.88"/>
<polygon fill="gray" stroke="gray" points="3144.09,-2649.05 3152.16,-2642.19 3141.57,-2642.52 3144.09,-2649.05"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Verify(). -->
<g id="node8" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Verify().</title>
<g id="a_node8"><a xlink:title="pub fn Username_Verify( &#160;&#160;&#160;&#160;proof: &amp;[u8], &#160;&#160;&#160;&#160;hash: &amp;[u8], ) &#45;&gt; Result&lt;(), ::usernames::ProofVerificationFailure&gt; { &#160;&#160;&#160;&#160;if hash.len() != 32 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;return Err(::usernames::ProofVerificationFailure);...">
<polygon fill="white" stroke="black" points="1651.5,-52 1518.5,-52 1518.5,-16 1651.5,-16 1651.5,-52"/>
<text text-anchor="middle" x="1585" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">Username_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="node62" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<g id="a_node62"><a xlink:title=" &#160;&#160;&#160;pub fn verify_proof(proof: &amp;[u8], hash: [u8; 32]) &#45;&gt; Result&lt;(), ProofVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let hash_point = CompressedRistretto(hash) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.decompress() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.ok_or(ProofVer...">
<polygon fill="white" stroke="black" points="1985.5,-189 1887.5,-189 1887.5,-153 1985.5,-153 1985.5,-189"/>
<text text-anchor="middle" x="1936.5" y="-167.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="edge86" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1651.59,-31.12C1699.25,-31.5 1764.21,-37.22 1816,-61 1857.39,-80 1894.12,-118.82 1915.6,-144.88"/>
<polygon fill="blue" stroke="blue" points="1913.02,-147.26 1922.02,-152.85 1918.47,-142.87 1913.02,-147.26"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Proof(). -->
<g id="node9" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Proof().</title>
<g id="a_node9"><a xlink:title="pub fn Username_Proof(username: String, randomness: &amp;[u8; 32]) &#45;&gt; Result&lt;Vec&lt;u8&gt;, UsernameError&gt; { &#160;&#160;&#160;&#160;Username::new(&amp;username)?.proof(randomness) }">
<polygon fill="white" stroke="black" points="1649.5,-106 1520.5,-106 1520.5,-70 1649.5,-70 1649.5,-106"/>
<text text-anchor="middle" x="1585" y="-84.3" font-family="Helvetica,sans-Serif" font-size="14.00">Username_Proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="node63" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<g id="a_node63"><a xlink:title=" &#160;&#160;&#160;pub fn proof(&amp;self, randomness: &amp;[u8; 32]) &#45;&gt; Result&lt;Vec&lt;u8&gt;, UsernameError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let hash = Self::hash_from_scalars(&amp;self.scalars); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let scalar_args = Self::make_scalar_args(&amp;self.sca...">
<polygon fill="white" stroke="black" points="1963.5,-243 1909.5,-243 1909.5,-207 1963.5,-207 1963.5,-243"/>
<text text-anchor="middle" x="1936.5" y="-221.3" font-family="Helvetica,sans-Serif" font-size="14.00">proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Proof().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge240" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 usernames/Username_Proof().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1649.62,-86.72C1700.52,-89.09 1770.65,-100.42 1816,-141 1836.01,-158.9 1816.34,-179.72 1836,-198 1853.04,-213.85 1878.44,-220.56 1899.31,-223.33"/>
<polygon fill="blue" stroke="blue" points="1899.12,-226.83 1909.44,-224.43 1899.87,-219.87 1899.12,-226.83"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic(). -->
<g id="node10" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic().</title>
<g id="a_node10"><a xlink:title="fn ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;request: Serialized&lt;ProfileKeyCredential...">
<polygon fill="white" stroke="black" points="858,-2477 370,-2477 370,-2441 858,-2441 858,-2477"/>
<text text-anchor="middle" x="614" y="-2455.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="node130" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<g id="a_node130"><a xlink:title=" &#160;&#160;&#160;pub fn issue_expiring_profile_key_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: &amp;api::profiles::ProfileKeyCredentialRequest, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: libsignal_core::Aci, &#160;&#160;...">
<polygon fill="white" stroke="black" points="1269,-1746 997,-1746 997,-1710 1269,-1710 1269,-1746"/>
<text text-anchor="middle" x="1133" y="-1724.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_expiring_profile_key_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueExpiringProfileKeyCredentialDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.53,-2477C759.73,-2488.02 857.01,-2490.45 912,-2432 963.56,-2377.19 881.64,-1810.92 932,-1755 946.69,-1738.69 966.17,-1728.74 987.21,-1723.02"/>
<polygon fill="blue" stroke="blue" points="988.07,-1726.42 996.98,-1720.69 986.44,-1719.61 988.07,-1726.42"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify(). -->
<g id="node11" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify().</title>
<g id="a_node11"><a xlink:title="fn CallLinkAuthCredentialPresentation_Verify( &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;(), ZkGroupVerificationF...">
<polygon fill="white" stroke="black" points="767,-3287 461,-3287 461,-3251 767,-3251 767,-3287"/>
<text text-anchor="middle" x="614" y="-3265.3" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredentialPresentation_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify(). -->
<g id="node117" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().</title>
<g id="a_node117"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerifi...">
<polygon fill="white" stroke="black" points="1613,-2633 1557,-2633 1557,-2597 1613,-2597 1613,-2633"/>
<text text-anchor="middle" x="1585" y="-2611.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify(). -->
<g id="edge20" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M698.03,-3251C764.96,-3241.78 856.73,-3241.99 912,-3296 967.99,-3350.71 873.59,-3418.88 932,-3471 965.33,-3500.74 1302.04,-3502.2 1334,-3471 1366.97,-3438.82 1322.97,-2676.05 1354,-2642 1402.26,-2589.04 1494.8,-2596.73 1546.57,-2606.3"/>
<polygon fill="blue" stroke="blue" points="1546.18,-2609.79 1556.67,-2608.28 1547.53,-2602.92 1546.18,-2609.79"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds(). -->
<g id="node12" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds().</title>
<g id="a_node12"><a xlink:title="fn GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds( &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;group_members: ServiceIdSequence&lt;&#39;_&gt;, &#160;&#160;&#160;&#160;local_user: ServiceId, &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;group_params: ...">
<polygon fill="white" stroke="black" points="871,-2099 357,-2099 357,-2063 871,-2063 871,-2099"/>
<text text-anchor="middle" x="614" y="-2077.3" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="node128" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<g id="a_node128"><a xlink:title=" &#160;&#160;&#160;pub fn receive_with_service_ids&lt;T&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_ids: T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root_public_key: impl AsRef&lt;zkcredential::endorseme...">
<polygon fill="white" stroke="black" points="1225.5,-1141 1040.5,-1141 1040.5,-1105 1225.5,-1105 1225.5,-1141"/>
<text text-anchor="middle" x="1133" y="-1119.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_with_service_ids</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge25" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithServiceIds().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.31,-2099.05C759.59,-2110.17 857.14,-2112.75 912,-2054 946.28,-2017.28 898.52,-1187.45 932,-1150 956.38,-1122.72 994.16,-1113.2 1030.33,-1111.5"/>
<polygon fill="blue" stroke="blue" points="1030.59,-1114.99 1040.48,-1111.21 1030.39,-1107.99 1030.59,-1114.99"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_VerifySignature(). -->
<g id="node13" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_VerifySignature().</title>
<g id="a_node13"><a xlink:title="fn ServerPublicParams_VerifySignature( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;notary_signature: &amp;[u8; SIGNATURE_LEN], ) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="747.5,-2639 480.5,-2639 480.5,-2603 747.5,-2603 747.5,-2639"/>
<text text-anchor="middle" x="614" y="-2617.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_VerifySignature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature(). -->
<g id="node131" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().</title>
<g id="a_node131"><a xlink:title=" &#160;&#160;&#160;pub fn verify_signature( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature: NotarySignatureBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.sig_public_key.verify(messag...">
<polygon fill="white" stroke="black" points="1197,-1908 1069,-1908 1069,-1872 1197,-1872 1197,-1908"/>
<text text-anchor="middle" x="1133" y="-1886.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_VerifySignature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature(). -->
<g id="edge47" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_VerifySignature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.53,-2639C759.73,-2650.02 857.01,-2652.45 912,-2594 963.56,-2539.19 881.64,-1972.92 932,-1917 962.93,-1882.65 1015.09,-1876.53 1058.39,-1878.67"/>
<polygon fill="blue" stroke="blue" points="1058.42,-1882.18 1068.62,-1879.34 1058.87,-1875.2 1058.42,-1882.18"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic(). -->
<g id="node14" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic().</title>
<g id="a_node14"><a xlink:title="fn CallLinkAuthCredentialResponse_IssueDeterministic( &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;let params = ...">
<polygon fill="white" stroke="black" points="802,-2909 426,-2909 426,-2873 802,-2873 802,-2909"/>
<text text-anchor="middle" x="614" y="-2887.3" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredentialResponse_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="node118" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<g id="a_node118"><a xlink:title=" &#160;&#160;&#160;pub fn issue_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; CallLin...">
<polygon fill="white" stroke="black" points="1649,-2579 1521,-2579 1521,-2543 1649,-2543 1649,-2579"/>
<text text-anchor="middle" x="1585" y="-2557.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="edge51" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M694.62,-2909.03C762.23,-2919.18 856.82,-2920.3 912,-2864 956.13,-2818.97 886.54,-2624.68 932,-2581 1012.72,-2503.43 1357.64,-2533.75 1510.53,-2551.57"/>
<polygon fill="blue" stroke="blue" points="1510.42,-2555.08 1520.76,-2552.78 1511.24,-2548.13 1510.42,-2555.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation(). -->
<g id="node15" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation().</title>
<g id="a_node15"><a xlink:title="fn ServerSecretParams_VerifyProfileKeyCredentialPresentation( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;group_public_params: Serialized&lt;GroupPublicParams&gt;, &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="827.5,-2585 400.5,-2585 400.5,-2549 827.5,-2549 827.5,-2585"/>
<text text-anchor="middle" x="614" y="-2563.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_VerifyProfileKeyCredentialPresentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="node141" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<g id="a_node141"><a xlink:title=" &#160;&#160;&#160;pub fn verify_profile_key_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: api::groups::GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::profiles::AnyProfileKeyCredentialPresenta...">
<polygon fill="white" stroke="black" points="1285.5,-1854 980.5,-1854 980.5,-1818 1285.5,-1818 1285.5,-1854"/>
<text text-anchor="middle" x="1133" y="-1832.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_profile_key_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="edge62" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.53,-2585C759.73,-2596.02 857.01,-2598.45 912,-2540 963.56,-2485.19 881.64,-1918.92 932,-1863 942.67,-1851.15 955.88,-1842.65 970.37,-1836.7"/>
<polygon fill="blue" stroke="blue" points="971.88,-1839.88 980.07,-1833.15 969.48,-1833.3 971.88,-1839.88"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic(). -->
<g id="node16" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic().</title>
<g id="a_node16"><a xlink:title="fn ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;group_secret_params: Serialized&lt;Gr...">
<polygon fill="white" stroke="black" points="884,-3233 344,-3233 344,-3197 884,-3197 884,-3233"/>
<text text-anchor="middle" x="614" y="-3211.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present(). -->
<g id="node96" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present().</title>
<g id="a_node96"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; AnyAuthCredentialPresentat...">
<polygon fill="white" stroke="black" points="1167.5,-3436 1098.5,-3436 1098.5,-3400 1167.5,-3400 1167.5,-3436"/>
<text text-anchor="middle" x="1133" y="-3414.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present(). -->
<g id="edge72" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateAuthCredentialWithPniPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M700.11,-3196.97C766.66,-3188.25 856.86,-3189.17 912,-3242 960.25,-3288.23 884.77,-3343.74 932,-3391 972.44,-3431.47 1042.65,-3431.3 1088.21,-3425.87"/>
<polygon fill="blue" stroke="blue" points="1088.93,-3429.3 1098.38,-3424.52 1088.01,-3422.36 1088.93,-3429.3"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential(). -->
<g id="node17" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential().</title>
<g id="a_node17"><a xlink:title="fn ServerPublicParams_ReceiveExpiringProfileKeyCredential( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;request_context: Serialized&lt;ProfileKeyCredentialRequestContext&gt;, &#160;&#160;&#160;&#160;response: Serialized&lt;...">
<polygon fill="white" stroke="black" points="819,-2423 409,-2423 409,-2387 819,-2387 819,-2423"/>
<text text-anchor="middle" x="614" y="-2401.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_ReceiveExpiringProfileKeyCredential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="node137" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<g id="a_node137"><a xlink:title=" &#160;&#160;&#160;pub fn receive_expiring_profile_key_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;context: &amp;api::profiles::ProfileKeyCredentialRequestContext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: &amp;api::profiles::ExpiringProfileKeyCredentialRe...">
<polygon fill="white" stroke="black" points="1276,-1692 990,-1692 990,-1656 1276,-1656 1276,-1692"/>
<text text-anchor="middle" x="1133" y="-1670.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_expiring_profile_key_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge102" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveExpiringProfileKeyCredential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.53,-2423C759.73,-2434.02 857.01,-2436.45 912,-2378 963.56,-2323.19 881.64,-1756.92 932,-1701 945.03,-1686.53 961.82,-1677.07 980.13,-1671.13"/>
<polygon fill="blue" stroke="blue" points="981.2,-1674.47 989.84,-1668.33 979.26,-1667.74 981.2,-1674.47"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive(). -->
<g id="node18" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive().</title>
<g id="a_node18"><a xlink:title="fn CallLinkAuthCredentialResponse_Receive( &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="764.5,-2855 463.5,-2855 463.5,-2819 764.5,-2819 764.5,-2855"/>
<text text-anchor="middle" x="614" y="-2833.3" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredentialResponse_Receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="node119" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<g id="a_node119"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;CallLinkAuthCredential, ZkGroupV...">
<polygon fill="white" stroke="black" points="1618,-2525 1552,-2525 1552,-2489 1618,-2489 1618,-2525"/>
<text text-anchor="middle" x="1585" y="-2503.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="edge111" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M694.61,-2855.02C762.21,-2865.16 856.8,-2866.28 912,-2810 955.68,-2765.47 887.1,-2573.31 932,-2530 1101.91,-2366.11 1427.34,-2453.84 1542.42,-2492.11"/>
<polygon fill="blue" stroke="blue" points="1541.34,-2495.44 1551.94,-2495.32 1543.58,-2488.81 1541.34,-2495.44"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic(). -->
<g id="node19" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic().</title>
<g id="a_node19"><a xlink:title="fn BackupAuthCredential_PresentDeterministic( &#160;&#160;&#160;&#160;credential_bytes: &amp;[u8], &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="774.5,-3611 453.5,-3611 453.5,-3575 774.5,-3575 774.5,-3611"/>
<text text-anchor="middle" x="614" y="-3589.3" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredential_PresentDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="node116" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<g id="a_node116"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; BackupAuthCredentialPresentation { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BackupAuthCredentialPrese...">
<polygon fill="white" stroke="black" points="1167.5,-3939 1098.5,-3939 1098.5,-3903 1167.5,-3903 1167.5,-3939"/>
<text text-anchor="middle" x="1133" y="-3917.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge119" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M774.54,-3585.13C825.35,-3591.16 877.31,-3607.81 912,-3646 949.17,-3686.93 893.97,-3853.87 932,-3894 971.55,-3935.73 1042.57,-3935.06 1088.46,-3929.2"/>
<polygon fill="blue" stroke="blue" points="1089.01,-3932.65 1098.42,-3927.79 1088.03,-3925.72 1089.01,-3932.65"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse(). -->
<g id="node20" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse().</title>
<g id="a_node20"><a xlink:title="fn CreateCallLinkCredentialRequestContext_ReceiveResponse( &#160;&#160;&#160;&#160;context_bytes: &amp;[u8], &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGroupVerificationFailu...">
<polygon fill="white" stroke="black" points="825.5,-3449 402.5,-3449 402.5,-3413 825.5,-3413 825.5,-3449"/>
<text text-anchor="middle" x="614" y="-3427.3" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialRequestContext_ReceiveResponse</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="node123" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<g id="a_node123"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: CreateCallLinkCredentialResponse, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;CreateCallLinkCr...">
<polygon fill="white" stroke="black" points="1618,-2824 1552,-2824 1552,-2788 1618,-2788 1618,-2824"/>
<text text-anchor="middle" x="1585" y="-2802.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="edge126" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M704.02,-3412.96C769.82,-3405.17 857.15,-3407.31 912,-3458 950.74,-3493.81 891.68,-3540.98 932,-3575 966.14,-3603.8 1301.99,-3606.16 1334,-3575 1363.55,-3546.24 1326.18,-2863.44 1354,-2833 1400.91,-2781.67 1489.43,-2787.37 1541.91,-2796.48"/>
<polygon fill="blue" stroke="blue" points="1541.44,-2799.95 1551.91,-2798.33 1542.71,-2793.07 1541.44,-2799.95"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic(). -->
<g id="node21" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic().</title>
<g id="a_node21"><a xlink:title="fn CreateCallLinkCredential_PresentDeterministic( &#160;&#160;&#160;&#160;credential_bytes: &amp;[u8], &#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: ...">
<polygon fill="white" stroke="black" points="782,-3503 446,-3503 446,-3467 782,-3467 782,-3503"/>
<text text-anchor="middle" x="614" y="-3481.3" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredential_PresentDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present(). -->
<g id="node124" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().</title>
<g id="a_node124"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkSecretParams, &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1619.5,-2932 1550.5,-2932 1550.5,-2896 1619.5,-2896 1619.5,-2932"/>
<text text-anchor="middle" x="1585" y="-2910.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present(). -->
<g id="edge138" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M707.07,-3466.99C772.26,-3459.89 857.46,-3462.89 912,-3512 946.01,-3542.62 896.64,-3583.95 932,-3613 1001.03,-3669.7 1269.86,-3675.18 1334,-3613 1385.56,-3563.01 1308.42,-3022.49 1354,-2967 1398.62,-2912.67 1486.73,-2907.36 1540,-2909.76"/>
<polygon fill="blue" stroke="blue" points="1539.99,-2913.27 1550.17,-2910.34 1540.38,-2906.28 1539.99,-2913.27"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts(). -->
<g id="node22" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts().</title>
<g id="a_node22"><a xlink:title="fn GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts( &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;concatenated_group_member_ciphertexts: &amp;[u8], &#160;&#160;&#160;&#160;local_user_ciphertext: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;...">
<polygon fill="white" stroke="black" points="875,-2153 353,-2153 353,-2117 875,-2117 875,-2153"/>
<text text-anchor="middle" x="614" y="-2131.3" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts(). -->
<g id="node126" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().</title>
<g id="a_node126"><a xlink:title=" &#160;&#160;&#160;pub fn receive_with_ciphertexts( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;member_ciphertexts: impl IntoIterator&lt;Item = UuidCiphertext&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;root_public_key: impl AsRef&lt;zkcredential::endor...">
<polygon fill="white" stroke="black" points="1226.5,-1195 1039.5,-1195 1039.5,-1159 1226.5,-1159 1226.5,-1195"/>
<text text-anchor="middle" x="1133" y="-1173.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_with_ciphertexts</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts(). -->
<g id="edge141" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_ReceiveAndCombineWithCiphertexts().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.31,-2153.05C759.59,-2164.17 857.14,-2166.75 912,-2108 946.28,-2071.28 898.52,-1241.45 932,-1204 956.17,-1176.96 993.5,-1167.37 1029.38,-1165.54"/>
<polygon fill="blue" stroke="blue" points="1029.57,-1169.04 1039.46,-1165.23 1029.35,-1162.04 1029.57,-1169.04"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify(). -->
<g id="node23" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify().</title>
<g id="a_node23"><a xlink:title="fn CreateCallLinkCredentialPresentation_Verify( &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;()...">
<polygon fill="white" stroke="black" points="773,-2963 455,-2963 455,-2927 773,-2927 773,-2963"/>
<text text-anchor="middle" x="614" y="-2941.3" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialPresentation_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify(). -->
<g id="node121" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().</title>
<g id="a_node121"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; ...">
<polygon fill="white" stroke="black" points="1613,-2878 1557,-2878 1557,-2842 1613,-2842 1613,-2878"/>
<text text-anchor="middle" x="1585" y="-2856.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify(). -->
<g id="edge157" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M773.11,-2931.13C1004.03,-2910.87 1419.83,-2874.4 1546.42,-2863.3"/>
<polygon fill="blue" stroke="blue" points="1547.08,-2866.75 1556.74,-2862.39 1546.47,-2859.78 1547.08,-2866.75"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic(). -->
<g id="node24" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic().</title>
<g id="a_node24"><a xlink:title="fn CreateCallLinkCredentialRequest_IssueDeterministic( &#160;&#160;&#160;&#160;request_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;timestamp: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Vec&lt;u8...">
<polygon fill="white" stroke="black" points="802.5,-3395 425.5,-3395 425.5,-3359 802.5,-3359 802.5,-3395"/>
<text text-anchor="middle" x="614" y="-3373.3" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialRequest_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="node122" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<g id="a_node122"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timestamp: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; CreateCal...">
<polygon fill="white" stroke="black" points="1612,-2770 1558,-2770 1558,-2734 1612,-2734 1612,-2770"/>
<text text-anchor="middle" x="1585" y="-2748.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="edge181" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M701.58,-3358.99C767.83,-3350.64 856.91,-3352.05 912,-3404 955.49,-3445.01 886.7,-3498 932,-3537 965.85,-3566.14 1302,-3568.16 1334,-3537 1364.18,-3507.61 1325.59,-2810.1 1354,-2779 1402.7,-2725.68 1496.3,-2733.89 1547.81,-2743.54"/>
<polygon fill="blue" stroke="blue" points="1547.33,-2747.01 1557.82,-2745.53 1548.7,-2740.15 1547.33,-2747.01"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic(). -->
<g id="node25" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic().</title>
<g id="a_node25"><a xlink:title="fn ServerSecretParams_IssueReceiptCredentialDeterministic( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;request: Serialized&lt;ReceiptCredentialRequest&gt;, &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="820.5,-2207 407.5,-2207 407.5,-2171 820.5,-2171 820.5,-2207"/>
<text text-anchor="middle" x="614" y="-2185.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_IssueReceiptCredentialDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="node135" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<g id="a_node135"><a xlink:title=" &#160;&#160;&#160;pub fn issue_receipt_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: &amp;api::receipts::ReceiptCredentialRequest, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_expiration_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1224,-1476 1042,-1476 1042,-1440 1224,-1440 1224,-1476"/>
<text text-anchor="middle" x="1133" y="-1454.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_receipt_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="edge182" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueReceiptCredentialDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.53,-2207C759.73,-2218.02 857.01,-2220.45 912,-2162 963.56,-2107.19 881.64,-1540.92 932,-1485 956.75,-1457.51 995.1,-1448.1 1031.63,-1446.54"/>
<polygon fill="blue" stroke="blue" points="1031.95,-1450.03 1041.87,-1446.3 1031.79,-1443.03 1031.95,-1450.03"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation(). -->
<g id="node26" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation().</title>
<g id="a_node26"><a xlink:title="fn ServerSecretParams_VerifyReceiptCredentialPresentation( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;presentation: Serialized&lt;ReceiptCredentialPresentation&gt;, ) &#45;&gt; Result&lt;(), ZkGroupVerificati...">
<polygon fill="white" stroke="black" points="819,-2693 409,-2693 409,-2657 819,-2657 819,-2693"/>
<text text-anchor="middle" x="614" y="-2671.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_VerifyReceiptCredentialPresentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation(). -->
<g id="node140" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().</title>
<g id="a_node140"><a xlink:title=" &#160;&#160;&#160;pub fn verify_receipt_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::receipts::ReceiptCredentialPresentation, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;present...">
<polygon fill="white" stroke="black" points="1272,-1962 994,-1962 994,-1926 1272,-1926 1272,-1962"/>
<text text-anchor="middle" x="1133" y="-1940.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_receipt_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation(). -->
<g id="edge187" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyReceiptCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.53,-2693C759.73,-2704.02 857.01,-2706.45 912,-2648 963.56,-2593.19 881.64,-2026.92 932,-1971 945.95,-1955.5 964.23,-1945.75 984.06,-1939.92"/>
<polygon fill="blue" stroke="blue" points="985.11,-1943.26 993.91,-1937.36 983.35,-1936.48 985.11,-1943.26"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_SignDeterministic(). -->
<g id="node27" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_SignDeterministic().</title>
<g id="a_node27"><a xlink:title="fn ServerSecretParams_SignDeterministic( &#160;&#160;&#160;&#160;params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;message: &amp;[u8], ) &#45;&gt; [u8; SIGNATURE_LEN] { &#160;&#160;&#160;&#160;params.sign(*randomness, message) }">
<polygon fill="white" stroke="black" points="757,-2747 471,-2747 471,-2711 757,-2711 757,-2747"/>
<text text-anchor="middle" x="614" y="-2725.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_SignDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign(). -->
<g id="node139" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().</title>
<g id="a_node139"><a xlink:title=" &#160;&#160;&#160;pub fn sign(&amp;self, randomness: RandomnessBytes, message: &amp;[u8]) &#45;&gt; NotarySignatureBytes { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b&#39; Signal_ZKGroup_20200424_Random_ServerSecretParams_Sign&#39; , &#160;...">
<polygon fill="white" stroke="black" points="1160,-2016 1106,-2016 1106,-1980 1160,-1980 1160,-2016"/>
<text text-anchor="middle" x="1133" y="-1994.3" font-family="Helvetica,sans-Serif" font-size="14.00">sign</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_SignDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign(). -->
<g id="edge190" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_SignDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.53,-2747C759.73,-2758.02 857.01,-2760.45 912,-2702 963.56,-2647.19 881.64,-2080.92 932,-2025 972.67,-1979.83 1050.07,-1983.48 1095.74,-1990.53"/>
<polygon fill="blue" stroke="blue" points="1095.36,-1994.01 1105.8,-1992.22 1096.52,-1987.11 1095.36,-1994.01"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic(). -->
<g id="node28" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic().</title>
<g id="a_node28"><a xlink:title="fn ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;redemption_time:...">
<polygon fill="white" stroke="black" points="850.5,-3017 377.5,-3017 377.5,-2981 850.5,-2981 850.5,-3017"/>
<text text-anchor="middle" x="614" y="-2995.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="node105" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<g id="a_node105"><a xlink:title=" &#160;&#160;&#160;pub fn issue_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;S...">
<polygon fill="white" stroke="black" points="1197,-3069 1069,-3069 1069,-3033 1197,-3033 1197,-3069"/>
<text text-anchor="middle" x="1133" y="-3047.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="edge194" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_IssueAuthCredentialWithPniZkcDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M819.96,-3017.03C850.82,-3019.91 882.25,-3022.96 912,-3026 961.03,-3031.01 1016.14,-3037.28 1058.93,-3042.28"/>
<polygon fill="blue" stroke="blue" points="1058.64,-3045.77 1068.98,-3043.46 1059.45,-3038.82 1058.64,-3045.77"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId(). -->
<g id="node29" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId().</title>
<g id="a_node29"><a xlink:title="fn ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId( &#160;&#160;&#160;&#160;params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;auth_credential_with_pni_response_bytes:...">
<polygon fill="white" stroke="black" points="840,-3179 388,-3179 388,-3143 840,-3143 840,-3179"/>
<text text-anchor="middle" x="614" y="-3157.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive(). -->
<g id="node95" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive().</title>
<g id="a_node95"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: crate::Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;AuthCredentialWithPni, ZkGr...">
<polygon fill="white" stroke="black" points="1166,-3382 1100,-3382 1100,-3346 1166,-3346 1166,-3382"/>
<text text-anchor="middle" x="1133" y="-3360.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive(). -->
<g id="edge200" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveAuthCredentialWithPniAsServiceId().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M700.39,-3142.99C766.86,-3134.36 856.83,-3135.38 912,-3188 958.76,-3232.59 886.78,-3285.84 932,-3332 972.63,-3373.48 1044.07,-3374.76 1089.66,-3370.45"/>
<polygon fill="blue" stroke="blue" points="1090.24,-3373.9 1099.81,-3369.35 1089.49,-3366.94 1090.24,-3373.9"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic(). -->
<g id="node30" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic().</title>
<g id="a_node30"><a xlink:title="fn CallLinkAuthCredential_PresentDeterministic( &#160;&#160;&#160;&#160;credential_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;ra...">
<polygon fill="white" stroke="black" points="776,-3341 452,-3341 452,-3305 776,-3305 776,-3341"/>
<text text-anchor="middle" x="614" y="-3319.3" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredential_PresentDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present(). -->
<g id="node120" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().</title>
<g id="a_node120"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkSecre...">
<polygon fill="white" stroke="black" points="1619.5,-2687 1550.5,-2687 1550.5,-2651 1619.5,-2651 1619.5,-2687"/>
<text text-anchor="middle" x="1585" y="-2665.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present(). -->
<g id="edge208" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M700.41,-3304.96C766.91,-3296.32 856.88,-3297.33 912,-3350 959.35,-3395.25 882.65,-3452.95 932,-3496 965.66,-3525.36 1302.01,-3527.17 1334,-3496 1364.81,-3465.98 1326.78,-2755.31 1354,-2722 1398.48,-2667.56 1486.64,-2662.28 1539.96,-2664.73"/>
<polygon fill="blue" stroke="blue" points="1539.95,-2668.23 1550.13,-2665.31 1540.35,-2661.24 1539.95,-2668.23"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyAuthCredentialPresentation(). -->
<g id="node31" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyAuthCredentialPresentation().</title>
<g id="a_node31"><a xlink:title="fn ServerSecretParams_VerifyAuthCredentialPresentation( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;group_public_params: Serialized&lt;GroupPublicParams&gt;, &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;curren...">
<polygon fill="white" stroke="black" points="810,-2801 418,-2801 418,-2765 810,-2765 810,-2801"/>
<text text-anchor="middle" x="614" y="-2779.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_VerifyAuthCredentialPresentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation(). -->
<g id="node129" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation().</title>
<g id="a_node129"><a xlink:title=" &#160;&#160;&#160;pub fn verify_auth_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: api::groups::GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::auth::AnyAuthCredentialPresentation, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cur...">
<polygon fill="white" stroke="black" points="1264.5,-2070 1001.5,-2070 1001.5,-2034 1264.5,-2034 1264.5,-2070"/>
<text text-anchor="middle" x="1133" y="-2048.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_auth_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyAuthCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation(). -->
<g id="edge211" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyAuthCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M695.17,-2801.02C762.67,-2811.01 856.78,-2811.89 912,-2756 931.9,-2735.86 925.04,-2529.44 932,-2502 974.96,-2332.63 1076.81,-2146.86 1116.13,-2078.85"/>
<polygon fill="blue" stroke="blue" points="1119.25,-2080.45 1121.25,-2070.04 1113.19,-2076.93 1119.25,-2080.45"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic(). -->
<g id="node32" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic().</title>
<g id="a_node32"><a xlink:title="fn BackupAuthCredentialRequest_IssueDeterministic( &#160;&#160;&#160;&#160;request_bytes: &amp;[u8], &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;backup_level: AsType&lt;BackupLevel, u8&gt;, &#160;&#160;&#160;&#160;credential_type: AsType&lt;BackupCredentialType...">
<polygon fill="white" stroke="black" points="795,-3071 433,-3071 433,-3035 795,-3035 795,-3071"/>
<text text-anchor="middle" x="614" y="-3049.3" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialRequest_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="node107" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<g id="a_node107"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;backup_level: BackupLevel, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_type: BackupCredentialType, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1612,-3777 1558,-3777 1558,-3741 1612,-3741 1612,-3777"/>
<text text-anchor="middle" x="1585" y="-3755.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge222" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M697.45,-3034.99C764.49,-3025.63 856.73,-3025.63 912,-3080 971.27,-3138.31 872.83,-3207.59 932,-3266 995.86,-3329.04 1259.01,-3254.73 1334,-3304 1492.76,-3408.31 1559.56,-3649.27 1578.21,-3731.17"/>
<polygon fill="blue" stroke="blue" points="1574.81,-3731.99 1580.39,-3741 1581.64,-3730.48 1574.81,-3731.99"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse(). -->
<g id="node33" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse().</title>
<g id="a_node33"><a xlink:title="fn BackupAuthCredentialRequestContext_ReceiveResponse( &#160;&#160;&#160;&#160;context_bytes: &amp;[u8], &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;expected_redemption_time: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGro...">
<polygon fill="white" stroke="black" points="818,-3125 410,-3125 410,-3089 818,-3089 818,-3125"/>
<text text-anchor="middle" x="614" y="-3103.3" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialRequestContext_ReceiveResponse</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="node113" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<g id="a_node113"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: BackupAuthCredentialResponse, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expected_redemption_time: Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;BackupAuthCre...">
<polygon fill="white" stroke="black" points="1618,-3831 1552,-3831 1552,-3795 1618,-3795 1618,-3831"/>
<text text-anchor="middle" x="1585" y="-3809.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge225" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M698.94,-3088.96C765.72,-3079.94 856.82,-3080.45 912,-3134 965.01,-3185.45 878.89,-3247.66 932,-3299 996.47,-3361.33 1271.96,-3269.26 1334,-3334 1368.78,-3370.3 1319.77,-3749.19 1354,-3786 1401.23,-3836.79 1489.24,-3831.39 1541.63,-3822.47"/>
<polygon fill="blue" stroke="blue" points="1542.4,-3825.88 1551.61,-3820.65 1541.14,-3819 1542.4,-3825.88"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic(). -->
<g id="node34" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic().</title>
<g id="a_node34"><a xlink:title="fn ServerPublicParams_CreateReceiptCredentialPresentationDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;receipt_credential: Serialized&lt;Receipt...">
<polygon fill="white" stroke="black" points="867,-2261 361,-2261 361,-2225 867,-2225 867,-2261"/>
<text text-anchor="middle" x="614" y="-2239.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateReceiptCredentialPresentationDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="node138" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<g id="a_node138"><a xlink:title=" &#160;&#160;&#160;pub fn create_receipt_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_credential: &amp;api::receipts::ReceiptCredential, &#160;&#160;&#160;&#160;) &#45;&gt; api::receipts::ReceiptCre...">
<polygon fill="white" stroke="black" points="1274,-1530 992,-1530 992,-1494 1274,-1494 1274,-1530"/>
<text text-anchor="middle" x="1133" y="-1508.3" font-family="Helvetica,sans-Serif" font-size="14.00">create_receipt_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="edge246" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateReceiptCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.53,-2261C759.73,-2272.02 857.01,-2274.45 912,-2216 963.56,-2161.19 881.64,-1594.92 932,-1539 945.49,-1524.02 963.01,-1514.41 982.08,-1508.51"/>
<polygon fill="blue" stroke="blue" points="983.15,-1511.85 991.87,-1505.83 981.3,-1505.1 983.15,-1511.85"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify(). -->
<g id="node35" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify().</title>
<g id="a_node35"><a xlink:title="fn BackupAuthCredentialPresentation_Verify( &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;let presentation = binc...">
<polygon fill="white" stroke="black" points="765.5,-3557 462.5,-3557 462.5,-3521 765.5,-3521 765.5,-3557"/>
<text text-anchor="middle" x="614" y="-3535.3" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialPresentation_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="node115" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<g id="a_node115"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let acceptable_start_tim...">
<polygon fill="white" stroke="black" points="1161,-3885 1105,-3885 1105,-3849 1161,-3849 1161,-3885"/>
<text text-anchor="middle" x="1133" y="-3863.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge281" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M694.92,-3520.95C762.49,-3510.87 856.85,-3509.86 912,-3566 954.78,-3609.55 890.17,-3795.53 932,-3840 973.31,-3883.92 1049.46,-3880.99 1094.94,-3874.36"/>
<polygon fill="blue" stroke="blue" points="1095.66,-3877.79 1104.98,-3872.76 1094.56,-3870.87 1095.66,-3877.79"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic(). -->
<g id="node36" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic().</title>
<g id="a_node36"><a xlink:title="fn ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;profile_key: Se...">
<polygon fill="white" stroke="black" points="887,-2369 341,-2369 341,-2333 887,-2333 887,-2369"/>
<text text-anchor="middle" x="614" y="-2347.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="node134" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<g id="a_node134"><a xlink:title=" &#160;&#160;&#160;pub fn create_profile_key_credential_request_context( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;profile_key: api::profiles::ProfileKey, &#160;&#160;&#160;&#160;) &#45;&gt;...">
<polygon fill="white" stroke="black" points="1299.5,-1638 966.5,-1638 966.5,-1602 1299.5,-1602 1299.5,-1638"/>
<text text-anchor="middle" x="1133" y="-1616.3" font-family="Helvetica,sans-Serif" font-size="14.00">create_profile_key_credential_request_context</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge282" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateProfileKeyCredentialRequestContextDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.53,-2369C759.73,-2380.02 857.01,-2382.45 912,-2324 963.56,-2269.19 881.64,-1702.92 932,-1647 939.28,-1638.91 947.75,-1632.39 956.99,-1627.17"/>
<polygon fill="blue" stroke="blue" points="958.75,-1630.2 966.09,-1622.56 955.59,-1623.96 958.75,-1630.2"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential(). -->
<g id="node37" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential().</title>
<g id="a_node37"><a xlink:title="fn ServerPublicParams_ReceiveReceiptCredential( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;request_context: Serialized&lt;ReceiptCredentialRequestContext&gt;, &#160;&#160;&#160;&#160;response: Serialized&lt;ReceiptCredent...">
<polygon fill="white" stroke="black" points="782,-2315 446,-2315 446,-2279 782,-2279 782,-2315"/>
<text text-anchor="middle" x="614" y="-2293.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_ReceiveReceiptCredential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="node136" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<g id="a_node136"><a xlink:title=" &#160;&#160;&#160;pub fn receive_receipt_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;context: &amp;api::receipts::ReceiptCredentialRequestContext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: &amp;api::receipts::ReceiptCredentialResponse, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;api...">
<polygon fill="white" stroke="black" points="1230.5,-1584 1035.5,-1584 1035.5,-1548 1230.5,-1548 1230.5,-1584"/>
<text text-anchor="middle" x="1133" y="-1562.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_receipt_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="edge284" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_ReceiveReceiptCredential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.53,-2315C759.73,-2326.02 857.01,-2328.45 912,-2270 963.56,-2215.19 881.64,-1648.92 932,-1593 955.31,-1567.11 990.69,-1557.26 1025.24,-1554.89"/>
<polygon fill="blue" stroke="blue" points="1025.61,-1558.38 1035.44,-1554.4 1025.28,-1551.39 1025.61,-1558.38"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic(). -->
<g id="node38" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic().</title>
<g id="a_node38"><a xlink:title="fn ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;group_secret_params: Serial...">
<polygon fill="white" stroke="black" points="904,-2531 324,-2531 324,-2495 904,-2495 904,-2531"/>
<text text-anchor="middle" x="614" y="-2509.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="node132" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<g id="a_node132"><a xlink:title=" &#160;&#160;&#160;pub fn create_expiring_profile_key_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: api::groups::GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expiring_profil...">
<polygon fill="white" stroke="black" points="1319.5,-1800 946.5,-1800 946.5,-1764 1319.5,-1764 1319.5,-1800"/>
<text text-anchor="middle" x="1133" y="-1778.3" font-family="Helvetica,sans-Serif" font-size="14.00">create_expiring_profile_key_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="edge312" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M691.53,-2531C759.73,-2542.02 857.01,-2544.45 912,-2486 963.56,-2431.19 881.64,-1864.92 932,-1809 934.03,-1806.74 936.16,-1804.61 938.37,-1802.59"/>
<polygon fill="blue" stroke="blue" points="940.68,-1805.21 946.18,-1796.16 936.23,-1799.81 940.68,-1805.21"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic(). -->
<g id="node39" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic().</title>
<g id="a_node39"><a xlink:title="fn GroupSendEndorsementsResponse_IssueDeterministic( &#160;&#160;&#160;&#160;concatenated_group_member_ciphertexts: &amp;[u8], &#160;&#160;&#160;&#160;key_pair: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;assert!(concatenat...">
<polygon fill="white" stroke="black" points="812,-2045 416,-2045 416,-2009 812,-2009 812,-2045"/>
<text text-anchor="middle" x="614" y="-2023.3" font-family="Helvetica,sans-Serif" font-size="14.00">GroupSendEndorsementsResponse_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="node125" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<g id="a_node125"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;member_ciphertexts: impl IntoIterator&lt;Item = UuidCiphertext&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;GroupSendDerivedKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Note...">
<polygon fill="white" stroke="black" points="1160,-1087 1106,-1087 1106,-1051 1160,-1051 1160,-1087"/>
<text text-anchor="middle" x="1133" y="-1065.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge313" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/GroupSendEndorsementsResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M697.1,-2045C765.09,-2054.58 858.88,-2054.46 912,-1997 945.99,-1960.24 898.63,-1133.33 932,-1096 972.51,-1050.68 1049.96,-1054.39 1095.69,-1061.48"/>
<polygon fill="blue" stroke="blue" points="1095.32,-1064.97 1105.76,-1063.18 1096.48,-1058.07 1095.32,-1064.97"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data(). -->
<g id="node40" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data().</title>
<g id="a_node40"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn test_data() &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receiptCredentialPresentation: zkgroup::serialize(&amp;Self::test_data_presentation()), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;state: proto::gift_badge::State:...">
<polygon fill="white" stroke="black" points="274,-1306 194,-1306 194,-1270 274,-1270 274,-1306"/>
<text text-anchor="middle" x="234" y="-1284.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_data</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation(). -->
<g id="node41" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().</title>
<g id="a_node41"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn test_data_presentation() &#45;&gt; ReceiptCredentialPresentation { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const RANDOMNESS: [u8; RANDOMNESS_LEN] = [33; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let server_params = zkgroup::ServerSecretParams::gene...">
<polygon fill="white" stroke="black" points="701,-1306 527,-1306 527,-1270 701,-1270 701,-1306"/>
<text text-anchor="middle" x="614" y="-1284.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_data_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation(). -->
<g id="edge73" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M274.03,-1288C330.71,-1288 437.63,-1288 516.28,-1288"/>
<polygon fill="blue" stroke="blue" points="516.7,-1291.5 526.7,-1288 516.7,-1284.5 516.7,-1291.5"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="edge80" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M701.25,-1282.57C765.8,-1283.04 852.8,-1293.85 912,-1341 929.76,-1355.14 915.43,-1372.48 932,-1388 959.49,-1413.74 996.98,-1430.09 1032.07,-1440.44"/>
<polygon fill="blue" stroke="blue" points="1031.32,-1443.87 1041.9,-1443.2 1033.22,-1437.13 1031.32,-1443.87"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="edge79" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M701.19,-1277.97C768.58,-1275.34 859.4,-1284.24 912,-1341 942.06,-1373.44 901.26,-1507.21 932,-1539 956,-1563.82 991.15,-1573.53 1025.31,-1576.09"/>
<polygon fill="blue" stroke="blue" points="1025.21,-1579.59 1035.39,-1576.65 1025.59,-1572.6 1025.21,-1579.59"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="edge81" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M701.3,-1278.48C768.31,-1276.25 858.53,-1285.42 912,-1341 956.8,-1387.56 886.22,-1439.4 932,-1485 945.9,-1498.85 963.28,-1507.93 981.97,-1513.66"/>
<polygon fill="blue" stroke="blue" points="981.27,-1517.1 991.84,-1516.37 983.12,-1510.35 981.27,-1517.1"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/gift_badge(). -->
<g id="node42" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/gift_badge().</title>
<g id="a_node42"><a xlink:title=" &#160;&#160;&#160;fn gift_badge(modifier: impl FnOnce(&amp;mut proto::GiftBadge)) &#45;&gt; Result&lt;(), GiftBadgeError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut gift_badge = proto::GiftBadge::test_data(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;modifier(&amp;mut gift_badge); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;G...">
<polygon fill="white" stroke="black" points="125,-1306 36,-1306 36,-1270 125,-1270 125,-1306"/>
<text text-anchor="middle" x="80.5" y="-1284.3" font-family="Helvetica,sans-Serif" font-size="14.00">gift_badge</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/gift_badge().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data(). -->
<g id="edge91" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/gift_badge().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M125.32,-1288C143.61,-1288 164.93,-1288 183.76,-1288"/>
<polygon fill="blue" stroke="blue" points="183.92,-1291.5 193.92,-1288 183.92,-1284.5 183.92,-1291.5"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge(). -->
<g id="node43" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge().</title>
<g id="a_node43"><a xlink:title=" &#160;&#160;&#160;fn valid_gift_badge() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proto::GiftBadge::test_data().try_into(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Ok(GiftBadge::Valid { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_credential_presentation: proto::GiftBadg...">
<polygon fill="white" stroke="black" points="145,-1252 16,-1252 16,-1216 145,-1216 145,-1252"/>
<text text-anchor="middle" x="80.5" y="-1230.3" font-family="Helvetica,sans-Serif" font-size="14.00">valid_gift_badge</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data(). -->
<g id="edge151" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M132.37,-1252.13C149.04,-1258.07 167.52,-1264.66 184.05,-1270.55"/>
<polygon fill="blue" stroke="blue" points="182.93,-1273.87 193.52,-1273.93 185.28,-1267.27 182.93,-1273.87"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation(). -->
<g id="edge150" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/valid_gift_badge().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 backup/chat/gift_badge/test/impl#[`proto::GiftBadge`]test_data_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M145.08,-1240.46C237.31,-1249.83 408.92,-1267.27 516.71,-1278.22"/>
<polygon fill="blue" stroke="blue" points="516.63,-1281.73 526.94,-1279.26 517.34,-1274.76 516.63,-1281.73"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit&lt;Scrambler&gt;`]accept(). -->
<g id="node44" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit&lt;Scrambler&gt;`]accept().</title>
<g id="a_node44"><a xlink:title=" &#160;&#160;&#160;fn accept(&amp;mut self, visitor: &amp;mut Scrambler) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;chatId: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;authorId: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dateSent: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expireStartDate: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expiresInMs:...">
<polygon fill="white" stroke="black" points="265,-1169 203,-1169 203,-1133 265,-1133 265,-1169"/>
<text text-anchor="middle" x="234" y="-1147.3" font-family="Helvetica,sans-Serif" font-size="14.00">accept</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept(). -->
<g id="node46" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().</title>
<g id="a_node46"><a xlink:title=" &#160;&#160;&#160;fn accept(&amp;mut self, visitor: &amp;mut Scrambler) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receiptCredentialPresentation, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;state: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;special_fields: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} = self; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if let...">
<polygon fill="white" stroke="black" points="645,-1169 583,-1169 583,-1133 645,-1133 645,-1169"/>
<text text-anchor="middle" x="614" y="-1147.3" font-family="Helvetica,sans-Serif" font-size="14.00">accept</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept(). -->
<g id="edge16" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M265.29,-1151C332.98,-1151 496.48,-1151 572.67,-1151"/>
<polygon fill="blue" stroke="blue" points="572.82,-1154.5 582.82,-1151 572.82,-1147.5 572.82,-1154.5"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit&lt;Scrambler&gt;`]accept(). -->
<g id="node45" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit&lt;Scrambler&gt;`]accept().</title>
<g id="a_node45"><a xlink:title=" &#160;&#160;&#160;fn accept(&amp;mut self, visitor: &amp;mut Scrambler) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;item, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;special_fields: _, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;} = self; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if let Some(item) = item { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;use proto::fra...">
<polygon fill="white" stroke="black" points="111.5,-1169 49.5,-1169 49.5,-1133 111.5,-1133 111.5,-1169"/>
<text text-anchor="middle" x="80.5" y="-1147.3" font-family="Helvetica,sans-Serif" font-size="14.00">accept</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit&lt;Scrambler&gt;`]accept(). -->
<g id="edge171" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::Frame`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::ChatItem`][`Visit&lt;Scrambler&gt;`]accept().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M111.79,-1151C135.02,-1151 167.29,-1151 192.69,-1151"/>
<polygon fill="blue" stroke="blue" points="192.76,-1154.5 202.76,-1151 192.76,-1147.5 192.76,-1154.5"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="edge262" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M645.21,-1145.94C705.76,-1137.72 842.11,-1129.16 912,-1204 968.15,-1264.12 880.84,-1323.58 932,-1388 956.36,-1418.68 995.06,-1435.94 1031.95,-1445.65"/>
<polygon fill="blue" stroke="blue" points="1031.24,-1449.08 1041.79,-1448.07 1032.92,-1442.28 1031.24,-1449.08"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="edge260" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M645.05,-1145.73C705.92,-1136.97 843.78,-1127.29 912,-1204 961.56,-1259.73 881.27,-1484.34 932,-1539 955.59,-1564.42 990.84,-1574.22 1025.2,-1576.68"/>
<polygon fill="blue" stroke="blue" points="1025.17,-1580.18 1035.34,-1577.2 1025.53,-1573.19 1025.17,-1580.18"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="edge261" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;message&#45;backup 0.1.0 scramble/impl#[`proto::GiftBadge`][`Visit&lt;Scrambler&gt;`]accept().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M645.45,-1145.73C706.42,-1137.11 843.51,-1127.88 912,-1204 953.87,-1250.54 889.15,-1439.36 932,-1485 945.69,-1499.59 963.23,-1509.01 982.21,-1514.85"/>
<polygon fill="blue" stroke="blue" points="981.38,-1518.25 991.94,-1517.5 983.22,-1511.49 981.38,-1518.25"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main(). -->
<g id="node47" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().</title>
<g id="a_node47"><a xlink:title="async fn main() &#45;&gt; anyhow::Result&lt;()&gt; { &#160;&#160;&#160;&#160;env_logger::builder() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.filter_module(module_path!(), log::LevelFilter::Info) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.parse_default_env() &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;.init(); &#160;&#160;&#160;&#160;&#160;let Config { &#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="641,-1717 587,-1717 587,-1681 641,-1681 641,-1717"/>
<text text-anchor="middle" x="614" y="-1695.3" font-family="Helvetica,sans-Serif" font-size="14.00">main</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge274" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M641.35,-1702.36C695.38,-1708.01 821.29,-1714.71 912,-1669 923.8,-1663.05 920.3,-1653.14 932,-1647 939.89,-1642.86 948.18,-1639.27 956.73,-1636.17"/>
<polygon fill="blue" stroke="blue" points="958.12,-1639.4 966.47,-1632.88 955.87,-1632.77 958.12,-1639.4"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge275" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 main().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M641.35,-1697.73C702.89,-1694.75 859.97,-1687.15 979.96,-1681.35"/>
<polygon fill="blue" stroke="blue" points="980.17,-1684.85 989.99,-1680.87 979.83,-1677.85 980.17,-1684.85"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests(). -->
<g id="node48" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests().</title>
<g id="a_node48"><a xlink:title=" &#160;&#160;&#160;async fn test_unsuccessful_requests( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: chat::Response, &#160;&#160;&#160;&#160;) &#45;&gt; RequestError&lt;ProfileKeyCredentialRequestError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let randomness = zkgroup::TEST_ARRAY_32; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let server...">
<polygon fill="white" stroke="black" points="717.5,-1580 510.5,-1580 510.5,-1544 717.5,-1544 717.5,-1580"/>
<text text-anchor="middle" x="614" y="-1558.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_unsuccessful_requests</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge256" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_unsuccessful_requests().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M717.72,-1568.62C775.06,-1573 847.69,-1579.67 912,-1589 920.97,-1590.3 923.06,-1591.5 932,-1593 947.52,-1595.6 963.76,-1598.12 979.98,-1600.5"/>
<polygon fill="blue" stroke="blue" points="979.67,-1603.99 990.07,-1601.97 980.68,-1597.07 979.67,-1603.99"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request(). -->
<g id="node49" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().</title>
<g id="a_node49"><a xlink:title=" &#160;&#160;&#160;async fn test_successful_request() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let randomness = zkgroup::TEST_ARRAY_32; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let server_params = zkgroup::ServerSecretParams::generate(randomness); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let aci = Aci::parse_fr...">
<polygon fill="white" stroke="black" points="705,-1634 523,-1634 523,-1598 705,-1598 705,-1634"/>
<text text-anchor="middle" x="614" y="-1612.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_successful_request</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="edge285" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M705.26,-1613.49C768.12,-1615.93 851.25,-1627.94 912,-1669 925.89,-1678.39 917.91,-1691.9 932,-1701 948.56,-1711.69 967.49,-1718.98 986.97,-1723.86"/>
<polygon fill="blue" stroke="blue" points="986.34,-1727.31 996.87,-1726.13 987.91,-1720.48 986.34,-1727.31"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge286" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M705.05,-1616.7C774.14,-1617.23 871.65,-1617.99 956.05,-1618.64"/>
<polygon fill="blue" stroke="blue" points="956.25,-1622.14 966.27,-1618.72 956.3,-1615.14 956.25,-1622.14"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge287" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;net&#45;chat 0.1.0 ws/profiles/test/test_successful_request().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M705.05,-1626.1C780.76,-1634.6 890.61,-1646.92 979.93,-1656.94"/>
<polygon fill="blue" stroke="blue" points="979.56,-1660.42 989.88,-1658.06 980.34,-1653.46 979.56,-1660.42"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature(). -->
<g id="node50" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().</title>
<g id="a_node50"><a xlink:title="pub fn verify_signature( &#160;&#160;&#160;&#160;signature: &amp;[u8], &#160;&#160;&#160;&#160;public_key: RistrettoPoint, &#160;&#160;&#160;&#160;message: &amp;[u8], ) &#45;&gt; Result&lt;(), PokshoError&gt; { &#160;&#160;&#160;&#160;let mut st = Statement::new(); &#160;&#160;&#160;&#160;st.add(&#39; public_key&#39; , &amp;[(&#39; pri...">
<polygon fill="white" stroke="black" points="2000.5,-454 1872.5,-454 1872.5,-418 2000.5,-418 2000.5,-454"/>
<text text-anchor="middle" x="1936.5" y="-432.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="node54" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<g id="a_node54"><a xlink:title=" &#160;&#160;&#160;pub fn verify_proof( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof_bytes: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_args: &amp;PointArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), PokshoError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let proof = Proof::from_slice(pro...">
<polygon fill="white" stroke="black" points="2744,-1423 2646,-1423 2646,-1387 2744,-1387 2744,-1423"/>
<text text-anchor="middle" x="2695" y="-1401.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge204" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2000.93,-445.31C2011.4,-449.31 2021.33,-454.98 2029,-463 2064.77,-500.38 2030.08,-531.81 2057,-576 2211.01,-828.85 2392.45,-769.56 2558,-1015 2639.26,-1135.48 2677.09,-1309.61 2689.33,-1376.95"/>
<polygon fill="blue" stroke="blue" points="2685.89,-1377.58 2691.08,-1386.82 2692.78,-1376.36 2685.89,-1377.58"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature(). -->
<g id="node51" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().</title>
<g id="a_node51"><a xlink:title=" &#160;&#160;&#160;fn test_signature() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block64 = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block32 = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block100 = [0u8; 100]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..32 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;block32[i] = i as u8; &#160;&#160;...">
<polygon fill="white" stroke="black" points="1642.5,-482 1527.5,-482 1527.5,-446 1642.5,-446 1642.5,-482"/>
<text text-anchor="middle" x="1585" y="-460.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature(). -->
<g id="edge230" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1642.54,-459.47C1702.23,-454.69 1796.57,-447.13 1861.99,-441.89"/>
<polygon fill="blue" stroke="blue" points="1862.55,-445.36 1872.24,-441.07 1861.99,-438.38 1862.55,-445.36"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/sign(). -->
<g id="node52" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/sign().</title>
<g id="a_node52"><a xlink:title="pub fn sign( &#160;&#160;&#160;&#160;private_key: Scalar, &#160;&#160;&#160;&#160;public_key: RistrettoPoint, &#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, PokshoError&gt; { &#160;&#160;&#160;&#160;let mut st = Statement::new(); &#160;&#160;&#160;&#160;st.add(&#39; pub...">
<polygon fill="white" stroke="black" points="1963.5,-508 1909.5,-508 1909.5,-472 1963.5,-472 1963.5,-508"/>
<text text-anchor="middle" x="1936.5" y="-486.3" font-family="Helvetica,sans-Serif" font-size="14.00">sign</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/sign(). -->
<g id="edge229" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1642.54,-468.21C1714.9,-473.59 1838.15,-482.76 1899.12,-487.29"/>
<polygon fill="blue" stroke="blue" points="1899.18,-490.81 1909.41,-488.06 1899.7,-483.83 1899.18,-490.81"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="node55" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<g id="a_node55"><a xlink:title=" &#160;&#160;&#160;pub fn prove( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;scalar_args: &amp;ScalarArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;point_args: &amp;PointArgs, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: &amp;[u8], // must be 32 bytes &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Vec&lt;u8&gt;, Poksh...">
<polygon fill="white" stroke="black" points="2335.5,-1423 2279.5,-1423 2279.5,-1387 2335.5,-1387 2335.5,-1423"/>
<text text-anchor="middle" x="2307.5" y="-1401.3" font-family="Helvetica,sans-Serif" font-size="14.00">prove</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 sign/sign().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge233" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 sign/sign().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1944.87,-508.28C1990.95,-622.54 2239.27,-1238.29 2295.27,-1377.16"/>
<polygon fill="blue" stroke="blue" points="2292.13,-1378.71 2299.11,-1386.68 2298.62,-1376.1 2292.13,-1378.71"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement(). -->
<g id="node53" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().</title>
<g id="a_node53"><a xlink:title=" &#160;&#160;&#160;fn test_complex_statement() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block32 = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block64a = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block64b = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut block64c = [0u8; 64]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut...">
<polygon fill="white" stroke="black" points="2029,-1413 1844,-1413 1844,-1377 2029,-1377 2029,-1413"/>
<text text-anchor="middle" x="1936.5" y="-1391.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_complex_statement</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge128" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2029.03,-1380.64C2038.45,-1379.56 2047.91,-1378.64 2057,-1378 2279.11,-1362.28 2336.4,-1356.22 2558,-1378 2583.78,-1380.53 2611.92,-1385.71 2635.88,-1390.86"/>
<polygon fill="blue" stroke="blue" points="2635.36,-1394.33 2645.88,-1393.05 2636.86,-1387.49 2635.36,-1394.33"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge129" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/tests/test_complex_statement().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2029.19,-1397.48C2106.59,-1399.58 2213.46,-1402.48 2269.23,-1403.99"/>
<polygon fill="blue" stroke="blue" points="2269.26,-1407.49 2279.35,-1404.26 2269.45,-1400.49 2269.26,-1407.49"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="node56" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<g id="a_node56"><a xlink:title=" &#160;&#160;&#160;fn homomorphism_with_subtraction( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;g1: &amp;[Scalar], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;all_points: &amp;[RistrettoPoint], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;challenge: Option&lt;Scalar&gt;, &#160;&#160;&#160;&#160;) &#45;&gt; G2 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.equations &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;....">
<polygon fill="white" stroke="black" points="3088,-1423 2840,-1423 2840,-1387 3088,-1387 3088,-1423"/>
<text text-anchor="middle" x="2964" y="-1401.3" font-family="Helvetica,sans-Serif" font-size="14.00">homomorphism_with_subtraction</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="edge207" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2744.04,-1405C2768.19,-1405 2798.77,-1405 2829.36,-1405"/>
<polygon fill="blue" stroke="blue" points="2829.72,-1408.5 2839.72,-1405 2829.72,-1401.5 2829.72,-1408.5"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge236" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2335.61,-1405C2397.63,-1405 2551.04,-1405 2635.65,-1405"/>
<polygon fill="blue" stroke="blue" points="2635.87,-1408.5 2645.87,-1405 2635.87,-1401.5 2635.87,-1408.5"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="edge237" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2335.56,-1400.85C2411.07,-1389.86 2630.41,-1361.89 2812,-1378 2829.91,-1379.59 2848.87,-1382.22 2867.08,-1385.22"/>
<polygon fill="blue" stroke="blue" points="2866.67,-1388.7 2877.11,-1386.93 2867.84,-1381.8 2866.67,-1388.7"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge303" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="blue" d="M2961.34,-1423.46C2947.59,-1575.27 2852.25,-2613.54 2812,-2665 2800.96,-2679.11 2784.85,-2688.7 2768.13,-2695.21"/>
<polygon fill="blue" stroke="blue" points="2766.51,-2692.07 2758.25,-2698.7 2768.84,-2698.67 2766.51,-2692.07"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 bench_usernames(). -->
<g id="node57" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().</title>
<g id="a_node57"><a xlink:title="fn bench_usernames(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let mut rng = OsRng.unwrap_err(); &#160;&#160;&#160;&#160;let usernames = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Username::candidates_from(&amp;mut rng, &#39; signal&#39; , NicknameLimits::default()).unwrap(); &#160;&#160;&#160;&#160;&#160;let ...">
<polygon fill="white" stroke="black" points="1204.5,-326 1061.5,-326 1061.5,-290 1204.5,-290 1204.5,-326"/>
<text text-anchor="middle" x="1133" y="-304.3" font-family="Helvetica,sans-Serif" font-size="14.00">bench_usernames</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username_proof(). -->
<g id="node59" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username_proof().</title>
<g id="a_node59"><a xlink:title="pub fn username_proof(username: &amp;str, randomness: &amp;[u8; 32]) &#45;&gt; Result&lt;Vec&lt;u8&gt;, UsernameError&gt; { &#160;&#160;&#160;&#160;Username::new(username)?.proof(randomness) }">
<polygon fill="white" stroke="black" points="1649,-326 1521,-326 1521,-290 1649,-290 1649,-326"/>
<text text-anchor="middle" x="1585" y="-304.3" font-family="Helvetica,sans-Serif" font-size="14.00">username_proof</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username_proof(). -->
<g id="edge154" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1204.81,-308C1288.29,-308 1426.34,-308 1510.84,-308"/>
<polygon fill="blue" stroke="blue" points="1510.87,-311.5 1520.87,-308 1510.87,-304.5 1510.87,-311.5"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="edge153" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1204.64,-318.9C1247.69,-324.98 1303.88,-331.94 1354,-335 1456.48,-341.26 1738.34,-402.15 1816,-335 1862.55,-294.75 1795.18,-244.04 1836,-198 1846.57,-186.08 1861.82,-179.18 1877.21,-175.26"/>
<polygon fill="blue" stroke="blue" points="1878.26,-178.62 1887.3,-173.09 1876.79,-171.77 1878.26,-178.62"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge152" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1185.21,-326.14C1229.29,-340.74 1294.95,-360.09 1354,-368 1455.76,-381.63 1723,-411.48 1816,-368 1867.03,-344.14 1903.93,-286.58 1922.31,-252.2"/>
<polygon fill="blue" stroke="blue" points="1925.5,-253.66 1927,-243.17 1919.29,-250.43 1925.5,-253.66"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 benches(). -->
<g id="node58" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 benches().</title>
<g id="a_node58"><a xlink:title="criterion_group!(benches, bench_usernames); criterion_main!(benches);">
<polygon fill="white" stroke="black" points="651.5,-326 576.5,-326 576.5,-290 651.5,-290 651.5,-326"/>
<text text-anchor="middle" x="614" y="-304.3" font-family="Helvetica,sans-Serif" font-size="14.00">benches</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 bench_usernames(). -->
<g id="edge188" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 bench_usernames().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M651.77,-308C734.62,-308 937.55,-308 1051.32,-308"/>
<polygon fill="blue" stroke="blue" points="1051.37,-311.5 1061.37,-308 1051.37,-304.5 1051.37,-311.5"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username_proof().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge245" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username_proof().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1649.46,-304.64C1696.2,-300.99 1760.94,-293.45 1816,-278 1845.38,-269.75 1876.87,-255.55 1900.14,-243.92"/>
<polygon fill="blue" stroke="blue" points="1901.94,-246.93 1909.27,-239.28 1898.77,-240.69 1901.94,-246.93"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames(). -->
<g id="node60" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().</title>
<g id="a_node60"><a xlink:title=" &#160;&#160;&#160;fn many_random_makes_valid_usernames() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut rng = rand::rng(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let randomness = std::array::from_fn(|i| (i + 1).try_into().unwrap()); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let nickname = &#39; _SiGNA1&#39; ; &#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1730.5,-189 1439.5,-189 1439.5,-153 1730.5,-153 1730.5,-189"/>
<text text-anchor="middle" x="1585" y="-167.3" font-family="Helvetica,sans-Serif" font-size="14.00">many_random_makes_valid_usernames</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="edge53" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1730.68,-171C1782.16,-171 1837.23,-171 1877.29,-171"/>
<polygon fill="blue" stroke="blue" points="1877.39,-174.5 1887.39,-171 1877.39,-167.5 1877.39,-174.5"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge52" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/many_random_makes_valid_usernames().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1730.8,-185.64C1759.13,-189.17 1788.56,-193.3 1816,-198 1844.12,-202.81 1875.59,-210 1899.17,-215.74"/>
<polygon fill="blue" stroke="blue" points="1898.53,-219.19 1909.08,-218.19 1900.21,-212.4 1898.53,-219.19"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify(). -->
<g id="node61" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().</title>
<g id="a_node61"><a xlink:title=" &#160;&#160;&#160;fn valid_usernames_proof_and_verify() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proptest!(|(nickname in NICKNAME_PATTERN, discriminator in 1..DISCRIMINATOR_MAX)| { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let username = Username::new(&amp;Username::format_parts...">
<polygon fill="white" stroke="black" points="1712,-243 1458,-243 1458,-207 1712,-207 1712,-243"/>
<text text-anchor="middle" x="1585" y="-221.3" font-family="Helvetica,sans-Serif" font-size="14.00">valid_usernames_proof_and_verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof(). -->
<g id="edge98" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1712.28,-212.6C1746.08,-208.62 1782.51,-203.73 1816,-198 1836.17,-194.55 1858.07,-189.87 1877.53,-185.39"/>
<polygon fill="blue" stroke="blue" points="1878.53,-188.75 1887.47,-183.07 1876.94,-181.93 1878.53,-188.75"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof(). -->
<g id="edge99" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_usernames_proof_and_verify().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1712.18,-225C1778.47,-225 1854.89,-225 1898.96,-225"/>
<polygon fill="blue" stroke="blue" points="1899.18,-228.5 1909.18,-225 1899.18,-221.5 1899.18,-228.5"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge224" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]verify_proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1985.65,-181.96C1999.97,-186.07 2015.45,-191.39 2029,-198 2288.73,-324.65 2405.37,-330.63 2558,-576 2644.46,-714.99 2683.86,-1247.55 2692.25,-1376.68"/>
<polygon fill="blue" stroke="blue" points="2688.78,-1377.16 2692.91,-1386.92 2695.76,-1376.72 2688.78,-1377.16"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge295" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]proof().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1949.09,-243.21C1968.74,-274.96 2008.45,-343.07 2029,-406 2052.77,-478.79 2039.71,-501.4 2057,-576 2131.15,-895.89 2260.46,-1273.56 2296.77,-1377.4"/>
<polygon fill="blue" stroke="blue" points="2293.47,-1378.58 2300.08,-1386.86 2300.08,-1376.26 2293.47,-1378.58"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow(). -->
<g id="node64" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().</title>
<g id="a_node64"><a xlink:title="fn endorsement_flow(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let mut group = c.benchmark_group(&#39; endorsements&#39; ); &#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;let inputs: Vec&lt;RistrettoPoint&gt; = (0.....">
<polygon fill="white" stroke="black" points="1205,-758 1061,-758 1061,-722 1205,-722 1205,-758"/>
<text text-anchor="middle" x="1133" y="-736.3" font-family="Helvetica,sans-Serif" font-size="14.00">endorsement_flow</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="node71" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<g id="a_node71"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hidden_attribute_points: impl IntoIterator&lt;Item = RistrettoPoint&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;private_key: &amp;ServerDerivedKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; EndorsementR...">
<polygon fill="white" stroke="black" points="1612,-950 1558,-950 1558,-914 1612,-914 1612,-950"/>
<text text-anchor="middle" x="1585" y="-928.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge139" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1205.24,-754.83C1244.05,-763.99 1292.48,-777.22 1334,-794 1414.53,-826.54 1501.94,-879.18 1549.08,-909.17"/>
<polygon fill="blue" stroke="blue" points="1547.37,-912.23 1557.68,-914.67 1551.14,-906.33 1547.37,-912.23"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="node72" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<g id="a_node72"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hidden_attribute_points: impl IntoIterator&lt;Item = RistrettoPoint&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_public_key: &amp;ServerDerivedPublicKey, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;ReceivedEndorsements, V...">
<polygon fill="white" stroke="black" points="1618,-1004 1552,-1004 1552,-968 1618,-968 1618,-1004"/>
<text text-anchor="middle" x="1585" y="-982.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge140" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1205.47,-740.28C1249.13,-744.49 1302.44,-757.57 1334,-794 1382.37,-849.83 1301.67,-906.86 1354,-959 1403,-1007.81 1490.01,-1003.22 1541.81,-994.95"/>
<polygon fill="blue" stroke="blue" points="1542.42,-998.39 1551.68,-993.26 1541.24,-991.49 1542.42,-998.39"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 benches(). -->
<g id="node65" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 benches().</title>
<g id="a_node65"><a xlink:title="criterion_group!(benches, endorsement_flow, key_derivation); criterion_main!(benches);">
<polygon fill="white" stroke="black" points="651.5,-758 576.5,-758 576.5,-722 651.5,-722 651.5,-758"/>
<text text-anchor="middle" x="614" y="-736.3" font-family="Helvetica,sans-Serif" font-size="14.00">benches</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow(). -->
<g id="edge142" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 benches().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsement_flow().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M651.77,-740C734.51,-740 937,-740 1050.85,-740"/>
<polygon fill="blue" stroke="blue" points="1050.92,-743.5 1060.92,-740 1050.92,-736.5 1050.92,-743.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 attributes/tests/derive_default_generator_points_checks_for_reuse_in_debug_builds(). -->
<g id="node66" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 attributes/tests/derive_default_generator_points_checks_for_reuse_in_debug_builds().</title>
<g id="a_node66"><a xlink:title=" &#160;&#160;&#160;fn derive_default_generator_points_checks_for_reuse_in_debug_builds() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let storage = std::sync::OnceLock::from([RistrettoPoint::default(); 2]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;derive_default_generator_points::&lt;E...">
<polygon fill="white" stroke="black" points="2550,-3114 2065,-3114 2065,-3078 2550,-3078 2550,-3114"/>
<text text-anchor="middle" x="2307.5" y="-3092.3" font-family="Helvetica,sans-Serif" font-size="14.00">derive_default_generator_points_checks_for_reuse_in_debug_builds</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 attributes/tests/derive_default_generator_points_checks_for_reuse_in_debug_builds().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Default]default(). -->
<g id="edge149" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 attributes/tests/derive_default_generator_points_checks_for_reuse_in_debug_builds().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Default]default().</title>
<path fill="none" stroke="blue" d="M2535.48,-3077.95C2543.35,-3073.89 2550.89,-3069.26 2558,-3064 2569.94,-3055.16 2651.68,-2863.35 2682.38,-2790.63"/>
<polygon fill="blue" stroke="blue" points="2685.7,-2791.76 2686.36,-2781.18 2679.25,-2789.04 2685.7,-2791.76"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements(). -->
<g id="node67" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().</title>
<g id="a_node67"><a xlink:title=" &#160;&#160;&#160;fn combining_endorsements() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let root_key = ServerRootKeyPair::generate([42; RANDOMNESS_LEN]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Client &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;l...">
<polygon fill="white" stroke="black" points="1231,-1004 1035,-1004 1035,-968 1231,-968 1231,-1004"/>
<text text-anchor="middle" x="1133" y="-982.3" font-family="Helvetica,sans-Serif" font-size="14.00">combining_endorsements</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge49" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1231.18,-973.96C1269.45,-969.25 1313.79,-963.83 1354,-959 1422.51,-950.77 1502.54,-941.44 1547.85,-936.18"/>
<polygon fill="blue" stroke="blue" points="1548.25,-939.66 1557.78,-935.03 1547.44,-932.71 1548.25,-939.66"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge48" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/combining_endorsements().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1231.09,-986C1327.55,-986 1470.98,-986 1541.59,-986"/>
<polygon fill="blue" stroke="blue" points="1541.87,-989.5 1551.87,-986 1541.87,-982.5 1541.87,-989.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow(). -->
<g id="node68" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().</title>
<g id="a_node68"><a xlink:title=" &#160;&#160;&#160;fn default_flow() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let root_key = ServerRootKeyPair::generate([42; RANDOMNESS_LEN]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Client &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let client_...">
<polygon fill="white" stroke="black" points="1183.5,-950 1082.5,-950 1082.5,-914 1183.5,-914 1183.5,-950"/>
<text text-anchor="middle" x="1133" y="-928.3" font-family="Helvetica,sans-Serif" font-size="14.00">default_flow</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge122" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1183.88,-932C1275.31,-932 1467.72,-932 1547.81,-932"/>
<polygon fill="blue" stroke="blue" points="1547.9,-935.5 1557.9,-932 1547.9,-928.5 1547.9,-935.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge121" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_flow().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1183.79,-938.19C1228.38,-943.71 1295.54,-951.98 1354,-959 1419.55,-966.87 1495.64,-975.75 1541.78,-981.11"/>
<polygon fill="blue" stroke="blue" points="1541.66,-984.62 1551.99,-982.3 1542.47,-977.67 1541.66,-984.62"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity(). -->
<g id="node69" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().</title>
<g id="a_node69"><a xlink:title=" &#160;&#160;&#160;fn default_is_identity() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(Endorsement::combine([]).R, Endorsement::default().R); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut input_sho = poksho::ShoSha256::new(b&#39; test&#39; ); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let root_key = ServerRo...">
<polygon fill="white" stroke="black" points="1204.5,-896 1061.5,-896 1061.5,-860 1204.5,-860 1204.5,-896"/>
<text text-anchor="middle" x="1133" y="-874.3" font-family="Helvetica,sans-Serif" font-size="14.00">default_is_identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge144" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1204.81,-886.5C1302,-898.16 1473.16,-918.7 1547.66,-927.64"/>
<polygon fill="blue" stroke="blue" points="1547.58,-931.15 1557.93,-928.87 1548.41,-924.2 1547.58,-931.15"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge143" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/default_is_identity().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1204.86,-870.51C1246.64,-869.92 1298.17,-876.31 1334,-905 1353.98,-921 1333.88,-943.18 1354,-959 1407.69,-1001.23 1491.43,-999.3 1541.68,-993.22"/>
<polygon fill="blue" stroke="blue" points="1542.42,-996.65 1551.87,-991.88 1541.5,-989.71 1542.42,-996.65"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip(). -->
<g id="node70" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().</title>
<g id="a_node70"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn round_trip&lt;T: Serialize + for&lt;&#39;a&gt; Deserialize&lt;&#39;a&gt; + PartialDefault&gt;( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;value: &amp;T, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expected_len: usize, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let bincode_options = bincode::DefaultOp...">
<polygon fill="white" stroke="black" points="1177,-842 1089,-842 1089,-806 1177,-806 1177,-842"/>
<text text-anchor="middle" x="1133" y="-820.3" font-family="Helvetica,sans-Serif" font-size="14.00">round_trip</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge198" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1177.31,-827.59C1218.1,-831.5 1280.7,-838.87 1334,-851 1411.87,-868.72 1500.14,-900.08 1548.18,-918.14"/>
<polygon fill="blue" stroke="blue" points="1547.21,-921.52 1557.8,-921.78 1549.68,-914.97 1547.21,-921.52"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge199" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/tests/round_trip().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1177.22,-816.55C1222.44,-811.44 1292.51,-811.5 1334,-851 1369.35,-884.66 1318.36,-925.64 1354,-959 1404.26,-1006.03 1490.16,-1002.23 1541.56,-994.56"/>
<polygon fill="blue" stroke="blue" points="1542.35,-997.97 1551.66,-992.93 1541.23,-991.06 1542.35,-997.97"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge247" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="blue" d="M1612.03,-933.15C1744.6,-940.61 2346.7,-994.08 2558,-1355 2594.78,-1417.82 2544.74,-2605.03 2586,-2665 2594.85,-2677.86 2608.17,-2686.97 2622.46,-2693.41"/>
<polygon fill="blue" stroke="blue" points="2621.37,-2696.75 2631.95,-2697.28 2624.01,-2690.26 2621.37,-2696.75"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge248" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1612.23,-926.4C1659.35,-918 1758.77,-908.1 1816,-959 1844.68,-984.51 1815.15,-1010.78 1836,-1043 1950.13,-1219.36 2180.78,-1344.36 2270.06,-1387.99"/>
<polygon fill="blue" stroke="blue" points="2268.71,-1391.23 2279.24,-1392.44 2271.76,-1384.93 2268.71,-1391.23"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge288" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1618.14,-1004.05C1671.05,-1035.86 1774.78,-1107.47 1816,-1201 1836.13,-1246.68 1800.51,-2962.9 1836,-2998 1864.52,-3026.2 2528.7,-3025.39 2558,-2998 2591.84,-2966.36 2582.33,-2628.18 2586,-2582 2622.51,-2122.9 2678.01,-1564.12 2691.15,-1433.32"/>
<polygon fill="blue" stroke="blue" points="2694.63,-1433.62 2692.15,-1423.32 2687.67,-1432.92 2694.63,-1433.62"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs(). -->
<g id="node73" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs().</title>
<g id="a_node73"><a xlink:title=" &#160;&#160;&#160;fn finalize_public_attrs(&amp;mut self) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert!(self.attr_points[0] == RistrettoPoint::identity()); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.attr_points[0] = self.public_attrs.get_point(); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2384.5,-3224 2230.5,-3224 2230.5,-3188 2384.5,-3188 2384.5,-3224"/>
<text text-anchor="middle" x="2307.5" y="-3202.3" font-family="Helvetica,sans-Serif" font-size="14.00">finalize_public_attrs</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge50" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M2384.51,-3199.29C2435.95,-3192.26 2504.08,-3177.97 2558,-3149 2735.24,-3053.78 2890.81,-2859.93 2943.74,-2789.41"/>
<polygon fill="blue" stroke="blue" points="2946.8,-2791.16 2949.96,-2781.05 2941.18,-2786.98 2946.8,-2791.16"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="node74" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<g id="a_node74"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Even though it would work with a borrow, this deliberately consumes &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// IssuanceProof to indicate that ...">
<polygon fill="white" stroke="black" points="1964.5,-3251 1908.5,-3251 1908.5,-3215 1964.5,-3215 1964.5,-3251"/>
<text text-anchor="middle" x="1936.5" y="-3229.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge101" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.63,-3232.21C1985.22,-3230.12 2012.68,-3223.85 2029,-3206 2071.82,-3159.17 2009.57,-3108.15 2057,-3066 2140.48,-2991.81 2479.69,-3105.63 2558,-3026 2592.66,-2990.76 2582.19,-2631.28 2586,-2582 2621.54,-2122.82 2677.78,-1564.1 2691.1,-1433.32"/>
<polygon fill="blue" stroke="blue" points="2694.59,-1433.62 2692.12,-1423.31 2687.62,-1432.91 2694.59,-1433.62"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs(). -->
<g id="edge100" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.63,-3231.01C2017.76,-3227.13 2137.51,-3218.37 2220.17,-3212.32"/>
<polygon fill="blue" stroke="blue" points="2220.59,-3215.8 2230.31,-3211.57 2220.08,-3208.81 2220.59,-3215.8"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="node75" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<g id="a_node75"><a xlink:title=" &#160;&#160;&#160;pub fn with_authenticated_message(label: &amp;[u8], message: &amp;&#39;a [u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_attrs: ShoHmacSha256::new(label), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Reserve the first point for public a...">
<polygon fill="white" stroke="black" points="2416.5,-3291 2198.5,-3291 2198.5,-3255 2416.5,-3255 2416.5,-3291"/>
<text text-anchor="middle" x="2307.5" y="-3269.3" font-family="Helvetica,sans-Serif" font-size="14.00">with_authenticated_message</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge212" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M2416.72,-3266.5C2461.69,-3261.06 2513.63,-3251.12 2558,-3233 2686.09,-3180.69 2721.06,-3157.28 2812,-3053 2884.55,-2969.81 2934.01,-2845.66 2953.6,-2790.79"/>
<polygon fill="blue" stroke="blue" points="2957,-2791.67 2957.01,-2781.07 2950.39,-2789.35 2957,-2791.67"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="node76" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<g id="a_node76"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; IssuanceProof { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.finalize_public_attrs(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho ...">
<polygon fill="white" stroke="black" points="1963.5,-3305 1909.5,-3305 1909.5,-3269 1963.5,-3269 1963.5,-3305"/>
<text text-anchor="middle" x="1936.5" y="-3283.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge294" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.57,-3286.91C1984.7,-3285.31 2013.44,-3279.37 2029,-3260 2056.84,-3225.36 2051.68,-2905.12 2057,-2861 2126.8,-2281.6 2269.65,-1581.82 2300.53,-1433.47"/>
<polygon fill="blue" stroke="blue" points="2304.02,-1433.89 2302.63,-1423.38 2297.17,-1432.46 2304.02,-1433.89"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs(). -->
<g id="edge293" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.55,-3280.63C1982.08,-3275.78 2007.43,-3268.5 2029,-3260 2041.94,-3254.9 2043.76,-3250.26 2057,-3246 2109.83,-3229 2171.37,-3219.04 2220.11,-3213.3"/>
<polygon fill="blue" stroke="blue" points="2220.77,-3216.75 2230.31,-3212.14 2219.98,-3209.79 2220.77,-3216.75"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="node77" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<g id="a_node77"><a xlink:title=" &#160;&#160;&#160;pub fn new(label: &amp;[u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::with_authenticated_message(label, &amp;[]) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1963.5,-3197 1909.5,-3197 1909.5,-3161 1963.5,-3161 1963.5,-3197"/>
<text text-anchor="middle" x="1936.5" y="-3175.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge314" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.68,-3183.26C1982.74,-3187.16 2008.67,-3194.17 2029,-3206 2043.94,-3214.7 2041.53,-3225.28 2057,-3233 2097.24,-3253.09 2145.26,-3263.5 2188.37,-3268.77"/>
<polygon fill="blue" stroke="blue" points="2188.02,-3272.25 2198.36,-3269.91 2188.82,-3265.3 2188.02,-3272.25"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="node78" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<g id="a_node78"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;blinding_key: &amp;BlindingPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; BlindedIssuanceProof { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;se...">
<polygon fill="white" stroke="black" points="1963.5,-2909 1909.5,-2909 1909.5,-2873 1963.5,-2873 1963.5,-2909"/>
<text text-anchor="middle" x="1936.5" y="-2887.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge5" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1942.03,-2872.75C1980.51,-2717.78 2252.21,-1623.65 2299.49,-1433.23"/>
<polygon fill="blue" stroke="blue" points="2302.92,-1433.96 2301.93,-1423.41 2296.12,-1432.27 2302.92,-1433.96"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs(). -->
<g id="node79" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs().</title>
<g id="a_node79"><a xlink:title=" &#160;&#160;&#160;fn finalize_public_attrs(&amp;mut self) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.inner.finalize_public_attrs() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2384.5,-2963 2230.5,-2963 2230.5,-2927 2384.5,-2927 2384.5,-2963"/>
<text text-anchor="middle" x="2307.5" y="-2941.3" font-family="Helvetica,sans-Serif" font-size="14.00">finalize_public_attrs</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs(). -->
<g id="edge4" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.74,-2894.84C2016.43,-2902.55 2137.14,-2920.22 2220.27,-2932.38"/>
<polygon fill="blue" stroke="blue" points="2219.81,-2935.85 2230.22,-2933.84 2220.83,-2928.93 2219.81,-2935.85"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs(). -->
<g id="edge7" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2236.43,-2963.1C2142.46,-2990.91 1994.13,-3050.49 2043,-3140 2075.94,-3200.33 2156.63,-3213.45 2220.29,-3213.51"/>
<polygon fill="blue" stroke="blue" points="2220.39,-3217.01 2230.35,-3213.41 2220.32,-3210.01 2220.39,-3217.01"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="node80" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<g id="a_node80"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;blinding_key: &amp;BlindingKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof: BlindedIssuanceProof, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Credential, VerificationFail...">
<polygon fill="white" stroke="black" points="1964.5,-2963 1908.5,-2963 1908.5,-2927 1964.5,-2927 1964.5,-2963"/>
<text text-anchor="middle" x="1936.5" y="-2941.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge254" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.57,-2942.68C1984.33,-2939.74 2010.74,-2933.08 2029,-2918 2423.69,-2592.09 2371,-2371.48 2558,-1895 2624.71,-1725.02 2672.4,-1509.86 2688.26,-1433.48"/>
<polygon fill="blue" stroke="blue" points="2691.78,-1433.74 2690.37,-1423.23 2684.92,-1432.32 2691.78,-1433.74"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs(). -->
<g id="edge253" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.63,-2945C2017.76,-2945 2137.51,-2945 2220.17,-2945"/>
<polygon fill="blue" stroke="blue" points="2220.31,-2948.5 2230.31,-2945 2220.31,-2941.5 2220.31,-2948.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]finalize_public_attrs(). -->
<g id="node81" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]finalize_public_attrs().</title>
<g id="a_node81"><a xlink:title=" &#160;&#160;&#160;fn finalize_public_attrs(&amp;mut self) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert!(self.core.attr_points[0] == RistrettoPoint::identity()); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.core.attr_points[0] = self.public_attrs.get_point(); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2384.5,-3923 2230.5,-3923 2230.5,-3887 2384.5,-3887 2384.5,-3923"/>
<text text-anchor="middle" x="2307.5" y="-3901.3" font-family="Helvetica,sans-Serif" font-size="14.00">finalize_public_attrs</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]finalize_public_attrs().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge26" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]finalize_public_attrs().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M2330.08,-3886.82C2376.28,-3847.11 2486.35,-3748.13 2558,-3648 2775.41,-3344.19 2919.38,-2905.02 2954.59,-2790.92"/>
<polygon fill="blue" stroke="blue" points="2957.99,-2791.79 2957.57,-2781.2 2951.29,-2789.74 2957.99,-2791.79"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="node82" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<g id="a_node82"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof: &amp;PresentationProof, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), VerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.finalize_public_attrs(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1964.5,-4004 1908.5,-4004 1908.5,-3968 1964.5,-3968 1964.5,-4004"/>
<text text-anchor="middle" x="1936.5" y="-3982.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge87" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.81,-3984.48C1984.96,-3981.96 2011.75,-3975.47 2029,-3959 2056.54,-3932.69 2037.37,-3910.64 2057,-3878 2225.35,-3597.98 2432.76,-3641.78 2558,-3340 2590.3,-3262.16 2580.59,-2666.11 2586,-2582 2615.55,-2122.4 2676.3,-1563.99 2690.83,-1433.3"/>
<polygon fill="blue" stroke="blue" points="2694.31,-1433.63 2691.94,-1423.3 2687.36,-1432.85 2694.31,-1433.63"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]finalize_public_attrs(). -->
<g id="edge88" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]finalize_public_attrs().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.54,-3979.82C1988.75,-3974.3 2025.23,-3966.03 2057,-3959 2111.24,-3947 2172.17,-3933.81 2220.24,-3923.47"/>
<polygon fill="blue" stroke="blue" points="2221.26,-3926.83 2230.3,-3921.31 2219.79,-3919.99 2221.26,-3926.83"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args(). -->
<g id="node88" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args().</title>
<g id="a_node88"><a xlink:title=" &#160;&#160;&#160;fn prepare_non_attribute_point_args( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: RistrettoPoint, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;commitments: &amp;PresentationProofCommitments, &#160;&#160;&#160;&#160;) &#45;&gt; poksho::PointArgs { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credentials_system = Sys...">
<polygon fill="white" stroke="black" points="2431.5,-4004 2183.5,-4004 2183.5,-3968 2431.5,-3968 2431.5,-4004"/>
<text text-anchor="middle" x="2307.5" y="-3982.3" font-family="Helvetica,sans-Serif" font-size="14.00">prepare_non_attribute_point_args</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args(). -->
<g id="edge89" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.63,-3986C2008.28,-3986 2096.89,-3986 2172.96,-3986"/>
<polygon fill="blue" stroke="blue" points="2173.13,-3989.5 2183.13,-3986 2173.13,-3982.5 2173.13,-3989.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="node83" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<g id="a_node83"><a xlink:title=" &#160;&#160;&#160;pub fn new(label: &amp;[u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::with_authenticated_message(label, &amp;[]) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1963.5,-3896 1909.5,-3896 1909.5,-3860 1963.5,-3860 1963.5,-3896"/>
<text text-anchor="middle" x="1936.5" y="-3874.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="node84" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message().</title>
<g id="a_node84"><a xlink:title=" &#160;&#160;&#160;pub fn with_authenticated_message(label: &amp;[u8], message: &amp;&#39;a [u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;core: PresentationProofBuilderCore::with_authenticated_message(message), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_...">
<polygon fill="white" stroke="black" points="2416.5,-4058 2198.5,-4058 2198.5,-4022 2416.5,-4022 2416.5,-4058"/>
<text text-anchor="middle" x="2307.5" y="-4036.3" font-family="Helvetica,sans-Serif" font-size="14.00">with_authenticated_message</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge108" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.52,-3878.95C1984.04,-3881.11 2011.96,-3887.38 2029,-3905 2063.48,-3940.64 2019.47,-3980.59 2057,-4013 2092.56,-4043.71 2142.43,-4053.34 2188.25,-4054.2"/>
<polygon fill="blue" stroke="blue" points="2188.24,-4057.7 2198.26,-4054.25 2188.28,-4050.7 2188.24,-4057.7"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message(). -->
<g id="node89" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message().</title>
<g id="a_node89"><a xlink:title=" &#160;&#160;&#160;fn with_authenticated_message(message: &amp;&#39;a [u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;encryption_keys: vec![], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;attributes: vec![], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Reserve the first point for public att...">
<polygon fill="white" stroke="black" points="2804,-4058 2586,-4058 2586,-4022 2804,-4022 2804,-4058"/>
<text text-anchor="middle" x="2695" y="-4036.3" font-family="Helvetica,sans-Serif" font-size="14.00">with_authenticated_message</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message(). -->
<g id="edge123" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2416.65,-4040C2466.24,-4040 2525.15,-4040 2575.9,-4040"/>
<polygon fill="blue" stroke="blue" points="2575.93,-4043.5 2585.93,-4040 2575.93,-4036.5 2575.93,-4043.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute(). -->
<g id="node85" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute().</title>
<g id="a_node85"><a xlink:title=" &#160;&#160;&#160;pub fn add_revealed_attribute(mut self, attr: &amp;dyn RevealedAttribute) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// We don&#39;t actually need the value! The server will check it for us. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_ = attr; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.core.ad...">
<polygon fill="white" stroke="black" points="2024.5,-4112 1848.5,-4112 1848.5,-4076 2024.5,-4076 2024.5,-4112"/>
<text text-anchor="middle" x="1936.5" y="-4090.3" font-family="Helvetica,sans-Serif" font-size="14.00">add_revealed_attribute</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge156" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M1960.6,-4112.02C1983.57,-4128.71 2020.54,-4152.35 2057,-4162 2381.76,-4247.93 2578.1,-4367.13 2812,-4126 2908.6,-4026.41 2954.48,-2978.07 2961.91,-2791.36"/>
<polygon fill="blue" stroke="blue" points="2965.41,-2791.37 2962.31,-2781.24 2958.42,-2791.1 2965.41,-2791.37"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="node86" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<g id="a_node86"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential: &amp;Credential, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; PresentationProof { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credenti...">
<polygon fill="white" stroke="black" points="1971,-4058 1902,-4058 1902,-4022 1971,-4022 1971,-4058"/>
<text text-anchor="middle" x="1936.5" y="-4036.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge191" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M1971.43,-4043.46C1990.13,-4046.87 2012.77,-4053.62 2029,-4067 2049.86,-4084.2 2033.9,-4106.96 2057,-4121 2200.73,-4208.38 2698.79,-4191.41 2812,-4067 2901.16,-3969.02 2952.92,-2973.43 2961.67,-2791.47"/>
<polygon fill="blue" stroke="blue" points="2965.17,-2791.51 2962.15,-2781.35 2958.18,-2791.17 2965.17,-2791.51"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge192" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1971.29,-4039.4C1991.42,-4037.09 2015.6,-4030.48 2029,-4013 2067.95,-3962.19 2050.8,-2924.72 2057,-2861 2113.52,-2280.15 2266.7,-1581.5 2300.04,-1433.42"/>
<polygon fill="blue" stroke="blue" points="2303.52,-1433.87 2302.31,-1423.35 2296.69,-1432.33 2303.52,-1433.87"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args(). -->
<g id="edge193" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1971.04,-4031.34C1994.88,-4025.45 2027.73,-4017.87 2057,-4013 2094.58,-4006.74 2135.59,-4001.61 2173.31,-3997.56"/>
<polygon fill="blue" stroke="blue" points="2173.76,-4001.04 2183.34,-3996.5 2173.03,-3994.07 2173.76,-4001.04"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="node87" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<g id="a_node87"><a xlink:title=" &#160;&#160;&#160;pub fn new(label: &amp;[u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::with_authenticated_message(label, &amp;[]) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1963.5,-3950 1909.5,-3950 1909.5,-3914 1963.5,-3914 1963.5,-3950"/>
<text text-anchor="middle" x="1936.5" y="-3928.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="node90" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<g id="a_node90"><a xlink:title=" &#160;&#160;&#160;pub fn with_authenticated_message(label: &amp;[u8], message: &amp;&#39;a [u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_ = label; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;core: PresentationProofBuilderCore::with_authenticated_message(message), ...">
<polygon fill="white" stroke="black" points="2416.5,-4112 2198.5,-4112 2198.5,-4076 2416.5,-4076 2416.5,-4112"/>
<text text-anchor="middle" x="2307.5" y="-4090.3" font-family="Helvetica,sans-Serif" font-size="14.00">with_authenticated_message</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge197" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.52,-3932.95C1984.04,-3935.11 2011.96,-3941.38 2029,-3959 2063.48,-3994.64 2019.47,-4034.59 2057,-4067 2092.56,-4097.71 2142.43,-4107.34 2188.25,-4108.2"/>
<polygon fill="blue" stroke="blue" points="2188.24,-4111.7 2198.26,-4108.25 2188.28,-4104.7 2188.24,-4111.7"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge231" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M2431.52,-3981.32C2475.18,-3974.33 2522.29,-3960.08 2558,-3932 2942.63,-3629.59 2963.43,-2939.74 2963.34,-2791.42"/>
<polygon fill="blue" stroke="blue" points="2966.84,-2791.31 2963.3,-2781.32 2959.84,-2791.33 2966.84,-2791.31"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge244" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M2710.42,-4021.94C2735.62,-3989.34 2787.33,-3917.55 2812,-3848 2954.25,-3446.99 2963.19,-2918.2 2963.19,-2791.26"/>
<polygon fill="blue" stroke="blue" points="2966.69,-2791.19 2963.17,-2781.2 2959.69,-2791.2 2966.69,-2791.19"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message(). -->
<g id="edge301" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2416.53,-4084.41C2460.53,-4079.96 2511.81,-4074.07 2558,-4067 2571.4,-4064.95 2585.49,-4062.49 2599.32,-4059.91"/>
<polygon fill="blue" stroke="blue" points="2600.15,-4063.31 2609.32,-4058.01 2598.85,-4056.44 2600.15,-4063.31"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches(). -->
<g id="node91" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().</title>
<g id="a_node91"><a xlink:title="criterion_group!(benches, bench_server_param_serialization,); criterion_main!(benches);">
<polygon fill="white" stroke="black" points="271.5,-1443 196.5,-1443 196.5,-1407 271.5,-1407 271.5,-1443"/>
<text text-anchor="middle" x="234" y="-1421.3" font-family="Helvetica,sans-Serif" font-size="14.00">benches</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile(). -->
<g id="node92" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().</title>
<g id="a_node92"><a xlink:title="pub fn benchmark_integration_profile(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;// SERVER &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = ser...">
<polygon fill="white" stroke="black" points="728,-1443 500,-1443 500,-1407 728,-1407 728,-1443"/>
<text text-anchor="middle" x="614" y="-1421.3" font-family="Helvetica,sans-Serif" font-size="14.00">benchmark_integration_profile</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile(). -->
<g id="edge45" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M271.59,-1425C321.59,-1425 413.74,-1425 489.71,-1425"/>
<polygon fill="blue" stroke="blue" points="489.84,-1428.5 499.84,-1425 489.84,-1421.5 489.84,-1428.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth(). -->
<g id="node93" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().</title>
<g id="a_node93"><a xlink:title="fn benchmark_integration_auth(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params.get...">
<polygon fill="white" stroke="black" points="722,-1497 506,-1497 506,-1461 722,-1461 722,-1497"/>
<text text-anchor="middle" x="614" y="-1475.3" font-family="Helvetica,sans-Serif" font-size="14.00">benchmark_integration_auth</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth(). -->
<g id="edge46" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M271.6,-1439.2C285.34,-1443.99 301.2,-1448.9 316,-1452 374.56,-1464.25 440.77,-1470.94 495.79,-1474.6"/>
<polygon fill="blue" stroke="blue" points="495.73,-1478.1 505.93,-1475.25 496.17,-1471.12 495.73,-1478.1"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements(). -->
<g id="node94" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().</title>
<g id="a_node94"><a xlink:title="pub fn benchmark_group_send_endorsements(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;const DAY_ALIGNED_TIMESTAMP: zkgroup::Timestamp = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;zkgroup::Timestamp::from_epoch_seconds(1681344000); // 2023&#45;04&#45;13 00:00:00 U...">
<polygon fill="white" stroke="black" points="759,-1389 469,-1389 469,-1353 759,-1353 759,-1389"/>
<text text-anchor="middle" x="614" y="-1367.3" font-family="Helvetica,sans-Serif" font-size="14.00">benchmark_group_send_endorsements</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements(). -->
<g id="edge44" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M271.6,-1410.8C285.34,-1406.01 301.2,-1401.1 316,-1398 361.92,-1388.4 412.53,-1382.21 458.77,-1378.22"/>
<polygon fill="blue" stroke="blue" points="459.2,-1381.7 468.87,-1377.38 458.62,-1374.72 459.2,-1381.7"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="edge75" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M695.48,-1406.95C762.94,-1397.02 856.83,-1396.24 912,-1452 951.05,-1491.46 893.82,-1660.7 932,-1701 946.87,-1716.7 966.2,-1726.4 986.97,-1732.08"/>
<polygon fill="blue" stroke="blue" points="986.39,-1735.54 996.94,-1734.48 988.04,-1728.73 986.39,-1735.54"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="edge77" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M694.35,-1406.96C762.02,-1396.72 856.86,-1395.48 912,-1452 959.12,-1500.3 885.94,-1705.68 932,-1755 934.07,-1757.22 936.24,-1759.32 938.48,-1761.31"/>
<polygon fill="blue" stroke="blue" points="936.41,-1764.13 946.41,-1767.63 940.77,-1758.66 936.41,-1764.13"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation(). -->
<g id="node133" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().</title>
<g id="a_node133"><a xlink:title=" &#160;&#160;&#160;pub fn verify_expiring_profile_key_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: api::groups::GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::profiles::ExpiringProfileKeyCred...">
<polygon fill="white" stroke="black" points="1769.5,-1476 1400.5,-1476 1400.5,-1440 1769.5,-1440 1769.5,-1476"/>
<text text-anchor="middle" x="1585" y="-1454.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_expiring_profile_key_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation(). -->
<g id="edge78" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M728.13,-1422.48C869.86,-1420.12 1120.12,-1418.59 1334,-1431 1365.07,-1432.8 1398.22,-1435.7 1429.88,-1438.93"/>
<polygon fill="blue" stroke="blue" points="1429.8,-1442.44 1440.11,-1439.99 1430.52,-1435.48 1429.8,-1442.44"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge76" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M700.68,-1406.99C767.11,-1398.43 856.85,-1399.55 912,-1452 957.87,-1495.62 887.09,-1548.39 932,-1593 939.54,-1600.48 948.09,-1606.58 957.32,-1611.5"/>
<polygon fill="blue" stroke="blue" points="955.83,-1614.67 966.36,-1615.87 958.88,-1608.36 955.83,-1614.67"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge74" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M697.18,-1406.97C764.29,-1397.52 856.77,-1397.4 912,-1452 942.98,-1482.62 901.69,-1615.71 932,-1647 945.21,-1660.64 961.8,-1669.72 979.74,-1675.55"/>
<polygon fill="blue" stroke="blue" points="979.25,-1679.05 989.83,-1678.47 981.19,-1672.33 979.25,-1679.05"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="node99" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<g id="a_node99"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; AuthCredentialWithPniZkcPr...">
<polygon fill="white" stroke="black" points="1167.5,-3231 1098.5,-3231 1098.5,-3195 1167.5,-3195 1167.5,-3231"/>
<text text-anchor="middle" x="1133" y="-3209.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="edge93" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M722.14,-1467.16C787.37,-1466.45 866.62,-1478.46 912,-1532 941.71,-1567.05 901.55,-3151.59 932,-3186 970.21,-3229.18 1041.93,-3228 1088.3,-3221.65"/>
<polygon fill="blue" stroke="blue" points="1088.99,-3225.09 1098.36,-3220.14 1087.95,-3218.17 1088.99,-3225.09"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="node102" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<g id="a_node102"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;AuthCredentialWithPniZkc, ZkGroupV...">
<polygon fill="white" stroke="black" points="1166,-3015 1100,-3015 1100,-2979 1166,-2979 1166,-3015"/>
<text text-anchor="middle" x="1133" y="-2993.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="edge95" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M722.08,-1467.21C787.28,-1466.52 866.53,-1478.54 912,-1532 958.58,-1586.77 901.41,-2760.93 932,-2826 965.05,-2896.3 1042.43,-2948.65 1090.67,-2975.89"/>
<polygon fill="blue" stroke="blue" points="1089.17,-2979.06 1099.62,-2980.84 1092.56,-2972.93 1089.17,-2979.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="node104" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<g id="a_node104"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: &amp;GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailu...">
<polygon fill="white" stroke="black" points="1161,-3177 1105,-3177 1105,-3141 1161,-3141 1161,-3177"/>
<text text-anchor="middle" x="1133" y="-3155.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="edge94" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M722.14,-1467.17C787.36,-1466.46 866.61,-1478.47 912,-1532 969.5,-1599.8 873.08,-3065.44 932,-3132 971.97,-3177.15 1048.58,-3173.8 1094.51,-3166.75"/>
<polygon fill="blue" stroke="blue" points="1095.36,-3170.16 1104.65,-3165.06 1094.21,-3163.25 1095.36,-3170.16"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="edge92" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M722.12,-1467.18C787.34,-1466.48 866.58,-1478.49 912,-1532 965.64,-1595.2 877.03,-2961.95 932,-3024 962.82,-3058.79 1015.41,-3064.77 1058.93,-3062.46"/>
<polygon fill="blue" stroke="blue" points="1059.18,-3065.96 1068.92,-3061.78 1058.7,-3058.97 1059.18,-3065.96"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge185" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M702.69,-1389.02C769.56,-1397.18 858.92,-1395.11 912,-1341 950.25,-1302 894.41,-1135.63 932,-1096 973.72,-1052.02 1050.41,-1055.15 1095.73,-1061.81"/>
<polygon fill="blue" stroke="blue" points="1095.3,-1065.28 1105.73,-1063.41 1096.4,-1058.37 1095.3,-1065.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts(). -->
<g id="edge183" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M710.73,-1389.03C775.96,-1395.41 859.67,-1391.07 912,-1341 956.46,-1298.46 888.25,-1247.28 932,-1204 957.28,-1178.99 993.94,-1169.57 1029,-1167.3"/>
<polygon fill="blue" stroke="blue" points="1029.49,-1170.79 1039.32,-1166.83 1029.17,-1163.79 1029.49,-1170.79"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded(). -->
<g id="node127" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().</title>
<g id="a_node127"><a xlink:title=" &#160;&#160;&#160;pub fn receive_with_service_ids_single_threaded( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_ids: impl IntoIterator&lt;Item = libsignal_core::ServiceId&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_params: &amp;GroupSecretPara...">
<polygon fill="white" stroke="black" points="1284,-1249 982,-1249 982,-1213 1284,-1213 1284,-1249"/>
<text text-anchor="middle" x="1133" y="-1227.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_with_service_ids_single_threaded</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded(). -->
<g id="edge184" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M759.01,-1366.98C808.26,-1362.85 863.22,-1355.14 912,-1341 980.54,-1321.13 1053.34,-1280.33 1095.64,-1254.39"/>
<polygon fill="blue" stroke="blue" points="1097.53,-1257.33 1104.19,-1249.09 1093.84,-1251.38 1097.53,-1257.33"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge186" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_group_send_endorsements().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M705.1,-1389C771.47,-1396.59 859.04,-1393.76 912,-1341 942.23,-1310.88 902.28,-1180.62 932,-1150 957.21,-1124.03 994.63,-1114.62 1030.31,-1112.64"/>
<polygon fill="blue" stroke="blue" points="1030.45,-1116.14 1040.31,-1112.27 1030.19,-1109.14 1030.45,-1116.14"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="edge6" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPniResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1099.79,-3370.84C1047.77,-3379.39 950.09,-3386.06 922,-3323 908.89,-3293.56 908.89,-3062.44 922,-3033 948.28,-2974 1036.13,-2978.52 1089.83,-2987.5"/>
<polygon fill="blue" stroke="blue" points="1089.31,-2990.96 1099.77,-2989.28 1090.54,-2984.07 1089.31,-2990.96"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="edge36" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1098.49,-3425.96C1046.12,-3435.78 949.74,-3444.29 922,-3382 886.12,-3301.44 1016.6,-3248.09 1088.55,-3225.41"/>
<polygon fill="blue" stroke="blue" points="1089.76,-3228.7 1098.29,-3222.41 1087.7,-3222.01 1089.76,-3228.7"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key(). -->
<g id="node97" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().</title>
<g id="a_node97"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn present_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; AuthCredentia...">
<polygon fill="white" stroke="black" points="1648,-3231 1522,-3231 1522,-3195 1648,-3195 1648,-3231"/>
<text text-anchor="middle" x="1585" y="-3209.3" font-family="Helvetica,sans-Serif" font-size="14.00">present_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge2" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1597.06,-3231.35C1635.62,-3296.38 1764.54,-3522.99 1816,-3729 1831.33,-3790.38 1795.82,-3964.13 1836,-4013 1849.36,-4029.25 1871.42,-4036.27 1891.38,-4039.11"/>
<polygon fill="blue" stroke="blue" points="1891.24,-4042.62 1901.57,-4040.24 1892.01,-4035.66 1891.24,-4042.62"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge3" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1596.75,-3231.43C1634.26,-3296.73 1760.13,-3524.14 1816,-3729 1826.36,-3766.98 1810.36,-3875.14 1836,-3905 1851.43,-3922.97 1877.5,-3929.58 1899.08,-3931.77"/>
<polygon fill="blue" stroke="blue" points="1899.02,-3935.27 1909.25,-3932.52 1899.54,-3928.29 1899.02,-3935.27"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key(). -->
<g id="node98" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().</title>
<g id="a_node98"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn verify_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_key: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: &amp;GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), Zk...">
<polygon fill="white" stroke="black" points="1641.5,-3177 1528.5,-3177 1528.5,-3141 1641.5,-3141 1641.5,-3177"/>
<text text-anchor="middle" x="1585" y="-3155.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge12" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1641.73,-3147.32C1694.86,-3139.8 1772.97,-3138.86 1816,-3186 1844.96,-3217.73 1809.46,-3925.22 1836,-3959 1850.54,-3977.51 1876.39,-3984.13 1898.1,-3986.19"/>
<polygon fill="blue" stroke="blue" points="1898.15,-3989.7 1908.36,-3986.86 1898.61,-3982.71 1898.15,-3989.7"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge13" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1641.94,-3148.15C1694.27,-3141.54 1770.95,-3141.5 1816,-3186 1840.55,-3210.25 1830.64,-3305.91 1836,-3340 1866.8,-3535.82 1913.5,-3769.89 1929.72,-3849.73"/>
<polygon fill="blue" stroke="blue" points="1926.37,-3850.85 1931.8,-3859.95 1933.23,-3849.45 1926.37,-3850.85"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key(). -->
<g id="edge106" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1167.82,-3213C1240.57,-3213 1413.28,-3213 1511.82,-3213"/>
<polygon fill="blue" stroke="blue" points="1512,-3216.5 1522,-3213 1512,-3209.5 1512,-3216.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key(). -->
<g id="node100" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().</title>
<g id="a_node100"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn receive_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;AuthCredentialWithPni...">
<polygon fill="white" stroke="black" points="1646.5,-3069 1523.5,-3069 1523.5,-3033 1646.5,-3033 1646.5,-3069"/>
<text text-anchor="middle" x="1585" y="-3047.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge134" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1646.72,-3039.82C1698.66,-3034.04 1771.83,-3035.48 1816,-3078 1857.48,-3117.93 1797.58,-3163.11 1836,-3206 1851.5,-3223.3 1876.85,-3230 1898.08,-3232.4"/>
<polygon fill="blue" stroke="blue" points="1897.85,-3235.89 1908.12,-3233.26 1898.45,-3228.92 1897.85,-3235.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge135" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1646.58,-3048.73C1694.45,-3049.11 1761.96,-3054.56 1816,-3078 1855.18,-3095 1891.31,-3129.21 1913.36,-3153.09"/>
<polygon fill="blue" stroke="blue" points="1910.98,-3155.67 1920.28,-3160.75 1916.17,-3150.98 1910.98,-3155.67"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present(). -->
<g id="node101" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().</title>
<g id="a_node101"><a xlink:title=" &#160;&#160;&#160;fn issue_receive_present() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const ACI: Aci = Aci::from_uuid_bytes([b&#39;a&#39;; 16]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const PNI: Pni = Pni::from_uuid_bytes([b&#39;p&#39;; 16]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const REDEMPTION_TIME: Timestamp = Timest...">
<polygon fill="white" stroke="black" points="1217,-3123 1049,-3123 1049,-3087 1217,-3087 1217,-3123"/>
<text text-anchor="middle" x="1133" y="-3101.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_receive_present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key(). -->
<g id="edge178" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1217.06,-3097.54C1256.33,-3098.34 1301.59,-3106.05 1334,-3132 1353.98,-3148 1333.88,-3170.18 1354,-3186 1398.12,-3220.71 1462.54,-3225.58 1511.98,-3222.85"/>
<polygon fill="blue" stroke="blue" points="1512.23,-3226.34 1521.98,-3222.18 1511.77,-3219.36 1512.23,-3226.34"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key(). -->
<g id="edge179" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1217.04,-3115.3C1258.23,-3120.38 1308.73,-3126.56 1354,-3132 1409.3,-3138.64 1472.09,-3146 1518.08,-3151.36"/>
<polygon fill="blue" stroke="blue" points="1517.88,-3154.86 1528.22,-3152.53 1518.69,-3147.9 1517.88,-3154.86"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key(). -->
<g id="edge177" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1217.04,-3094.7C1258.23,-3089.62 1308.73,-3083.44 1354,-3078 1407.44,-3071.58 1467.89,-3064.49 1513.4,-3059.19"/>
<polygon fill="blue" stroke="blue" points="1513.93,-3062.65 1523.46,-3058.02 1513.12,-3055.7 1513.93,-3062.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key(). -->
<g id="node103" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().</title>
<g id="a_node103"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn issue_credential_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_key: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1677.5,-3123 1492.5,-3123 1492.5,-3087 1677.5,-3087 1677.5,-3123"/>
<text text-anchor="middle" x="1585" y="-3101.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_credential_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key(). -->
<g id="edge176" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1217.06,-3105C1291.83,-3105 1401.94,-3105 1482.02,-3105"/>
<polygon fill="blue" stroke="blue" points="1482.13,-3108.5 1492.13,-3105 1482.13,-3101.5 1482.13,-3108.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key(). -->
<g id="edge180" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1166,-3000.84C1238.02,-3009.48 1414.28,-3030.63 1513.38,-3042.53"/>
<polygon fill="blue" stroke="blue" points="1512.96,-3046 1523.31,-3043.72 1513.79,-3039.05 1512.96,-3046"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge265" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1677.74,-3091.56C1725,-3090.01 1780.08,-3097.43 1816,-3132 1857.48,-3171.93 1797.58,-3217.11 1836,-3260 1851.8,-3277.65 1877.86,-3284.26 1899.34,-3286.54"/>
<polygon fill="blue" stroke="blue" points="1899.21,-3290.04 1909.46,-3287.34 1899.76,-3283.06 1899.21,-3290.04"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge266" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1677.65,-3110.31C1720.19,-3114.16 1771.15,-3120.75 1816,-3132 1845.08,-3139.29 1876.58,-3151.89 1899.94,-3162.21"/>
<polygon fill="blue" stroke="blue" points="1898.54,-3165.42 1909.1,-3166.33 1901.41,-3159.04 1898.54,-3165.42"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key(). -->
<g id="edge283" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1161.14,-3159C1230.85,-3159 1417.8,-3159 1518.16,-3159"/>
<polygon fill="blue" stroke="blue" points="1518.19,-3162.5 1528.19,-3159 1518.19,-3155.5 1518.19,-3162.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key(). -->
<g id="edge302" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1197.05,-3058.83C1241.03,-3064.27 1301.08,-3071.65 1354,-3078 1396.04,-3083.05 1442.42,-3088.51 1482.45,-3093.2"/>
<polygon fill="blue" stroke="blue" points="1482.15,-3096.68 1492.49,-3094.37 1482.96,-3089.73 1482.15,-3096.68"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level(). -->
<g id="node106" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().</title>
<g id="a_node106"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_wrong_receipt_level() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let valid_presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_pa...">
<polygon fill="white" stroke="black" points="755,-3831 473,-3831 473,-3795 755,-3795 755,-3831"/>
<text text-anchor="middle" x="614" y="-3809.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_wrong_receipt_level</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="node111" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<g id="a_node111"><a xlink:title=" &#160;&#160;&#160;fn generate_credential(redemption_time: Timestamp) &#45;&gt; BackupAuthCredential { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// client generated materials; issuance request &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let request_context = BackupAuthCredentialRequestContex...">
<polygon fill="white" stroke="black" points="1210,-3993 1056,-3993 1056,-3957 1210,-3957 1210,-3993"/>
<text text-anchor="middle" x="1133" y="-3971.3" font-family="Helvetica,sans-Serif" font-size="14.00">generate_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge8" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M705.53,-3794.98C771.02,-3787.54 857.28,-3790.12 912,-3840 948.08,-3872.89 896.65,-3914.34 932,-3948 961.76,-3976.34 1006.23,-3984.38 1045.69,-3984.77"/>
<polygon fill="blue" stroke="blue" points="1045.89,-3988.27 1055.87,-3984.71 1045.85,-3981.27 1045.89,-3988.27"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge10" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M755.22,-3824.83C804.79,-3829.26 860.9,-3834.54 912,-3840 976.33,-3846.87 1051.06,-3856.36 1094.78,-3862.07"/>
<polygon fill="blue" stroke="blue" points="1094.57,-3865.57 1104.94,-3863.4 1095.48,-3858.63 1094.57,-3865.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge9" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M755.01,-3795.57C808.91,-3796.08 868.01,-3806.32 912,-3840 932.32,-3855.56 912.02,-3878 932,-3894 976.06,-3929.28 1043.86,-3930.85 1088.08,-3927.16"/>
<polygon fill="blue" stroke="blue" points="1088.61,-3930.63 1098.23,-3926.19 1087.95,-3923.66 1088.61,-3930.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge23" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1595.33,-3740.98C1628.15,-3677.22 1740.32,-3455.96 1816,-3266 1826.4,-3239.89 1815.57,-3225.3 1836,-3206 1852.92,-3190.02 1878.32,-3183.3 1899.22,-3180.57"/>
<polygon fill="blue" stroke="blue" points="1899.79,-3184.03 1909.37,-3179.5 1899.06,-3177.07 1899.79,-3184.03"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge24" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1597.71,-3740.71C1637.27,-3677.8 1766.24,-3463.36 1816,-3266 1825.47,-3228.44 1811.6,-2948.08 1836,-2918 1851.02,-2899.49 1877.35,-2892.93 1899.15,-2890.9"/>
<polygon fill="blue" stroke="blue" points="1899.67,-2894.37 1909.42,-2890.23 1899.21,-2887.39 1899.67,-2894.37"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration(). -->
<g id="node108" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().</title>
<g id="a_node108"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_expiration() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_params().get_publ...">
<polygon fill="white" stroke="black" points="722,-3993 506,-3993 506,-3957 722,-3957 722,-3993"/>
<text text-anchor="middle" x="614" y="-3971.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_expiration</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge70" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M722.12,-3975C817.95,-3975 956.64,-3975 1045.57,-3975"/>
<polygon fill="blue" stroke="blue" points="1045.62,-3978.5 1055.62,-3975 1045.62,-3971.5 1045.62,-3978.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge69" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M722.25,-3991.61C783.68,-3995.16 858.86,-3988.68 912,-3948 932.32,-3932.44 912.02,-3910 932,-3894 978.34,-3856.9 1050.94,-3857.08 1094.74,-3861.45"/>
<polygon fill="blue" stroke="blue" points="1094.37,-3864.92 1104.7,-3862.56 1095.15,-3857.97 1094.37,-3864.92"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge68" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M722.31,-3966.06C778.8,-3961.15 849.19,-3954.71 912,-3948 973.28,-3941.46 1044,-3932.53 1088.35,-3926.77"/>
<polygon fill="blue" stroke="blue" points="1089.03,-3930.21 1098.49,-3925.44 1088.12,-3923.27 1089.03,-3930.21"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity(). -->
<g id="node109" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().</title>
<g id="a_node109"><a xlink:title=" &#160;&#160;&#160;fn test_client_enforces_timestamp_granularity() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let redemption_time: Timestamp = DAY_ALIGNED_TIMESTAMP.add_seconds(60 * 60); // not on a day boundary! &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let request_context = Back...">
<polygon fill="white" stroke="black" points="1291.5,-3831 974.5,-3831 974.5,-3795 1291.5,-3795 1291.5,-3831"/>
<text text-anchor="middle" x="1133" y="-3809.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_client_enforces_timestamp_granularity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge110" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1279.84,-3794.99C1304.59,-3791.97 1330.03,-3788.88 1354,-3786 1422.51,-3777.77 1502.54,-3768.44 1547.85,-3763.18"/>
<polygon fill="blue" stroke="blue" points="1548.25,-3766.66 1557.78,-3762.03 1547.44,-3759.71 1548.25,-3766.66"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge109" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1291.7,-3813C1380.67,-3813 1485.09,-3813 1541.92,-3813"/>
<polygon fill="blue" stroke="blue" points="1541.96,-3816.5 1551.96,-3813 1541.96,-3809.5 1541.96,-3816.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp(). -->
<g id="node110" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().</title>
<g id="a_node110"><a xlink:title=" &#160;&#160;&#160;fn test_client_enforces_timestamp() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let redemption_time: Timestamp = DAY_ALIGNED_TIMESTAMP; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let request_context = BackupAuthCredentialRequestContext::new(&amp;KEY, ACI.into()); &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1250,-3777 1016,-3777 1016,-3741 1250,-3741 1250,-3777"/>
<text text-anchor="middle" x="1133" y="-3755.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_client_enforces_timestamp</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge136" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1250.18,-3759C1348.61,-3759 1483.63,-3759 1547.58,-3759"/>
<polygon fill="blue" stroke="blue" points="1547.58,-3762.5 1557.58,-3759 1547.58,-3755.5 1547.58,-3762.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge137" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1250.16,-3773.37C1283.67,-3777.49 1320.28,-3781.95 1354,-3786 1419.55,-3793.87 1495.64,-3802.75 1541.78,-3808.11"/>
<polygon fill="blue" stroke="blue" points="1541.66,-3811.62 1551.99,-3809.3 1542.47,-3804.67 1541.66,-3811.62"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge210" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1210.35,-3985.42C1252.47,-3986.64 1302.47,-3979.89 1334,-3948 1385.01,-3896.41 1302.55,-3837.14 1354,-3786 1405.08,-3735.22 1497.31,-3742.29 1548.08,-3751.11"/>
<polygon fill="blue" stroke="blue" points="1547.48,-3754.56 1557.95,-3752.94 1548.76,-3747.68 1547.48,-3754.56"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge209" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1210.47,-3971.17C1248.35,-3967.65 1294.35,-3960.9 1334,-3948 1416.18,-3921.25 1502.97,-3867.88 1549.57,-3836.86"/>
<polygon fill="blue" stroke="blue" points="1551.72,-3839.63 1558.07,-3831.15 1547.82,-3833.82 1551.72,-3839.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id(). -->
<g id="node112" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().</title>
<g id="a_node112"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_wrong_backup_id() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let valid_presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_params...">
<polygon fill="white" stroke="black" points="747,-3939 481,-3939 481,-3903 747,-3903 747,-3939"/>
<text text-anchor="middle" x="614" y="-3917.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_wrong_backup_id</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge219" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.04,-3932.11C798.55,-3936.67 858.07,-3942.24 912,-3948 956.18,-3952.72 1005.26,-3958.67 1045.84,-3963.79"/>
<polygon fill="blue" stroke="blue" points="1045.6,-3967.29 1055.96,-3965.07 1046.48,-3960.34 1045.6,-3967.29"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge221" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.04,-3909.89C798.55,-3905.33 858.07,-3899.76 912,-3894 976.33,-3887.13 1051.06,-3877.64 1094.78,-3871.93"/>
<polygon fill="blue" stroke="blue" points="1095.48,-3875.37 1104.94,-3870.6 1094.57,-3868.43 1095.48,-3875.37"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge220" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.13,-3921C859.2,-3921 1013.28,-3921 1087.93,-3921"/>
<polygon fill="blue" stroke="blue" points="1088.35,-3924.5 1098.35,-3921 1088.35,-3917.5 1088.35,-3924.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge238" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1618.04,-3820.63C1668.47,-3830.51 1765.75,-3840.57 1816,-3786 1859.68,-3738.56 1795.95,-3256.54 1836,-3206 1850.88,-3187.23 1877.38,-3180.7 1899.3,-3178.75"/>
<polygon fill="blue" stroke="blue" points="1899.54,-3182.24 1909.3,-3178.14 1899.11,-3175.26 1899.54,-3182.24"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge239" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1618.08,-3820.66C1668.56,-3830.59 1765.92,-3840.72 1816,-3786 1842.6,-3756.93 1822.97,-3114.19 1836,-3077 1850.79,-3034.78 1884.46,-2995.04 1908.53,-2970.41"/>
<polygon fill="blue" stroke="blue" points="1911.08,-2972.81 1915.66,-2963.26 1906.12,-2967.87 1911.08,-2972.81"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption(). -->
<g id="node114" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().</title>
<g id="a_node114"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_wrong_redemption() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let valid_presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_param...">
<polygon fill="white" stroke="black" points="751.5,-3885 476.5,-3885 476.5,-3849 751.5,-3849 751.5,-3885"/>
<text text-anchor="middle" x="614" y="-3863.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_wrong_redemption</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge241" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M751.62,-3849.55C806.42,-3849.66 867.09,-3859.62 912,-3894 932.32,-3909.56 912.02,-3932 932,-3948 963.51,-3973.23 1007.16,-3981.22 1045.65,-3982.38"/>
<polygon fill="blue" stroke="blue" points="1045.78,-3985.88 1055.83,-3982.53 1045.88,-3978.88 1045.78,-3985.88"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge242" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M751.51,-3867C866.76,-3867 1023.98,-3867 1094.77,-3867"/>
<polygon fill="blue" stroke="blue" points="1094.97,-3870.5 1104.97,-3867 1094.97,-3863.5 1094.97,-3870.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge243" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M751.86,-3878.53C802.24,-3883.02 859.75,-3888.42 912,-3894 973.28,-3900.54 1044,-3909.47 1088.35,-3915.23"/>
<polygon fill="blue" stroke="blue" points="1088.12,-3918.73 1098.49,-3916.56 1089.03,-3911.79 1088.12,-3918.73"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge290" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1161.18,-3861.1C1204.85,-3853.39 1290.17,-3846.01 1334,-3894 1368.5,-3931.78 1317.05,-4318.62 1354,-4354 1428.16,-4425 1741.31,-4424.44 1816,-4354 1871.22,-4301.92 1788.14,-4071.92 1836,-4013 1850.74,-3994.85 1876.34,-3988.19 1897.89,-3986.03"/>
<polygon fill="blue" stroke="blue" points="1898.35,-3989.5 1908.07,-3985.29 1897.85,-3982.52 1898.35,-3989.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge291" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1161.16,-3861.11C1204.81,-3853.42 1290.11,-3846.06 1334,-3894 1366.52,-3929.52 1319.17,-4293.74 1354,-4327 1391.13,-4362.45 1778.85,-4362.43 1816,-4327 1849.97,-4294.6 1806.61,-3941.6 1836,-3905 1851,-3886.33 1877.5,-3879.8 1899.38,-3877.82"/>
<polygon fill="blue" stroke="blue" points="1899.61,-3881.31 1909.37,-3877.19 1899.17,-3874.32 1899.61,-3881.31"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute(). -->
<g id="edge300" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1167.83,-3913.97C1213.06,-3906.77 1292.35,-3902.29 1334,-3948 1370.4,-3987.95 1315.01,-4396.58 1354,-4434 1502.15,-4576.18 1648.46,-4552.7 1816,-4434 1919.49,-4360.68 1934.01,-4190.28 1935.57,-4122.53"/>
<polygon fill="blue" stroke="blue" points="1939.08,-4122.25 1935.73,-4112.2 1932.08,-4122.15 1939.08,-4122.25"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge299" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1167.81,-3913.99C1213.01,-3906.82 1292.27,-3902.36 1334,-3948 1367.47,-3984.61 1318.15,-4359.72 1354,-4394 1428.2,-4464.95 1741.22,-4464.35 1816,-4394 1869.03,-4344.12 1790.03,-4123.45 1836,-4067 1849.44,-4050.5 1871.86,-4043.5 1892.02,-4040.74"/>
<polygon fill="blue" stroke="blue" points="1892.42,-4044.22 1901.99,-4039.68 1891.68,-4037.25 1892.42,-4044.22"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge298" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1167.78,-3914.02C1212.95,-3906.88 1292.17,-3902.45 1334,-3948 1364.55,-3981.26 1321.29,-4322.86 1354,-4354 1428.36,-4424.79 1741.59,-4424.74 1816,-4354 1847.85,-4323.72 1808.43,-3993.22 1836,-3959 1851.03,-3940.35 1877.53,-3933.82 1899.4,-3931.83"/>
<polygon fill="blue" stroke="blue" points="1899.63,-3935.33 1909.39,-3931.2 1899.18,-3928.34 1899.63,-3935.33"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge59" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1613.38,-2608.24C1662.37,-2597.96 1764.66,-2585.16 1816,-2642 1865.05,-2696.31 1791.11,-3901.21 1836,-3959 1850.44,-3977.58 1876.29,-3984.2 1898.03,-3986.24"/>
<polygon fill="blue" stroke="blue" points="1898.09,-3989.75 1908.3,-3986.91 1898.55,-3982.77 1898.09,-3989.75"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge60" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1613.31,-2608.3C1662.17,-2598.14 1764.28,-2585.51 1816,-2642 1842.2,-2670.61 1831.9,-3301.42 1836,-3340 1856.92,-3537.07 1909.83,-3770.25 1928.69,-3849.8"/>
<polygon fill="blue" stroke="blue" points="1925.29,-3850.65 1931.02,-3859.57 1932.1,-3849.03 1925.29,-3850.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge125" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1649.11,-2548.38C1701.85,-2541.88 1774.85,-2543.1 1816,-2588 1866.47,-2643.07 1789.74,-3201.35 1836,-3260 1850.83,-3278.81 1877.34,-3285.33 1899.27,-3287.27"/>
<polygon fill="blue" stroke="blue" points="1899.09,-3290.77 1909.28,-3287.88 1899.51,-3283.78 1899.09,-3290.77"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge124" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1649.2,-2548.51C1701.8,-2542.16 1774.56,-2543.5 1816,-2588 1849.2,-2623.65 1821.09,-2979.62 1836,-3026 1851.89,-3075.42 1888.19,-3124.24 1912.27,-3153"/>
<polygon fill="blue" stroke="blue" points="1909.86,-3155.57 1919.01,-3160.91 1915.19,-3151.03 1909.86,-3155.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge148" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1618.07,-2499.34C1668.54,-2489.43 1765.88,-2479.31 1816,-2534 1866.47,-2589.07 1789.74,-3147.35 1836,-3206 1850.57,-3224.48 1876.42,-3231.1 1898.12,-3233.17"/>
<polygon fill="blue" stroke="blue" points="1898.17,-3236.68 1908.38,-3233.85 1898.63,-3229.69 1898.17,-3236.68"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge147" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1618,-2499.41C1668.37,-2489.58 1765.59,-2479.59 1816,-2534 1853.18,-2574.13 1819.38,-2973.87 1836,-3026 1851.77,-3075.46 1888.1,-3124.27 1912.22,-3153.01"/>
<polygon fill="blue" stroke="blue" points="1909.82,-3155.59 1918.98,-3160.92 1915.14,-3151.04 1909.82,-3155.59"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge159" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1619.52,-2665.28C1671.05,-2661.65 1768.72,-2663.53 1816,-2722 1861.1,-2777.78 1791.98,-3956.36 1836,-4013 1849.06,-4029.81 1871.46,-4036.82 1891.7,-4039.52"/>
<polygon fill="blue" stroke="blue" points="1891.41,-4043.01 1901.71,-4040.55 1892.12,-4036.05 1891.41,-4043.01"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge158" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1619.51,-2665.28C1671.03,-2661.67 1768.68,-2663.56 1816,-2722 1857.36,-2773.09 1795.63,-3853.13 1836,-3905 1850.71,-3923.9 1877.23,-3930.42 1899.19,-3932.34"/>
<polygon fill="blue" stroke="blue" points="1899.02,-3935.83 1909.21,-3932.93 1899.44,-3928.85 1899.02,-3935.83"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge21" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1613.36,-2853.25C1662.32,-2843.01 1764.57,-2830.25 1816,-2887 1856,-2931.14 1799.37,-3912.03 1836,-3959 1850.47,-3977.56 1876.32,-3984.18 1898.05,-3986.22"/>
<polygon fill="blue" stroke="blue" points="1898.11,-3989.73 1908.32,-3986.89 1898.57,-3982.75 1898.11,-3989.73"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge22" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1613.22,-2853.38C1661.95,-2843.35 1763.85,-2830.91 1816,-2887 1833.15,-2905.45 1833.15,-3314.97 1836,-3340 1858.44,-3536.9 1910.39,-3770.19 1928.85,-3849.78"/>
<polygon fill="blue" stroke="blue" points="1925.45,-3850.61 1931.12,-3859.56 1932.26,-3849.02 1925.45,-3850.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge64" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1612.26,-2745.73C1660.36,-2735.97 1762.55,-2723.59 1816,-2779 1854.23,-2818.64 1818.22,-2973.88 1836,-3026 1852.76,-3075.13 1888.82,-3124.04 1912.61,-3152.89"/>
<polygon fill="blue" stroke="blue" points="1910.16,-3155.41 1919.27,-3160.83 1915.52,-3150.91 1910.16,-3155.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge63" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1612.26,-2749.92C1656.52,-2747.52 1747.82,-2747.32 1816,-2779 1857.88,-2798.46 1894.72,-2838.31 1916.06,-2864.85"/>
<polygon fill="blue" stroke="blue" points="1913.5,-2867.25 1922.43,-2872.95 1919,-2862.92 1913.5,-2867.25"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge206" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1618.02,-2798.71C1667.96,-2789.43 1764.05,-2780.34 1816,-2833 1846.28,-2863.7 1821.62,-2985.35 1836,-3026 1853.31,-3074.94 1889.21,-3123.9 1912.82,-3152.81"/>
<polygon fill="blue" stroke="blue" points="1910.35,-3155.31 1919.43,-3160.77 1915.73,-3150.84 1910.35,-3155.31"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge205" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1618.05,-2799.39C1667.15,-2791.27 1761.09,-2784.03 1816,-2833 1844.96,-2858.83 1809.03,-2890.1 1836,-2918 1852.07,-2934.62 1877.26,-2941.35 1898.27,-2943.93"/>
<polygon fill="blue" stroke="blue" points="1898.21,-2947.44 1908.5,-2944.91 1898.88,-2940.47 1898.21,-2947.44"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute(). -->
<g id="edge278" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1619.92,-2910.26C1671.54,-2906.7 1768.78,-2908.75 1816,-2967 1854.49,-3014.48 1798.43,-4018.79 1836,-4067 1837.43,-4068.84 1838.97,-4070.55 1840.61,-4072.16"/>
<polygon fill="blue" stroke="blue" points="1838.42,-4074.89 1848.36,-4078.54 1842.86,-4069.48 1838.42,-4074.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge277" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1619.91,-2910.27C1671.52,-2906.71 1768.75,-2908.77 1816,-2967 1852.62,-3012.13 1800.25,-3967.17 1836,-4013 1849.09,-4029.78 1871.49,-4036.8 1891.72,-4039.5"/>
<polygon fill="blue" stroke="blue" points="1891.43,-4042.99 1901.74,-4040.53 1892.15,-4036.03 1891.43,-4042.99"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge279" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1619.9,-2910.28C1671.48,-2906.74 1768.68,-2908.82 1816,-2967 1848.89,-3007.44 1803.9,-3863.94 1836,-3905 1850.75,-3923.87 1877.27,-3930.39 1899.22,-3932.31"/>
<polygon fill="blue" stroke="blue" points="1899.05,-3935.81 1909.24,-3932.91 1899.46,-3928.82 1899.05,-3935.81"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="edge65" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1160.18,-1073.39C1202.43,-1078.87 1285.79,-1082.79 1334,-1039 1361.13,-1014.36 1326.48,-983.2 1354,-959 1407.69,-911.78 1497.79,-917.14 1547.8,-924.81"/>
<polygon fill="blue" stroke="blue" points="1547.39,-928.29 1557.83,-926.46 1548.53,-921.38 1547.39,-928.29"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge107" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1226.7,-1173.12C1261.21,-1169.46 1300.19,-1162.62 1334,-1150 1422.58,-1116.92 1511.68,-1047.88 1555.71,-1010.8"/>
<polygon fill="blue" stroke="blue" points="1558.05,-1013.41 1563.4,-1004.27 1553.51,-1008.08 1558.05,-1013.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge223" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids_single_threaded().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1284.15,-1220.49C1301.39,-1216.45 1318.36,-1211.09 1334,-1204 1434.19,-1158.58 1524.06,-1059.55 1563.23,-1012.22"/>
<polygon fill="blue" stroke="blue" points="1566.1,-1014.23 1569.72,-1004.27 1560.68,-1009.8 1566.1,-1014.23"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive(). -->
<g id="edge304" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1225.7,-1116.07C1260.1,-1112.06 1299.26,-1105.78 1334,-1096 1410.76,-1074.4 1494.55,-1033.71 1543.01,-1008.33"/>
<polygon fill="blue" stroke="blue" points="1544.72,-1011.39 1551.93,-1003.63 1541.45,-1005.2 1544.72,-1011.39"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="edge11" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1122.87,-2070.3C1086.5,-2137.16 962.54,-2375.58 922,-2590 916.5,-2619.1 909.95,-3095.95 922,-3123 949.07,-3183.79 1041.5,-3177.15 1094.62,-3167.67"/>
<polygon fill="blue" stroke="blue" points="1095.51,-3171.06 1104.68,-3165.76 1094.21,-3164.19 1095.51,-3171.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify(). -->
<g id="node145" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify().</title>
<g id="a_node145"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: profile_key_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: profile_key_credential_request::Ciphertext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;commitment: profile_key_commitm...">
<polygon fill="white" stroke="black" points="1964.5,-1938 1908.5,-1938 1908.5,-1902 1964.5,-1902 1964.5,-1938"/>
<text text-anchor="middle" x="1936.5" y="-1916.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify(). -->
<g id="edge38" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1269.16,-1743.74C1290.92,-1746.99 1313.14,-1750.75 1334,-1755 1560.72,-1801.25 1612.79,-1832.03 1836,-1893 1856.78,-1898.68 1880.02,-1904.98 1898.81,-1910.07"/>
<polygon fill="blue" stroke="blue" points="1897.9,-1913.45 1908.47,-1912.69 1899.73,-1906.7 1897.9,-1913.45"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new(). -->
<g id="node151" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().</title>
<g id="a_node151"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: credentials::KeyPair&lt;credentials::ExpiringProfileKeyCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request_public_key: profile_key_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: profile_key_c...">
<polygon fill="white" stroke="black" points="1963.5,-1614 1909.5,-1614 1909.5,-1578 1963.5,-1578 1963.5,-1614"/>
<text text-anchor="middle" x="1936.5" y="-1592.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new(). -->
<g id="edge37" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1269.12,-1710.48C1290.83,-1707.46 1313.05,-1704.24 1334,-1701 1549.11,-1667.72 1806.12,-1620.27 1899.42,-1602.8"/>
<polygon fill="blue" stroke="blue" points="1900.29,-1606.2 1909.47,-1600.91 1899,-1599.32 1900.29,-1606.2"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify(). -->
<g id="node153" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().</title>
<g id="a_node153"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature: SignatureBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;match poksho::verify_signature(&amp;signature, self.p...">
<polygon fill="white" stroke="black" points="1613,-621 1557,-621 1557,-585 1613,-585 1613,-621"/>
<text text-anchor="middle" x="1585" y="-599.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify(). -->
<g id="edge61" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1197.05,-1900.76C1242.22,-1904.49 1300.72,-1900.46 1334,-1863 1379.5,-1811.79 1308.05,-680.82 1354,-630 1402.05,-576.85 1494.67,-584.62 1546.52,-594.24"/>
<polygon fill="blue" stroke="blue" points="1546.13,-597.74 1556.62,-596.24 1547.49,-590.87 1546.13,-597.74"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new(). -->
<g id="node152" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().</title>
<g id="a_node152"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_enc_key_pair: uid_encryption::KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;profile_key_enc_key_pair: profile_key_encryption::KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cr...">
<polygon fill="white" stroke="black" points="1963.5,-1992 1909.5,-1992 1909.5,-1956 1963.5,-1956 1963.5,-1992"/>
<text text-anchor="middle" x="1936.5" y="-1970.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new(). -->
<g id="edge90" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1317.17,-1800.18C1322.97,-1802.81 1328.6,-1805.74 1334,-1809 1347.1,-1816.89 1341.3,-1828.48 1354,-1837 1532.28,-1956.62 1802.42,-1972.36 1899.33,-1974.01"/>
<polygon fill="blue" stroke="blue" points="1899.43,-1977.51 1909.48,-1974.14 1899.52,-1970.51 1899.43,-1977.51"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify(). -->
<g id="node143" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().</title>
<g id="a_node143"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_key_pair: credentials::KeyPair&lt;credentials::ExpiringProfileKeyCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_ciphertext: uid_encryption::Ciphertext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_enc_pub...">
<polygon fill="white" stroke="black" points="1964.5,-1884 1908.5,-1884 1908.5,-1848 1964.5,-1848 1964.5,-1884"/>
<text text-anchor="middle" x="1936.5" y="-1862.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify(). -->
<g id="edge227" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1592.43,-1476.07C1615.18,-1537.34 1697.99,-1738.9 1836,-1839 1854.14,-1852.16 1878.33,-1858.9 1898.31,-1862.36"/>
<polygon fill="blue" stroke="blue" points="1897.92,-1865.84 1908.33,-1863.89 1898.97,-1858.92 1897.92,-1865.84"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new(). -->
<g id="node148" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new().</title>
<g id="a_node148"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: profile_key_credential_request::KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ciphertext: profile_key_credential_request::CiphertextWithSecretNonce, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;commitment: profile_key_commitment::Co...">
<polygon fill="white" stroke="black" points="1963.5,-1722 1909.5,-1722 1909.5,-1686 1963.5,-1686 1963.5,-1722"/>
<text text-anchor="middle" x="1936.5" y="-1700.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new(). -->
<g id="edge232" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1299.59,-1637.35C1491.7,-1657.49 1795.39,-1689.32 1899.27,-1700.2"/>
<polygon fill="blue" stroke="blue" points="1898.94,-1703.69 1909.25,-1701.25 1899.67,-1696.73 1898.94,-1703.69"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new(). -->
<g id="node144" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().</title>
<g id="a_node144"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: credentials::KeyPair&lt;credentials::ReceiptCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request_public_key: receipt_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: receipt_credential_request::...">
<polygon fill="white" stroke="black" points="1963.5,-1506 1909.5,-1506 1909.5,-1470 1963.5,-1470 1963.5,-1506"/>
<text text-anchor="middle" x="1936.5" y="-1484.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new(). -->
<g id="edge234" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1224.22,-1471.49C1263.93,-1476.8 1311.18,-1482.27 1354,-1485 1559.94,-1498.12 1807.74,-1492.2 1899.26,-1489.28"/>
<polygon fill="blue" stroke="blue" points="1899.5,-1492.78 1909.38,-1488.95 1899.27,-1485.78 1899.5,-1492.78"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify(). -->
<g id="node150" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().</title>
<g id="a_node150"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request_public_key: receipt_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request: receipt_credential_request...">
<polygon fill="white" stroke="black" points="1964.5,-1668 1908.5,-1668 1908.5,-1632 1964.5,-1632 1964.5,-1668"/>
<text text-anchor="middle" x="1936.5" y="-1646.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify(). -->
<g id="edge235" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1230.68,-1576.13C1408.51,-1594.77 1780.12,-1633.72 1898.46,-1646.12"/>
<polygon fill="blue" stroke="blue" points="1898.16,-1649.61 1908.47,-1647.17 1898.89,-1642.64 1898.16,-1649.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify(). -->
<g id="node146" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().</title>
<g id="a_node146"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;request_public_key: profile_key_credential_request::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci_bytes: UidBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;re...">
<polygon fill="white" stroke="black" points="1964.5,-1776 1908.5,-1776 1908.5,-1740 1964.5,-1740 1964.5,-1776"/>
<text text-anchor="middle" x="1936.5" y="-1754.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify(). -->
<g id="edge255" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1276.37,-1688.92C1465.53,-1708.75 1788.57,-1742.6 1897.99,-1754.07"/>
<polygon fill="blue" stroke="blue" points="1897.89,-1757.58 1908.2,-1755.14 1898.62,-1750.62 1897.89,-1757.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new(). -->
<g id="node147" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().</title>
<g id="a_node147"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential: credentials::ReceiptCredential, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;sho: &amp;mut Sho, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credentials_system = cred...">
<polygon fill="white" stroke="black" points="1963.5,-1560 1909.5,-1560 1909.5,-1524 1963.5,-1524 1963.5,-1560"/>
<text text-anchor="middle" x="1936.5" y="-1538.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new(). -->
<g id="edge258" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1274.07,-1517.24C1463.63,-1524.34 1790.65,-1536.58 1899.26,-1540.64"/>
<polygon fill="blue" stroke="blue" points="1899.25,-1544.15 1909.37,-1541.02 1899.51,-1537.15 1899.25,-1544.15"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign(). -->
<g id="node155" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().</title>
<g id="a_node155"><a xlink:title=" &#160;&#160;&#160;pub fn sign(&amp;self, message: &amp;[u8], sho: &amp;mut Sho) &#45;&gt; SignatureBytes { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let vec_bytes = poksho::sign( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.signing_key, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.public_key, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1612,-675 1558,-675 1558,-639 1612,-639 1612,-675"/>
<text text-anchor="middle" x="1585" y="-653.3" font-family="Helvetica,sans-Serif" font-size="14.00">sign</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign(). -->
<g id="edge259" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1160.27,-2003.84C1203.81,-2011.8 1290.46,-2019.96 1334,-1971 1377.46,-1922.13 1321.21,-850.58 1354,-794 1396.37,-720.9 1494.54,-682.54 1547.9,-666.44"/>
<polygon fill="blue" stroke="blue" points="1549.01,-669.76 1557.63,-663.6 1547.05,-663.04 1549.01,-669.76"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify(). -->
<g id="node149" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().</title>
<g id="a_node149"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_key_pair: credentials::KeyPair&lt;credentials::ReceiptCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;receipt_struct: ReceiptStruct, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFail...">
<polygon fill="white" stroke="black" points="1964.5,-1830 1908.5,-1830 1908.5,-1794 1964.5,-1794 1964.5,-1830"/>
<text text-anchor="middle" x="1936.5" y="-1808.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify(). -->
<g id="edge280" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1272.08,-1926.07C1292.85,-1923.17 1314,-1920.09 1334,-1917 1548.32,-1883.84 1804.23,-1836.62 1898.39,-1818.99"/>
<polygon fill="blue" stroke="blue" points="1899.1,-1822.42 1908.28,-1817.14 1897.81,-1815.54 1899.1,-1822.42"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation(). -->
<g id="edge292" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1285.73,-1829.06C1302.74,-1824.4 1319.23,-1817.92 1334,-1809 1464.68,-1730.12 1545.86,-1554.03 1573.43,-1485.77"/>
<polygon fill="blue" stroke="blue" points="1576.82,-1486.73 1577.25,-1476.14 1570.31,-1484.15 1576.82,-1486.73"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac(). -->
<g id="node142" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().</title>
<g id="a_node142"><a xlink:title=" &#160;&#160;&#160;fn test_mac() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// It doesn&#39;t really matter *which* credential we test here, we just want to generally know &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// we&#39;ve set things up correctly. (Also, the credentials hardcoded here ...">
<polygon fill="white" stroke="black" points="1624.5,-1249 1545.5,-1249 1545.5,-1213 1624.5,-1213 1624.5,-1249"/>
<text text-anchor="middle" x="1585" y="-1227.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_mac</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify(). -->
<g id="edge263" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1624.6,-1240.23C1678.03,-1255.28 1772.82,-1290.62 1816,-1360 1859.63,-1430.1 1784.09,-1666.79 1836,-1731 1850.7,-1749.18 1876.3,-1755.84 1897.86,-1758"/>
<polygon fill="blue" stroke="blue" points="1897.82,-1761.5 1908.05,-1758.73 1898.32,-1754.52 1897.82,-1761.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new(). -->
<g id="edge264" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/credentials/tests/test_mac().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1624.82,-1234.14C1677.61,-1240.69 1770.64,-1260.74 1816,-1322 1848.77,-1366.25 1800.81,-1526.64 1836,-1569 1851.14,-1587.22 1877.22,-1593.82 1898.88,-1595.94"/>
<polygon fill="blue" stroke="blue" points="1898.87,-1599.45 1909.09,-1596.65 1899.36,-1592.46 1898.87,-1599.45"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge35" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M1964.64,-1868.82C1984.19,-1872 2010.29,-1878.75 2029,-1893 2402.29,-2177.38 2175.88,-2561.91 2586,-2790 2693.71,-2849.9 2846.3,-2807.38 2919.94,-2780.47"/>
<polygon fill="blue" stroke="blue" points="2921.22,-2783.73 2929.37,-2776.95 2918.78,-2777.17 2921.22,-2783.73"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge34" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.51,-1869.1C2058.46,-1878.34 2375.17,-1896.34 2558,-1745 2656.81,-1663.21 2684.35,-1499.14 2691.58,-1433.3"/>
<polygon fill="blue" stroke="blue" points="2695.07,-1433.55 2692.61,-1423.25 2688.11,-1432.84 2695.07,-1433.55"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge103" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.74,-1482.1C2028.29,-1467.58 2194.97,-1430.09 2269.51,-1413.32"/>
<polygon fill="blue" stroke="blue" points="2270.41,-1416.71 2279.4,-1411.1 2268.87,-1409.88 2270.41,-1416.71"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge104" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.75,-1924.83C2059.49,-1939.95 2378.5,-1976.8 2558,-1824 2678.73,-1721.23 2693.11,-1510.14 2694.21,-1433.56"/>
<polygon fill="blue" stroke="blue" points="2697.72,-1433.29 2694.29,-1423.26 2690.72,-1433.24 2697.72,-1433.29"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge105" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.62,-1753.61C2055.1,-1738.03 2352.39,-1679.04 2558,-1547 2606.83,-1515.64 2650.79,-1463.3 2674.81,-1431.68"/>
<polygon fill="blue" stroke="blue" points="2677.85,-1433.45 2681.04,-1423.35 2672.25,-1429.26 2677.85,-1433.45"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge120" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.73,-1534.94C1982.13,-1529.82 2007.24,-1522.51 2029,-1515 2116.63,-1484.77 2217.28,-1443.08 2269.97,-1420.71"/>
<polygon fill="blue" stroke="blue" points="2271.41,-1423.9 2279.24,-1416.76 2268.67,-1417.46 2271.41,-1423.9"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge127" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ProfileKeyCredentialRequestProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.71,-1699.79C1982.79,-1695.92 2008.72,-1688.91 2029,-1677 2143.29,-1609.86 2245.61,-1485.55 2287.01,-1431.38"/>
<polygon fill="blue" stroke="blue" points="2289.88,-1433.39 2293.13,-1423.31 2284.3,-1429.16 2289.88,-1433.39"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge170" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.64,-1812.42C2057.71,-1812.47 2368.55,-1801.07 2558,-1654 2632.62,-1596.07 2671.77,-1485.19 2686.71,-1433.21"/>
<polygon fill="blue" stroke="blue" points="2690.14,-1433.91 2689.45,-1423.34 2683.4,-1432.03 2690.14,-1433.91"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge189" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1964.79,-1642.18C1983.01,-1636.9 2007.49,-1629.7 2029,-1623 2254.44,-1552.8 2520.82,-1463.56 2636.08,-1424.63"/>
<polygon fill="blue" stroke="blue" points="2637.41,-1427.88 2645.76,-1421.36 2635.17,-1421.25 2637.41,-1427.88"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge201" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialIssuanceProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.59,-1592.33C1982.84,-1588.7 2009.05,-1581.77 2029,-1569 2044.92,-1558.81 2042.18,-1548.72 2057,-1537 2125.42,-1482.87 2219.34,-1440.19 2270.2,-1419.21"/>
<polygon fill="blue" stroke="blue" points="2271.54,-1422.45 2279.48,-1415.43 2268.9,-1415.96 2271.54,-1422.45"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge203" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M1944.24,-1992.3C1984.39,-2098.12 2203.19,-2633.7 2586,-2823 2697.15,-2877.97 2847.21,-2820.54 2919.93,-2785.64"/>
<polygon fill="blue" stroke="blue" points="2921.8,-2788.63 2929.24,-2781.09 2918.72,-2782.34 2921.8,-2788.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge202" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1963.76,-1971.82C1983.61,-1968.96 2010.51,-1962.33 2029,-1947 2202.6,-1803.06 2279.57,-1522.64 2300.41,-1433.16"/>
<polygon fill="blue" stroke="blue" points="2303.87,-1433.74 2302.68,-1423.21 2297.04,-1432.19 2303.87,-1433.74"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature(). -->
<g id="edge71" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1613.36,-604.21C1661.39,-604.75 1760.99,-598.58 1816,-543 1841.78,-516.95 1810.35,-489.17 1836,-463 1843.41,-455.44 1852.7,-449.94 1862.61,-445.94"/>
<polygon fill="blue" stroke="blue" points="1863.98,-449.16 1872.26,-442.55 1861.66,-442.56 1863.98,-449.16"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature(). -->
<g id="node154" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().</title>
<g id="a_node154"><a xlink:title=" &#160;&#160;&#160;fn test_signature() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let group_key = TEST_ARRAY_32; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho = Sho::new(b&#39; Test_Signature&#39; , &amp;group_key); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let key_pair = KeyPair::generate(&amp;mut sho); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Test s...">
<polygon fill="white" stroke="black" points="1190.5,-648 1075.5,-648 1075.5,-612 1190.5,-612 1190.5,-648"/>
<text text-anchor="middle" x="1133" y="-626.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify(). -->
<g id="edge97" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[PublicKey]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1190.54,-626.61C1283.76,-621.01 1467.27,-610 1546.31,-605.26"/>
<polygon fill="blue" stroke="blue" points="1546.98,-608.73 1556.75,-604.63 1546.56,-601.74 1546.98,-608.73"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign(). -->
<g id="edge96" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/tests/test_signature().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1190.54,-633.39C1284.21,-639.01 1469.04,-650.1 1547.45,-654.81"/>
<polygon fill="blue" stroke="blue" points="1547.6,-658.32 1557.79,-655.43 1548.02,-651.33 1547.6,-658.32"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/sign(). -->
<g id="edge226" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/signature/impl#[KeyPair]sign().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 sign/sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1612.31,-659.86C1657.03,-663.49 1749.51,-665.51 1816,-630 1864.23,-604.24 1901.37,-550.37 1920.7,-517.48"/>
<polygon fill="blue" stroke="blue" points="1923.97,-518.81 1925.9,-508.4 1917.9,-515.34 1923.97,-518.81"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential(). -->
<g id="node156" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().</title>
<g id="a_node156"><a xlink:title="fn test_profile_key_credential() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;&#160;let blinding_keypair ...">
<polygon fill="white" stroke="black" points="1684.5,-4238 1485.5,-4238 1485.5,-4202 1684.5,-4202 1684.5,-4238"/>
<text text-anchor="middle" x="1585" y="-4216.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge28" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1684.6,-4235.23C1731.08,-4236.48 1783.36,-4228.26 1816,-4193 1854.07,-4151.87 1811.96,-3739.63 1836,-3689 1929.43,-3492.2 2163.63,-3349.19 2261.94,-3295.89"/>
<polygon fill="blue" stroke="blue" points="2263.87,-3298.82 2271.03,-3291.01 2260.56,-3292.66 2263.87,-3298.82"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge31" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1684.67,-4235.55C1731.31,-4236.93 1783.72,-4228.72 1816,-4193 1863.5,-4140.44 1792.52,-2973.93 1836,-2918 1850.7,-2899.09 1877.22,-2892.57 1899.18,-2890.66"/>
<polygon fill="blue" stroke="blue" points="1899.43,-2894.15 1909.21,-2890.06 1899.02,-2887.16 1899.43,-2894.15"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge32" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1684.62,-4235.51C1731.25,-4236.87 1783.66,-4228.67 1816,-4193 1854.97,-4150.03 1822.41,-3205.4 1836,-3149 1852.34,-3081.19 1893.65,-3009.63 1917.59,-2971.92"/>
<polygon fill="blue" stroke="blue" points="1920.81,-2973.39 1923.28,-2963.08 1914.92,-2969.6 1920.81,-2973.39"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge27" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1684.71,-4234.25C1730.64,-4235.09 1782.42,-4226.79 1816,-4193 1872.74,-4135.91 1783.64,-4074.13 1836,-4013 1851.21,-3995.24 1876.8,-3988.58 1898.22,-3986.31"/>
<polygon fill="blue" stroke="blue" points="1898.64,-3989.79 1908.34,-3985.52 1898.1,-3982.81 1898.64,-3989.79"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge30" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1684.75,-4228.43C1728.41,-4227.39 1778.27,-4219.2 1816,-4193 1832,-4181.89 1820.3,-4165.53 1836,-4154 1906.16,-4102.51 1958.73,-4172.33 2029,-4121 2050.83,-4105.05 2034.69,-4082.27 2057,-4067 2094.86,-4041.09 2143.78,-4031.93 2188.26,-4030.12"/>
<polygon fill="blue" stroke="blue" points="2188.37,-4033.62 2198.27,-4029.83 2188.17,-4026.62 2188.37,-4033.62"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge33" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1684.62,-4233.57C1730.24,-4234.16 1781.78,-4225.86 1816,-4193 1856.9,-4153.73 1798.12,-4109.19 1836,-4067 1849.95,-4051.46 1871.85,-4044.48 1891.56,-4041.48"/>
<polygon fill="blue" stroke="blue" points="1892.11,-4044.94 1901.61,-4040.25 1891.26,-4037.99 1892.11,-4044.94"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge29" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1684.68,-4209.82C1725.42,-4205.26 1773.06,-4199.44 1816,-4193 1958.45,-4171.62 2122.13,-4136.41 2219.79,-4114.25"/>
<polygon fill="blue" stroke="blue" points="2220.64,-4117.64 2229.62,-4112.01 2219.09,-4110.82 2220.64,-4117.64"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic(). -->
<g id="node157" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().</title>
<g id="a_node157"><a xlink:title="fn test_mac_generic() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;&#160;&#160;let label = b&#39; 20221221_AuthCre...">
<polygon fill="white" stroke="black" points="1653.5,-4184 1516.5,-4184 1516.5,-4148 1653.5,-4148 1653.5,-4184"/>
<text text-anchor="middle" x="1585" y="-4162.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_mac_generic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge115" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1653.68,-4179.23C1706.05,-4185.13 1776.15,-4182.78 1816,-4139 1848.88,-4102.87 1805.89,-3298.46 1836,-3260 1850.51,-3241.47 1876.36,-3234.85 1898.08,-3232.8"/>
<polygon fill="blue" stroke="blue" points="1898.59,-3236.27 1908.34,-3232.12 1898.13,-3229.29 1898.59,-3236.27"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge114" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1653.63,-4179.18C1705.98,-4185.06 1776.06,-4182.7 1816,-4139 1843.97,-4108.39 1820.23,-3431.34 1836,-3393 1849.66,-3359.8 1878.85,-3330.77 1902.1,-3311.53"/>
<polygon fill="blue" stroke="blue" points="1904.45,-3314.13 1910.05,-3305.14 1900.06,-3308.68 1904.45,-3314.13"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge118" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1653.7,-4179.24C1706.08,-4185.15 1776.18,-4182.81 1816,-4139 1850.87,-4100.63 1804.06,-3246.84 1836,-3206 1850.75,-3187.13 1877.27,-3180.61 1899.22,-3178.69"/>
<polygon fill="blue" stroke="blue" points="1899.47,-3182.18 1909.24,-3178.09 1899.05,-3175.19 1899.47,-3182.18"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge113" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1653.71,-4177.87C1705.04,-4182.71 1773.73,-4179.59 1816,-4139 1856.9,-4099.73 1798.12,-4055.19 1836,-4013 1851.52,-3995.72 1876.87,-3989.02 1898.1,-3986.61"/>
<polygon fill="blue" stroke="blue" points="1898.46,-3990.1 1908.13,-3985.75 1897.86,-3983.12 1898.46,-3990.1"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge116" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1653.75,-4178.62C1705.62,-4184.03 1775.01,-4181.3 1816,-4139 1852.32,-4101.52 1802.56,-3945.07 1836,-3905 1851.18,-3886.81 1877.26,-3880.22 1898.91,-3878.08"/>
<polygon fill="blue" stroke="blue" points="1899.38,-3881.56 1909.11,-3877.37 1898.89,-3874.58 1899.38,-3881.56"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge117" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1653.52,-4176.59C1704.05,-4180.54 1771.8,-4176.86 1816,-4139 1841.22,-4117.39 1812.45,-4090.41 1836,-4067 1850.63,-4052.45 1872.27,-4045.53 1891.62,-4042.32"/>
<polygon fill="blue" stroke="blue" points="1892.36,-4045.75 1901.79,-4040.92 1891.4,-4038.82 1892.36,-4045.75"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge112" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1653.72,-4178.36C1705.4,-4183.57 1774.55,-4180.71 1816,-4139 1872.74,-4081.91 1783.64,-4020.13 1836,-3959 1851.41,-3941.01 1877.48,-3934.4 1899.07,-3932.22"/>
<polygon fill="blue" stroke="blue" points="1899.52,-3935.7 1909.24,-3931.47 1899.01,-3928.71 1899.52,-3935.7"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point(). -->
<g id="node158" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().</title>
<g id="a_node158"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn as_point(&amp;self) &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.opaque_id &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1622,-4076 1548,-4076 1548,-4040 1622,-4040 1622,-4076"/>
<text text-anchor="middle" x="1585" y="-4054.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_point</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof(). -->
<g id="edge162" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]verify_proof().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.06,-4051.28C1671.61,-4044.24 1760.86,-4039.7 1816,-4085 1838.37,-4103.38 1812.59,-4129.96 1836,-4147 2095.4,-4335.89 2329.08,-4371.86 2558,-4147 2589.02,-4116.53 2583.62,-2625.41 2586,-2582 2611.18,-2122.14 2675.22,-1563.93 2690.63,-1433.29"/>
<polygon fill="blue" stroke="blue" points="2694.11,-1433.64 2691.81,-1423.29 2687.16,-1432.81 2694.11,-1433.64"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove(). -->
<g id="edge164" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]prove().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.4,-4065.97C1674.05,-4074.89 1767.69,-4081.77 1816,-4028 1848.64,-3991.66 1814.1,-3192.66 1836,-3149 1884.82,-3051.64 1973.03,-3091.43 2029,-2998 2039.62,-2980.27 2265.83,-1645.35 2301.72,-1433.25"/>
<polygon fill="blue" stroke="blue" points="2305.2,-1433.67 2303.42,-1423.22 2298.3,-1432.5 2305.2,-1433.67"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge160" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.39,-4065.96C1674.03,-4074.86 1767.65,-4081.73 1816,-4028 1846.55,-3994.04 1807.81,-3241.94 1836,-3206 1850.78,-3187.15 1877.29,-3180.63 1899.24,-3178.7"/>
<polygon fill="blue" stroke="blue" points="1899.48,-3182.19 1909.25,-3178.1 1899.06,-3175.21 1899.48,-3182.19"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge166" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622,-4065.92C1673.61,-4074.91 1767.69,-4082.03 1816,-4028 1857.11,-3982.02 1798.09,-2966.65 1836,-2918 1850.72,-2899.11 1877.24,-2892.59 1899.2,-2890.67"/>
<polygon fill="blue" stroke="blue" points="1899.45,-2894.16 1909.22,-2890.07 1899.03,-2887.17 1899.45,-2894.16"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge167" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.41,-4065.98C1674.08,-4074.91 1767.74,-4081.81 1816,-4028 1851.28,-3988.66 1818.7,-3126.93 1836,-3077 1850.64,-3034.73 1884.34,-2995 1908.46,-2970.38"/>
<polygon fill="blue" stroke="blue" points="1911.01,-2972.79 1915.61,-2963.24 1906.06,-2967.84 1911.01,-2972.79"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge168" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.1,-4058.87C1668.65,-4058.76 1751.29,-4054.34 1816,-4028 1826.29,-4023.81 1826.02,-4017.88 1836,-4013 1855.63,-4003.41 1879.16,-3996.83 1898.41,-3992.57"/>
<polygon fill="blue" stroke="blue" points="1899.26,-3995.97 1908.33,-3990.49 1897.82,-3989.11 1899.26,-3995.97"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge169" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.28,-4065.17C1672.92,-4072.87 1764.38,-4078.02 1816,-4028 1855.77,-3989.46 1798.92,-3946.14 1836,-3905 1851.86,-3887.4 1877.91,-3880.78 1899.38,-3878.5"/>
<polygon fill="blue" stroke="blue" points="1899.8,-3881.97 1909.49,-3877.69 1899.24,-3875 1899.8,-3881.97"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute(). -->
<g id="edge161" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.09,-4061.72C1672.64,-4066.92 1766.41,-4076.58 1838.26,-4083.98"/>
<polygon fill="blue" stroke="blue" points="1837.94,-4087.47 1848.24,-4085.01 1838.65,-4080.51 1837.94,-4087.47"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge165" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.09,-4056.14C1686.7,-4052.81 1821.91,-4045.85 1891.71,-4042.26"/>
<polygon fill="blue" stroke="blue" points="1892.12,-4045.74 1901.93,-4041.73 1891.76,-4038.75 1892.12,-4045.74"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge163" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1622.32,-4064.4C1672.16,-4070.97 1761.76,-4074.55 1816,-4028 1840.23,-4007.21 1813.23,-3981.38 1836,-3959 1852.6,-3942.68 1878.01,-3935.98 1898.99,-3933.33"/>
<polygon fill="blue" stroke="blue" points="1899.58,-3936.79 1909.18,-3932.3 1898.89,-3929.82 1899.58,-3936.79"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key(). -->
<g id="node159" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().</title>
<g id="a_node159"><a xlink:title="fn test_profile_key_credential_only_verifying_one_encryption_key() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_a...">
<polygon fill="white" stroke="black" points="1808,-4292 1362,-4292 1362,-4256 1808,-4256 1808,-4292"/>
<text text-anchor="middle" x="1585" y="-4270.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_credential_only_verifying_one_encryption_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge273" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1806.91,-4255.64C1810.08,-4252.96 1813.12,-4250.08 1816,-4247 1846.32,-4214.58 1820.03,-3889.42 1836,-3848 1861.61,-3781.57 2192.96,-3402.08 2283.68,-3298.9"/>
<polygon fill="blue" stroke="blue" points="2286.53,-3300.95 2290.51,-3291.13 2281.27,-3296.33 2286.53,-3300.95"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge270" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1807.07,-4255.78C1810.19,-4253.05 1813.17,-4250.13 1816,-4247 1865.49,-4192.2 1790.7,-2976.31 1836,-2918 1850.69,-2899.09 1877.21,-2892.57 1899.18,-2890.65"/>
<polygon fill="blue" stroke="blue" points="1899.43,-2894.15 1909.21,-2890.06 1899.02,-2887.16 1899.43,-2894.15"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge271" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1807.05,-4255.76C1810.18,-4253.05 1813.17,-4250.13 1816,-4247 1836.48,-4224.39 1828.87,-3178.66 1836,-3149 1852.31,-3081.19 1893.63,-3009.63 1917.58,-2971.92"/>
<polygon fill="blue" stroke="blue" points="1920.8,-2973.39 1923.27,-2963.08 1914.91,-2969.6 1920.8,-2973.39"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge269" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1806.31,-4255.87C1809.68,-4253.13 1812.92,-4250.18 1816,-4247 1852.32,-4209.52 1802.56,-4053.07 1836,-4013 1850.98,-3995.05 1876.58,-3988.39 1898.06,-3986.17"/>
<polygon fill="blue" stroke="blue" points="1898.5,-3989.65 1908.21,-3985.41 1897.98,-3982.67 1898.5,-3989.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge272" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1777.94,-4255.99C1790.91,-4253.38 1803.7,-4250.41 1816,-4247 1916.07,-4219.29 1959.4,-4228.06 2029,-4151 2055.38,-4121.8 2026.36,-4091.7 2057,-4067 2093.27,-4037.77 2142.76,-4028.24 2188.1,-4027.06"/>
<polygon fill="blue" stroke="blue" points="2188.36,-4030.56 2198.31,-4026.93 2188.27,-4023.56 2188.36,-4030.56"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge267" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1806.2,-4255.76C1809.61,-4253.05 1812.88,-4250.14 1816,-4247 1872.74,-4189.91 1783.64,-4128.13 1836,-4067 1849.68,-4051.02 1871.77,-4044.03 1891.66,-4041.13"/>
<polygon fill="blue" stroke="blue" points="1892.27,-4044.58 1901.81,-4039.96 1891.48,-4037.63 1892.27,-4044.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge268" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1738.72,-4292.01C1825.55,-4297.33 1935.31,-4295.63 2029,-4268 2130.83,-4237.97 2231.73,-4159.19 2278.89,-4118.75"/>
<polygon fill="blue" stroke="blue" points="2281.26,-4121.32 2286.53,-4112.13 2276.68,-4116.03 2281.26,-4121.32"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key(). -->
<g id="node160" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().</title>
<g id="a_node160"><a xlink:title="fn test_mac_generic_without_verifying_encryption_key() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1772.5,-4130 1397.5,-4130 1397.5,-4094 1772.5,-4094 1772.5,-4130"/>
<text text-anchor="middle" x="1585" y="-4108.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_mac_generic_without_verifying_encryption_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge308" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1772.61,-4114.35C1788.97,-4107.77 1803.88,-4098.3 1816,-4085 1846.88,-4051.12 1807.71,-3296.08 1836,-3260 1850.52,-3241.48 1876.38,-3234.86 1898.09,-3232.81"/>
<polygon fill="blue" stroke="blue" points="1898.6,-3236.28 1908.35,-3232.13 1898.14,-3229.29 1898.6,-3236.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge307" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1772.55,-4114.29C1788.92,-4107.72 1803.85,-4098.27 1816,-4085 1841.97,-4056.63 1821.33,-3428.55 1836,-3393 1849.69,-3359.81 1878.88,-3330.78 1902.13,-3311.54"/>
<polygon fill="blue" stroke="blue" points="1904.47,-3314.14 1910.06,-3305.14 1900.08,-3308.69 1904.47,-3314.14"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge309" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1772.64,-4114.37C1788.99,-4107.79 1803.89,-4098.31 1816,-4085 1848.88,-4048.87 1805.89,-3244.46 1836,-3206 1850.77,-3187.14 1877.28,-3180.62 1899.23,-3178.69"/>
<polygon fill="blue" stroke="blue" points="1899.47,-3182.18 1909.24,-3178.09 1899.05,-3175.2 1899.47,-3182.18"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge311" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1772.58,-4109.97C1788.37,-4104.09 1803.18,-4095.99 1816,-4085 1841.22,-4063.39 1812.45,-4036.41 1836,-4013 1852.29,-3996.81 1877.25,-3990.06 1898.09,-3987.37"/>
<polygon fill="blue" stroke="blue" points="1898.66,-3990.83 1908.24,-3986.32 1897.94,-3983.86 1898.66,-3990.83"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge306" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1772.57,-4112.82C1788.72,-4106.48 1803.6,-4097.48 1816,-4085 1872.74,-4027.91 1783.64,-3966.13 1836,-3905 1851.41,-3887.01 1877.48,-3880.4 1899.07,-3878.22"/>
<polygon fill="blue" stroke="blue" points="1899.52,-3881.7 1909.24,-3877.47 1899.01,-3874.71 1899.52,-3881.7"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge305" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1772.62,-4100.15C1787.62,-4096.19 1802.26,-4091.21 1816,-4085 1826.9,-4080.07 1825.5,-4072.72 1836,-4067 1853.16,-4057.65 1873.78,-4051.36 1891.79,-4047.23"/>
<polygon fill="blue" stroke="blue" points="1892.72,-4050.61 1901.77,-4045.09 1891.25,-4043.77 1892.72,-4050.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge310" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1772.54,-4112.01C1788.59,-4105.79 1803.46,-4097.04 1816,-4085 1856.9,-4045.73 1798.12,-4001.19 1836,-3959 1851.83,-3941.37 1877.88,-3934.76 1899.36,-3932.48"/>
<polygon fill="blue" stroke="blue" points="1899.78,-3935.95 1909.47,-3931.67 1899.23,-3928.98 1899.78,-3935.95"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response(). -->
<g id="node161" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().</title>
<g id="a_node161"><a xlink:title="fn test_backup_auth_request_response() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: Randomne...">
<polygon fill="white" stroke="black" points="747.5,-3694 480.5,-3694 480.5,-3658 747.5,-3658 747.5,-3694"/>
<text text-anchor="middle" x="614" y="-3672.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_backup_auth_request_response</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge173" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.52,-3672.2C892.3,-3669.92 1130.7,-3671.64 1334,-3699 1411.44,-3709.42 1499.86,-3733.64 1548.04,-3747.92"/>
<polygon fill="blue" stroke="blue" points="1547.11,-3751.3 1557.7,-3750.81 1549.12,-3744.59 1547.11,-3751.3"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge174" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.89,-3685.9C954.89,-3701.39 1331.1,-3729.81 1334,-3732 1354.42,-3747.43 1333.88,-3770.18 1354,-3786 1407.69,-3828.23 1491.43,-3826.3 1541.68,-3820.22"/>
<polygon fill="blue" stroke="blue" points="1542.42,-3823.65 1551.87,-3818.88 1541.5,-3816.71 1542.42,-3823.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge175" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.63,-3667.82C805.39,-3671.49 869.47,-3686.54 912,-3729 947.48,-3764.42 895.78,-3805.34 932,-3840 975.24,-3881.37 1049.81,-3879.56 1094.66,-3873.77"/>
<polygon fill="blue" stroke="blue" points="1095.43,-3877.19 1104.84,-3872.32 1094.45,-3870.26 1095.43,-3877.19"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge172" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M747.63,-3666.65C805.92,-3669.96 870.44,-3685.04 912,-3729 962.75,-3782.68 880.12,-3841.41 932,-3894 972.18,-3934.73 1042.47,-3934.48 1088.11,-3928.97"/>
<polygon fill="blue" stroke="blue" points="1088.86,-3932.4 1098.3,-3927.6 1087.92,-3925.46 1088.86,-3932.4"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity(). -->
<g id="node162" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().</title>
<g id="a_node162"><a xlink:title="fn test_create_call_link_enforces_timestamp_granularity() { &#160;&#160;&#160;&#160;let randomness0: RandomnessBytes = [0x42u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let ra...">
<polygon fill="white" stroke="black" points="1325,-2737 941,-2737 941,-2701 1325,-2701 1325,-2737"/>
<text text-anchor="middle" x="1133" y="-2715.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_create_call_link_enforces_timestamp_granularity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="edge15" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1325.17,-2733.02C1409.02,-2739.17 1499.29,-2745.79 1547.95,-2749.36"/>
<polygon fill="blue" stroke="blue" points="1547.74,-2752.85 1557.97,-2750.09 1548.25,-2745.87 1547.74,-2752.85"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="edge14" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1318.44,-2737.12C1323.82,-2739.79 1329.02,-2742.74 1334,-2746 1348.34,-2755.4 1339.57,-2769.73 1354,-2779 1410.99,-2815.64 1492.61,-2815.74 1541.74,-2811.53"/>
<polygon fill="blue" stroke="blue" points="1542.09,-2815.02 1551.71,-2810.58 1541.43,-2808.05 1542.09,-2815.02"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential(). -->
<g id="node163" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().</title>
<g id="a_node163"><a xlink:title="fn test_auth_credential() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: RandomnessBytes = [0x...">
<polygon fill="white" stroke="black" points="1211,-2683 1055,-2683 1055,-2647 1211,-2647 1211,-2683"/>
<text text-anchor="middle" x="1133" y="-2661.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_auth_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify(). -->
<g id="edge133" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1211.1,-2656.43C1308.77,-2645.58 1473.19,-2627.31 1546.62,-2619.15"/>
<polygon fill="blue" stroke="blue" points="1547.23,-2622.61 1556.78,-2618.02 1546.45,-2615.65 1547.23,-2622.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="edge130" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1211.36,-2672.17C1251.74,-2671.88 1299.74,-2664.71 1334,-2638 1352.87,-2623.28 1335,-2602.55 1354,-2588 1398.1,-2554.22 1461.6,-2549.04 1510.71,-2551.43"/>
<polygon fill="blue" stroke="blue" points="1510.76,-2554.94 1520.96,-2552.04 1511.19,-2547.95 1510.76,-2554.94"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="edge131" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1211.04,-2674.64C1252.59,-2675.4 1301.8,-2668.45 1334,-2638 1368.2,-2605.66 1319.52,-2566.04 1354,-2534 1404.42,-2487.14 1490.27,-2490.88 1541.61,-2498.5"/>
<polygon fill="blue" stroke="blue" points="1541.28,-2501.99 1551.71,-2500.12 1542.38,-2495.08 1541.28,-2501.99"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present(). -->
<g id="edge132" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1211.1,-2665.69C1305.97,-2666.53 1463.82,-2667.93 1540.09,-2668.61"/>
<polygon fill="blue" stroke="blue" points="1540.26,-2672.11 1550.3,-2668.7 1540.33,-2665.11 1540.26,-2672.11"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity(). -->
<g id="node164" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().</title>
<g id="a_node164"><a xlink:title="fn test_auth_credential_enforces_timestamp_granularity() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;&#160;// cli...">
<polygon fill="white" stroke="black" points="1326,-2629 940,-2629 940,-2593 1326,-2593 1326,-2629"/>
<text text-anchor="middle" x="1133" y="-2607.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_auth_credential_enforces_timestamp_granularity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="edge195" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1296.14,-2592.98C1369.56,-2584.83 1452.69,-2575.59 1510.67,-2569.15"/>
<polygon fill="blue" stroke="blue" points="1511.28,-2572.6 1520.83,-2568.02 1510.51,-2565.64 1511.28,-2572.6"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="edge196" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1176.58,-2592.94C1220.31,-2575.16 1290.71,-2548.6 1354,-2534 1418.65,-2519.08 1495.52,-2512.18 1541.99,-2509.15"/>
<polygon fill="blue" stroke="blue" points="1542.23,-2512.65 1552,-2508.53 1541.8,-2505.66 1542.23,-2512.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response(). -->
<g id="node165" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().</title>
<g id="a_node165"><a xlink:title="fn test_create_call_link_request_response() { &#160;&#160;&#160;&#160;let randomness0: RandomnessBytes = [0x42u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: Ran...">
<polygon fill="white" stroke="black" points="1274.5,-2791 991.5,-2791 991.5,-2755 1274.5,-2755 1274.5,-2791"/>
<text text-anchor="middle" x="1133" y="-2769.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_create_call_link_request_response</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify(). -->
<g id="edge249" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1190.89,-2791.03C1234.99,-2804.4 1297.84,-2822.11 1354,-2833 1421.38,-2846.07 1501.16,-2853.71 1546.85,-2857.36"/>
<polygon fill="blue" stroke="blue" points="1546.65,-2860.85 1556.89,-2858.14 1547.19,-2853.87 1546.65,-2860.85"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="edge252" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1274.53,-2766.44C1369.7,-2762 1488.45,-2756.46 1547.35,-2753.71"/>
<polygon fill="blue" stroke="blue" points="1547.8,-2757.19 1557.63,-2753.23 1547.48,-2750.2 1547.8,-2757.19"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="edge251" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1274.53,-2783.31C1366.73,-2790.07 1481.07,-2798.45 1541.67,-2802.9"/>
<polygon fill="blue" stroke="blue" points="1541.76,-2806.41 1551.99,-2803.65 1542.27,-2799.43 1541.76,-2806.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present(). -->
<g id="edge250" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1161.08,-2791.18C1201.28,-2817.16 1279.97,-2864.3 1354,-2887 1416.9,-2906.28 1493.35,-2911.95 1540.34,-2913.52"/>
<polygon fill="blue" stroke="blue" points="1540.38,-2917.02 1550.48,-2913.81 1540.58,-2910.03 1540.38,-2917.02"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement(). -->
<g id="node166" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().</title>
<g id="a_node166"><a xlink:title="fn test_endorsement() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: RandomnessBytes = [0x45u8...">
<polygon fill="white" stroke="black" points="685,-949 543,-949 543,-913 685,-913 685,-949"/>
<text text-anchor="middle" x="614" y="-927.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_endorsement</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge17" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M685.03,-924.92C751,-923.08 848.87,-930.9 912,-984 931.91,-1000.74 911.86,-1022.53 932,-1039 978.45,-1076.99 1052.02,-1077.62 1095.8,-1073.85"/>
<polygon fill="blue" stroke="blue" points="1096.38,-1077.31 1105.98,-1072.85 1095.69,-1070.34 1096.38,-1077.31"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts(). -->
<g id="edge19" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_ciphertexts().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M685.01,-922.05C753.14,-917.63 854.54,-923.18 912,-984 963.04,-1038.01 879.83,-1097.08 932,-1150 957.07,-1175.43 993.89,-1184.89 1029.12,-1187.07"/>
<polygon fill="blue" stroke="blue" points="1029.36,-1190.58 1039.5,-1187.51 1029.65,-1183.59 1029.36,-1190.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge18" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_endorsement().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M685.24,-922.7C752.8,-918.93 853.11,-925.12 912,-984 947.76,-1019.75 895.49,-1061.01 932,-1096 957.84,-1120.77 994.91,-1130.07 1030.13,-1132.3"/>
<polygon fill="blue" stroke="blue" points="1030.35,-1135.81 1040.5,-1132.76 1030.66,-1128.82 1030.35,-1135.81"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group(). -->
<g id="node167" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().</title>
<g id="a_node167"><a xlink:title="fn test_single_member_group() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: RandomnessBytes =...">
<polygon fill="white" stroke="black" points="715.5,-895 512.5,-895 512.5,-859 715.5,-859 715.5,-895"/>
<text text-anchor="middle" x="614" y="-873.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_single_member_group</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge66" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M701.27,-859C767.58,-850.59 856.87,-851.9 912,-904 956.08,-945.66 889.15,-996.07 932,-1039 974.8,-1081.88 1050.77,-1080.58 1095.75,-1075.18"/>
<polygon fill="blue" stroke="blue" points="1096.21,-1078.65 1105.67,-1073.86 1095.29,-1071.71 1096.21,-1078.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge67" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_single_member_group().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M697.16,-858.99C764.26,-849.55 856.72,-849.45 912,-904 942.53,-934.13 902.13,-1065.21 932,-1096 957.2,-1121.98 994.62,-1131.39 1030.3,-1133.37"/>
<polygon fill="blue" stroke="blue" points="1030.18,-1136.87 1040.31,-1133.74 1030.44,-1129.87 1030.18,-1136.87"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations(). -->
<g id="node168" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().</title>
<g id="a_node168"><a xlink:title="fn test_client_rejects_bad_expirations() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: Random...">
<polygon fill="white" stroke="black" points="742.5,-841 485.5,-841 485.5,-805 742.5,-805 742.5,-841"/>
<text text-anchor="middle" x="614" y="-819.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_client_rejects_bad_expirations</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue(). -->
<g id="edge146" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M697.47,-804.97C764.53,-795.59 856.77,-795.58 912,-850 942.08,-879.64 902.79,-1008.49 932,-1039 974.01,-1082.88 1050.6,-1081.15 1095.83,-1075.42"/>
<polygon fill="blue" stroke="blue" points="1096.38,-1078.88 1105.79,-1074.03 1095.41,-1071.94 1096.38,-1078.88"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids(). -->
<g id="edge145" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_client_rejects_bad_expirations().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/groups/group_send_endorsement/impl#[GroupSendEndorsementsResponse]receive_with_service_ids().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M695.47,-804.97C762.92,-795.05 856.8,-794.27 912,-850 950.6,-888.97 894.26,-1056.2 932,-1096 956.96,-1122.32 994.43,-1131.77 1030.22,-1133.69"/>
<polygon fill="blue" stroke="blue" points="1030.14,-1137.18 1040.26,-1134.03 1030.39,-1130.19 1030.14,-1137.18"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile(). -->
<g id="node169" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().</title>
<g id="a_node169"><a xlink:title="fn test_integration_expiring_profile() { &#160;&#160;&#160;&#160;// SERVER &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params...">
<polygon fill="white" stroke="black" points="733.5,-1800 494.5,-1800 494.5,-1764 733.5,-1764 733.5,-1800"/>
<text text-anchor="middle" x="614" y="-1778.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_integration_expiring_profile</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential(). -->
<g id="edge41" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M733.53,-1770.25C787.92,-1764.8 853.24,-1758.17 912,-1752 936.1,-1749.47 961.67,-1746.73 986.53,-1744.04"/>
<polygon fill="blue" stroke="blue" points="987.2,-1747.48 996.76,-1742.93 986.44,-1740.52 987.2,-1747.48"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="edge40" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M733.61,-1782C793.64,-1782 868.06,-1782 936.28,-1782"/>
<polygon fill="blue" stroke="blue" points="936.3,-1785.5 946.3,-1782 936.3,-1778.5 936.3,-1785.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context(). -->
<g id="edge42" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_profile_key_credential_request_context().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M718.18,-1800.01C781.82,-1804.93 860.79,-1798.91 912,-1752 947.03,-1719.91 897.51,-1679.67 932,-1647 939.54,-1639.86 948,-1634.01 957.09,-1629.25"/>
<polygon fill="blue" stroke="blue" points="958.84,-1632.3 966.37,-1624.85 955.84,-1625.97 958.84,-1632.3"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential(). -->
<g id="edge43" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_expiring_profile_key_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M733.62,-1797.38C792.67,-1798.7 861.93,-1789.97 912,-1752 931.4,-1737.29 912.85,-1716.04 932,-1701 946.18,-1689.86 962.75,-1682.11 980.16,-1676.84"/>
<polygon fill="blue" stroke="blue" points="981.2,-1680.18 989.92,-1674.16 979.35,-1673.43 981.2,-1680.18"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="edge39" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M733.59,-1791.92C787.99,-1796.69 853.31,-1802.73 912,-1809 934.17,-1811.37 957.56,-1814.05 980.5,-1816.77"/>
<polygon fill="blue" stroke="blue" points="980.31,-1820.27 990.65,-1817.99 981.14,-1813.32 980.31,-1820.27"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc(). -->
<g id="node170" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().</title>
<g id="a_node170"><a xlink:title="fn test_integration_auth_zkc() { &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params.get_public_params(); ...">
<polygon fill="white" stroke="black" points="711,-1962 517,-1962 517,-1926 711,-1926 711,-1962"/>
<text text-anchor="middle" x="614" y="-1940.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_integration_auth_zkc</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="edge57" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M711.25,-1932.46C778.27,-1930.34 863.94,-1940.58 912,-1997 954.84,-2047.29 888.11,-3136.63 932,-3186 970.31,-3229.09 1042,-3227.94 1088.34,-3221.62"/>
<polygon fill="blue" stroke="blue" points="1089.02,-3225.06 1098.39,-3220.11 1087.98,-3218.13 1089.02,-3225.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="edge54" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M711.13,-1932.57C778.09,-1930.49 863.74,-1940.75 912,-1997 942,-2031.96 912.22,-2784.39 932,-2826 965.35,-2896.16 1042.64,-2948.56 1090.78,-2975.84"/>
<polygon fill="blue" stroke="blue" points="1089.26,-2979 1099.7,-2980.8 1092.66,-2972.88 1089.26,-2979"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="edge58" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M711.24,-1932.47C778.25,-1930.35 863.92,-1940.6 912,-1997 952.91,-2044.99 890.08,-3084.88 932,-3132 972.08,-3177.05 1048.66,-3173.73 1094.55,-3166.72"/>
<polygon fill="blue" stroke="blue" points="1095.39,-3170.13 1104.68,-3165.03 1094.24,-3163.22 1095.39,-3170.13"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="edge55" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M711.21,-1932.5C778.21,-1930.39 863.87,-1940.64 912,-1997 949.06,-2040.39 894.03,-2981.4 932,-3024 962.93,-3058.7 1015.51,-3064.68 1059,-3062.4"/>
<polygon fill="blue" stroke="blue" points="1059.24,-3065.89 1068.98,-3061.72 1058.77,-3058.91 1059.24,-3065.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation(). -->
<g id="edge56" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_auth_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M711.27,-1943.01C772.9,-1946.55 852.23,-1959.23 912,-1997 924.93,-2005.17 918.9,-2017.11 932,-2025 950,-2035.85 970.56,-2043.1 991.47,-2047.84"/>
<polygon fill="blue" stroke="blue" points="990.92,-2051.3 1001.43,-2049.9 992.35,-2044.44 990.92,-2051.3"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify(). -->
<g id="node171" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().</title>
<g id="a_node171"><a xlink:title="fn test_profile_key_credential_presentation_v1_does_not_verify() { &#160;&#160;&#160;&#160;// Originally from test_integration_profile. &#160;&#160;&#160;&#160;// SERVER &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(z...">
<polygon fill="white" stroke="black" points="829.5,-1854 398.5,-1854 398.5,-1818 829.5,-1818 829.5,-1854"/>
<text text-anchor="middle" x="614" y="-1832.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_credential_presentation_v1_does_not_verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="edge214" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M829.76,-1836C876.83,-1836 925.9,-1836 970.47,-1836"/>
<polygon fill="blue" stroke="blue" points="970.5,-1839.5 980.5,-1836 970.5,-1832.5 970.5,-1839.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs(). -->
<g id="node172" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().</title>
<g id="a_node172"><a xlink:title="fn test_server_sigs() { &#160;&#160;&#160;&#160;let server_secret_params = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;zkgroup::api::server_params::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params.ge...">
<polygon fill="white" stroke="black" points="678,-1908 550,-1908 550,-1872 678,-1872 678,-1908"/>
<text text-anchor="middle" x="614" y="-1886.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_sigs</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature(). -->
<g id="edge296" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]verify_signature().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M678.14,-1890C774.23,-1890 956.76,-1890 1058.62,-1890"/>
<polygon fill="blue" stroke="blue" points="1058.82,-1893.5 1068.82,-1890 1058.82,-1886.5 1058.82,-1893.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign(). -->
<g id="edge297" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_server_sigs().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]sign().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M678.18,-1877.71C743.53,-1868.76 845.19,-1865.86 912,-1917 932.32,-1932.56 912.02,-1955 932,-1971 978.62,-2008.33 1051.82,-2007.92 1095.54,-2003.48"/>
<polygon fill="blue" stroke="blue" points="1096.18,-2006.92 1105.72,-2002.31 1095.39,-1999.97 1096.18,-2006.92"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api(). -->
<g id="node173" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().</title>
<g id="a_node173"><a xlink:title="fn test_api() { &#160;&#160;&#160;&#160;let randomness0: RandomnessBytes = [0x42u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOM...">
<polygon fill="white" stroke="black" points="649.5,-1086 578.5,-1086 578.5,-1050 649.5,-1050 649.5,-1086"/>
<text text-anchor="middle" x="614" y="-1064.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_api</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential(). -->
<g id="edge84" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]issue_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M649.75,-1062.16C712.63,-1053.79 844.95,-1046.75 912,-1121 951.88,-1165.16 895.78,-1340.79 932,-1388 955.95,-1419.21 994.79,-1436.56 1031.9,-1446.19"/>
<polygon fill="blue" stroke="blue" points="1031.26,-1449.63 1041.8,-1448.59 1032.91,-1442.83 1031.26,-1449.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential(). -->
<g id="edge83" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]receive_receipt_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M649.95,-1061.98C713.14,-1053.34 845.96,-1045.86 912,-1121 942.69,-1155.93 900.57,-1504.73 932,-1539 955.49,-1564.62 990.81,-1574.43 1025.27,-1576.85"/>
<polygon fill="blue" stroke="blue" points="1025.27,-1580.35 1035.43,-1577.36 1025.62,-1573.36 1025.27,-1580.35"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation(). -->
<g id="edge82" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M649.89,-1062.03C713,-1053.46 845.69,-1046.09 912,-1121 965.69,-1181.66 877.03,-1425.49 932,-1485 945.63,-1499.75 963.18,-1509.25 982.21,-1515.11"/>
<polygon fill="blue" stroke="blue" points="981.4,-1518.52 991.97,-1517.78 983.25,-1511.77 981.4,-1518.52"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation(). -->
<g id="edge85" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_api().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_receipt_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M649.61,-1061.91C712.87,-1053 846.65,-1044.91 912,-1121 969.65,-1188.11 872.94,-1851.12 932,-1917 945.92,-1932.53 964.17,-1942.29 984,-1948.14"/>
<polygon fill="blue" stroke="blue" points="983.28,-1951.57 993.84,-1950.7 985.05,-1944.79 983.28,-1951.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response(). -->
<g id="node174" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().</title>
<g id="a_node174"><a xlink:title="fn test_request_response() { &#160;&#160;&#160;&#160;let mut sho = Sho::new(b&#39; Test_Receipt_Credential_Request&#39; , b&#39; &#39; ); &#160;&#160;&#160;&#160;&#160;// client receives in response to initial request &#160;&#160;&#160;&#160;let receipt_expiration_time: Timestamp ...">
<polygon fill="white" stroke="black" points="700,-1032 528,-1032 528,-996 700,-996 700,-1032"/>
<text text-anchor="middle" x="614" y="-1010.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_request_response</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new(). -->
<g id="edge217" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M699.42,-1032.01C766.95,-1040.98 858.84,-1040 912,-984 943.48,-950.84 898.89,-604.53 932,-573 967.56,-539.13 1780.88,-538.67 1816,-573 1851.17,-607.38 1806.23,-1418.86 1836,-1458 1850.62,-1477.22 1877.14,-1484.54 1899.12,-1487.15"/>
<polygon fill="blue" stroke="blue" points="1898.89,-1490.65 1909.16,-1488.07 1899.52,-1483.68 1898.89,-1490.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new(). -->
<g id="edge215" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M695.46,-995.98C762.9,-986.07 856.77,-985.3 912,-1041 950.15,-1079.48 892.94,-1246.44 932,-1284 1002.87,-1352.14 1744.42,-1254.61 1816,-1322 1847.39,-1351.56 1808.07,-1482.15 1836,-1515 1851.34,-1533.05 1877.41,-1539.65 1899.02,-1541.82"/>
<polygon fill="blue" stroke="blue" points="1898.98,-1545.33 1909.2,-1542.56 1899.48,-1538.34 1898.98,-1545.33"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify(). -->
<g id="edge216" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialPresentationProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M694.33,-995.97C761.99,-985.75 856.83,-984.52 912,-1041 958.22,-1088.32 886.03,-1290.43 932,-1338 1069.22,-1479.99 1679.59,-1285.23 1816,-1428 1870.89,-1485.45 1785.98,-1723.26 1836,-1785 1850.72,-1803.17 1876.32,-1809.82 1897.87,-1811.99"/>
<polygon fill="blue" stroke="blue" points="1897.83,-1815.49 1908.06,-1812.72 1898.33,-1808.51 1897.83,-1815.49"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify(). -->
<g id="edge218" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ReceiptCredentialIssuanceProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M694.9,-995.97C762.46,-985.9 856.81,-984.9 912,-1041 954.04,-1083.73 889.24,-1267.99 932,-1310 1002.18,-1378.95 1745.76,-1291.11 1816,-1360 1857.85,-1401.04 1798.65,-1577.83 1836,-1623 1850.9,-1641.02 1876.5,-1647.68 1898,-1649.88"/>
<polygon fill="blue" stroke="blue" points="1897.93,-1653.39 1908.16,-1650.63 1898.45,-1646.4 1897.93,-1653.39"/>
</g>
</g>
</svg>
