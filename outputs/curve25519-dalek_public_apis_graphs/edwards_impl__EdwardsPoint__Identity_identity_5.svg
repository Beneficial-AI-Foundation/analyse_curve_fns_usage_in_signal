<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: function_subgraph Pages: 1 -->
<svg width="2965pt" height="1643pt"
 viewBox="0.00 0.00 2965.00 1642.82" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1638.82)">
<title>function_subgraph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1638.82 2961,-1638.82 2961,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="2412,-1141 2412,-1216 2604,-1216 2604,-1141 2412,-1141"/>
<text text-anchor="middle" x="2508" y="-1200.8" font-family="Helvetica,sans-Serif" font-size="14.00">mod.rs</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="2645,-972 2645,-1047 2787,-1047 2787,-972 2645,-972"/>
<text text-anchor="middle" x="2716" y="-1031.8" font-family="Helvetica,sans-Serif" font-size="14.00">straus.rs</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_2</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="2807,-515 2807,-644 2949,-644 2949,-515 2807,-515"/>
<text text-anchor="middle" x="2878" y="-628.8" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_3</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="2437,-277 2437,-406 2758.5,-406 2758.5,-277 2437,-277"/>
<text text-anchor="middle" x="2597.75" y="-390.8" font-family="Helvetica,sans-Serif" font-size="14.00">ristretto.rs</text>
</g>
<g id="clust5" class="cluster">
<title>cluster_4</title>
<polygon fill="lightblue" stroke="lightblue" points="138,-419 138,-1196 734,-1196 734,-419 138,-419"/>
<text text-anchor="middle" x="436" y="-1180.8" font-family="Helvetica,sans-Serif" font-size="14.00">zkgroup.rs</text>
</g>
<g id="clust6" class="cluster">
<title>cluster_5</title>
<polygon fill="lightblue" stroke="lightblue" points="1988.5,-303 1988.5,-378 2252.5,-378 2252.5,-303 1988.5,-303"/>
<text text-anchor="middle" x="2120.5" y="-362.8" font-family="Helvetica,sans-Serif" font-size="14.00">statement.rs</text>
</g>
<g id="clust7" class="cluster">
<title>cluster_6</title>
<polygon fill="lightblue" stroke="lightblue" points="1870,-220 1870,-295 2371,-295 2371,-220 1870,-220"/>
<text text-anchor="middle" x="2120.5" y="-279.8" font-family="Helvetica,sans-Serif" font-size="14.00">attributes.rs</text>
</g>
<g id="clust8" class="cluster">
<title>cluster_7</title>
<polygon fill="lightblue" stroke="lightblue" points="2053.5,-137 2053.5,-212 2187.5,-212 2187.5,-137 2053.5,-137"/>
<text text-anchor="middle" x="2120.5" y="-196.8" font-family="Helvetica,sans-Serif" font-size="14.00">endorsements.rs</text>
</g>
<g id="clust9" class="cluster">
<title>cluster_8</title>
<polygon fill="lightblue" stroke="lightblue" points="1718,-452 1718,-635 2237.5,-635 2237.5,-452 1718,-452"/>
<text text-anchor="middle" x="1977.75" y="-619.8" font-family="Helvetica,sans-Serif" font-size="14.00">issuance.rs</text>
</g>
<g id="clust10" class="cluster">
<title>cluster_9</title>
<polygon fill="lightblue" stroke="lightblue" points="1718,-1141 1718,-1270 2205.5,-1270 2205.5,-1141 1718,-1141"/>
<text text-anchor="middle" x="1961.75" y="-1254.8" font-family="Helvetica,sans-Serif" font-size="14.00">blind.rs</text>
</g>
<g id="clust11" class="cluster">
<title>cluster_10</title>
<polygon fill="lightblue" stroke="lightblue" points="1658,-842 1658,-1133 2625,-1133 2625,-842 1658,-842"/>
<text text-anchor="middle" x="2141.5" y="-1117.8" font-family="Helvetica,sans-Serif" font-size="14.00">presentation.rs</text>
</g>
<g id="clust12" class="cluster">
<title>cluster_11</title>
<polygon fill="lightblue" stroke="lightblue" points="0,-118 0,-193 118,-193 118,-118 0,-118"/>
<text text-anchor="middle" x="59" y="-177.8" font-family="Helvetica,sans-Serif" font-size="14.00">serialization.rs</text>
</g>
<g id="clust13" class="cluster">
<title>cluster_12</title>
<polygon fill="lightblue" stroke="lightblue" points="314,-91 314,-220 558,-220 558,-91 314,-91"/>
<text text-anchor="middle" x="436" y="-204.8" font-family="Helvetica,sans-Serif" font-size="14.00">zkgroup_benchmarks.rs</text>
</g>
<g id="clust14" class="cluster">
<title>cluster_13</title>
<polygon fill="lightblue" stroke="lightblue" points="333.5,-8 333.5,-83 539.5,-83 539.5,-8 333.5,-8"/>
<text text-anchor="middle" x="436.5" y="-67.8" font-family="Helvetica,sans-Serif" font-size="14.00">auth_credential_with_pni.rs</text>
</g>
<g id="clust15" class="cluster">
<title>cluster_14</title>
<polygon fill="lightblue" stroke="lightblue" points="863,-32 863,-323 1507.5,-323 1507.5,-32 863,-32"/>
<text text-anchor="middle" x="1185.25" y="-307.8" font-family="Helvetica,sans-Serif" font-size="14.00">zkc.rs</text>
</g>
<g id="clust16" class="cluster">
<title>cluster_15</title>
<polygon fill="lightblue" stroke="lightblue" points="287,-1287 287,-1578 1448,-1578 1448,-1287 287,-1287"/>
<text text-anchor="middle" x="867.5" y="-1562.8" font-family="Helvetica,sans-Serif" font-size="14.00">auth_credential.rs</text>
</g>
<g id="clust17" class="cluster">
<title>cluster_16</title>
<polygon fill="lightblue" stroke="lightblue" points="1335,-498 1335,-735 1479,-735 1479,-498 1335,-498"/>
<text text-anchor="middle" x="1407" y="-719.8" font-family="Helvetica,sans-Serif" font-size="14.00">auth_credential.rs</text>
</g>
<g id="clust18" class="cluster">
<title>cluster_17</title>
<polygon fill="lightblue" stroke="lightblue" points="1331.5,-1042 1331.5,-1279 1483.5,-1279 1483.5,-1042 1331.5,-1042"/>
<text text-anchor="middle" x="1407.5" y="-1263.8" font-family="Helvetica,sans-Serif" font-size="14.00">create_credential.rs</text>
</g>
<g id="clust19" class="cluster">
<title>cluster_18</title>
<polygon fill="lightblue" stroke="lightblue" points="760.5,-361 760.5,-490 1599.5,-490 1599.5,-361 760.5,-361"/>
<text text-anchor="middle" x="1180" y="-474.8" font-family="Helvetica,sans-Serif" font-size="14.00">server_params.rs</text>
</g>
<g id="clust20" class="cluster">
<title>cluster_19</title>
<polygon fill="lightblue" stroke="lightblue" points="1715,-315 1715,-444 1793,-444 1793,-315 1715,-315"/>
<text text-anchor="middle" x="1754" y="-428.8" font-family="Helvetica,sans-Serif" font-size="14.00">proofs.rs</text>
</g>
<g id="clust21" class="cluster">
<title>cluster_20</title>
<polygon fill="lightblue" stroke="lightblue" points="1176,-743 1176,-1034 1638,-1034 1638,-743 1176,-743"/>
<text text-anchor="middle" x="1407" y="-1018.8" font-family="Helvetica,sans-Serif" font-size="14.00">zkcredential_examples.rs</text>
</g>
<g id="clust22" class="cluster">
<title>cluster_21</title>
<polygon fill="lightblue" stroke="lightblue" points="294.5,-1204 294.5,-1279 577.5,-1279 577.5,-1204 294.5,-1204"/>
<text text-anchor="middle" x="436" y="-1263.8" font-family="Helvetica,sans-Serif" font-size="14.00">backup_auth_flow.rs</text>
</g>
<g id="clust23" class="cluster">
<title>cluster_22</title>
<polygon fill="lightblue" stroke="lightblue" points="754,-728 754,-965 1156,-965 1156,-728 754,-728"/>
<text text-anchor="middle" x="955" y="-949.8" font-family="Helvetica,sans-Serif" font-size="14.00">call_link_flow.rs</text>
</g>
<g id="clust24" class="cluster">
<title>cluster_23</title>
<polygon fill="lightblue" stroke="lightblue" points="212.5,-228 212.5,-411 659.5,-411 659.5,-228 212.5,-228"/>
<text text-anchor="middle" x="436" y="-395.8" font-family="Helvetica,sans-Serif" font-size="14.00">integration_tests.rs</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().</title>
<g id="a_node1"><a xlink:title="pub fn straus_multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint where &#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;I::Item: core::borrow::Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;J::Item: core::borrow::Borrow&lt;...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2596,-1185 2420,-1185 2420,-1149 2596,-1149 2596,-1185"/>
<text text-anchor="middle" x="2508" y="-1163.3" font-family="Helvetica,sans-Serif" font-size="14.00">straus_multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node2"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;EdwardsPoint&gt;, ...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2779,-1016 2653,-1016 2653,-980 2779,-980 2779,-1016"/>
<text text-anchor="middle" x="2716" y="-994.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul(). -->
<g id="edge102" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2596.17,-1152.15C2606.42,-1148.22 2616.31,-1143.26 2625,-1137 2664.14,-1108.78 2690.64,-1057.82 2704.26,-1026.06"/>
<polygon fill="gray" stroke="gray" points="2707.63,-1027.06 2708.22,-1016.48 2701.16,-1024.38 2707.63,-1027.06"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity(). -->
<g id="node3" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity().</title>
<g id="a_node3"><a xlink:title=" &#160;&#160;&#160;fn identity() &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;X: FieldElement::ZERO, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Y: FieldElement::ONE, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Z: FieldElement::ONE, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;T: FieldElement::ZERO, &#160;&#160;&#160;...">
<polygon fill="green" stroke="black" stroke-dasharray="1,5" points="2912.5,-613 2843.5,-613 2843.5,-577 2912.5,-577 2912.5,-613"/>
<text text-anchor="middle" x="2878" y="-591.3" font-family="Helvetica,sans-Serif" font-size="14.00">identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity(). -->
<g id="edge104" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/serial/scalar_mul/straus/impl#[Straus][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2724.19,-979.9C2749.62,-915.85 2835.46,-699.62 2866.06,-622.56"/>
<polygon fill="gray" stroke="gray" points="2869.4,-623.63 2869.83,-613.05 2862.89,-621.05 2869.4,-623.63"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="node4" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node4"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; EdwardsPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;EdwardsPoint&gt;, ...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2941,-559 2815,-559 2815,-523 2941,-523 2941,-559"/>
<text text-anchor="middle" x="2878" y="-537.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul(). -->
<g id="edge176" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/straus_multiscalar_mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2818.51,-559.05C2814.34,-561.65 2810.44,-564.62 2807,-568 2670.25,-702.49 2692.7,-782.22 2645,-968 2635.6,-1004.63 2649.87,-1108.51 2625,-1137 2619.52,-1143.28 2612.91,-1148.33 2605.66,-1152.38"/>
<polygon fill="gray" stroke="gray" points="2603.64,-1149.47 2596.17,-1156.99 2606.7,-1155.77 2603.64,-1149.47"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="node5" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<g id="a_node5"><a xlink:title=" &#160;&#160;&#160;fn multiscalar_mul&lt;I, J&gt;(scalars: I, points: J) &#45;&gt; RistrettoPoint &#160;&#160;&#160;&#160;where &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I::Item: Borrow&lt;Scalar&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J: IntoIterator, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;J::Item: Borrow&lt;RistrettoPoin...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2571,-321 2445,-321 2445,-285 2571,-285 2571,-321"/>
<text text-anchor="middle" x="2508" y="-299.3" font-family="Helvetica,sans-Serif" font-size="14.00">multiscalar_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge149" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2571.13,-292.13C2632.04,-285.06 2724.61,-284.3 2787,-330 2847.06,-373.99 2867.4,-466.25 2874,-512.82"/>
<polygon fill="gray" stroke="gray" points="2870.54,-513.37 2875.3,-522.83 2877.48,-512.46 2870.54,-513.37"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Default]default(). -->
<g id="node6" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Default]default().</title>
<g id="a_node6"><a xlink:title=" &#160;&#160;&#160;fn default() &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RistrettoPoint::identity() &#160;&#160;&#160;&#160;}">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2540.5,-375 2475.5,-375 2475.5,-339 2540.5,-339 2540.5,-375"/>
<text text-anchor="middle" x="2508" y="-353.3" font-family="Helvetica,sans-Serif" font-size="14.00">default</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="node7" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<g id="a_node7"><a xlink:title=" &#160;&#160;&#160;fn identity() &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RistrettoPoint(EdwardsPoint::identity()) &#160;&#160;&#160;&#160;}">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="2750.5,-375 2681.5,-375 2681.5,-339 2750.5,-339 2750.5,-375"/>
<text text-anchor="middle" x="2716" y="-353.3" font-family="Helvetica,sans-Serif" font-size="14.00">identity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Default]default().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge152" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Default]default().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2540.74,-357C2575.65,-357 2631.99,-357 2671.12,-357"/>
<polygon fill="gray" stroke="gray" points="2671.17,-360.5 2681.17,-357 2671.17,-353.5 2671.17,-360.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity(). -->
<g id="edge154" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint][Identity]identity().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M2719.86,-375.23C2727.11,-415.5 2749.84,-512.81 2807,-568 2814.45,-575.19 2824.02,-580.52 2833.68,-584.45"/>
<polygon fill="gray" stroke="gray" points="2832.7,-587.82 2843.3,-587.93 2835.08,-581.24 2832.7,-587.82"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse(). -->
<g id="node8" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse().</title>
<g id="a_node8"><a xlink:title="fn BackupAuthCredentialRequestContext_ReceiveResponse( &#160;&#160;&#160;&#160;context_bytes: &amp;[u8], &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;expected_redemption_time: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGro...">
<polygon fill="white" stroke="black" points="640,-1003 232,-1003 232,-967 640,-967 640,-1003"/>
<text text-anchor="middle" x="436" y="-981.3" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialRequestContext_ReceiveResponse</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="node66" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<g id="a_node66"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: BackupAuthCredentialResponse, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expected_redemption_time: Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;BackupAuthCre...">
<polygon fill="white" stroke="black" points="1440,-1331 1374,-1331 1374,-1295 1440,-1295 1440,-1331"/>
<text text-anchor="middle" x="1407" y="-1309.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge9" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M526,-966.99C591.79,-959.2 679.12,-961.35 734,-1012 772.44,-1047.48 717.44,-1090.58 754,-1128 881.24,-1258.24 1023.24,-1082.38 1156,-1207 1181.47,-1230.9 1149.78,-1259.93 1176,-1283 1227.62,-1328.42 1312.69,-1326.6 1363.63,-1320.35"/>
<polygon fill="blue" stroke="blue" points="1364.21,-1323.8 1373.65,-1319.01 1363.28,-1316.86 1364.21,-1323.8"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify(). -->
<g id="node9" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify().</title>
<g id="a_node9"><a xlink:title="fn CallLinkAuthCredentialPresentation_Verify( &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;(), ZkGroupVerificationF...">
<polygon fill="white" stroke="black" points="589,-679 283,-679 283,-643 589,-643 589,-679"/>
<text text-anchor="middle" x="436" y="-657.3" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredentialPresentation_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify(). -->
<g id="node68" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().</title>
<g id="a_node68"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerifi...">
<polygon fill="white" stroke="black" points="1435,-650 1379,-650 1379,-614 1435,-614 1435,-650"/>
<text text-anchor="middle" x="1407" y="-628.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify(). -->
<g id="edge14" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M589.21,-656.44C819.04,-649.57 1241.39,-636.93 1368.71,-633.12"/>
<polygon fill="blue" stroke="blue" points="1368.85,-636.61 1378.74,-632.82 1368.64,-629.62 1368.85,-636.61"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic(). -->
<g id="node10" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic().</title>
<g id="a_node10"><a xlink:title="fn CreateCallLinkCredential_PresentDeterministic( &#160;&#160;&#160;&#160;credential_bytes: &amp;[u8], &#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: ...">
<polygon fill="white" stroke="black" points="604,-949 268,-949 268,-913 604,-913 604,-949"/>
<text text-anchor="middle" x="436" y="-927.3" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredential_PresentDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present(). -->
<g id="node72" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().</title>
<g id="a_node72"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkSecretParams, &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1441.5,-1248 1372.5,-1248 1372.5,-1212 1441.5,-1212 1441.5,-1248"/>
<text text-anchor="middle" x="1407" y="-1226.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present(). -->
<g id="edge17" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M523.89,-912.98C590.09,-904.7 678.95,-906.2 734,-958 776.89,-998.36 711.78,-1047.94 754,-1089 883.06,-1214.53 1017.81,-1023.59 1156,-1139 1178.87,-1158.1 1153.06,-1183.98 1176,-1203 1228.26,-1246.34 1311.65,-1244.25 1362.36,-1237.81"/>
<polygon fill="blue" stroke="blue" points="1362.93,-1241.26 1372.36,-1236.43 1361.98,-1234.33 1362.93,-1241.26"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify(). -->
<g id="node11" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify().</title>
<g id="a_node11"><a xlink:title="fn BackupAuthCredentialPresentation_Verify( &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;let presentation = binc...">
<polygon fill="white" stroke="black" points="587.5,-1111 284.5,-1111 284.5,-1075 587.5,-1075 587.5,-1111"/>
<text text-anchor="middle" x="436" y="-1089.3" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialPresentation_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="node64" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<g id="a_node64"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let acceptable_start_tim...">
<polygon fill="white" stroke="black" points="983,-1439 927,-1439 927,-1403 983,-1403 983,-1439"/>
<text text-anchor="middle" x="955" y="-1417.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge22" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M516.92,-1074.95C584.49,-1064.87 678.85,-1063.86 734,-1120 776.78,-1163.55 712.17,-1349.53 754,-1394 795.31,-1437.92 871.46,-1434.99 916.94,-1428.36"/>
<polygon fill="blue" stroke="blue" points="917.66,-1431.79 926.98,-1426.76 916.56,-1424.87 917.66,-1431.79"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic(). -->
<g id="node12" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic().</title>
<g id="a_node12"><a xlink:title="fn BackupAuthCredential_PresentDeterministic( &#160;&#160;&#160;&#160;credential_bytes: &amp;[u8], &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="596.5,-1165 275.5,-1165 275.5,-1129 596.5,-1129 596.5,-1165"/>
<text text-anchor="middle" x="436" y="-1143.3" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredential_PresentDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="node56" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<g id="a_node56"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; BackupAuthCredentialPresentation { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BackupAuthCredentialPrese...">
<polygon fill="white" stroke="black" points="989.5,-1493 920.5,-1493 920.5,-1457 989.5,-1457 989.5,-1493"/>
<text text-anchor="middle" x="955" y="-1471.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge23" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M596.54,-1139.13C647.35,-1145.16 699.31,-1161.81 734,-1200 771.17,-1240.93 715.97,-1407.87 754,-1448 793.55,-1489.73 864.57,-1489.06 910.46,-1483.2"/>
<polygon fill="blue" stroke="blue" points="911.01,-1486.65 920.42,-1481.79 910.03,-1479.72 911.01,-1486.65"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic(). -->
<g id="node13" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic().</title>
<g id="a_node13"><a xlink:title="fn CreateCallLinkCredentialRequest_IssueDeterministic( &#160;&#160;&#160;&#160;request_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;timestamp: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Vec&lt;u8...">
<polygon fill="white" stroke="black" points="624.5,-841 247.5,-841 247.5,-805 624.5,-805 624.5,-841"/>
<text text-anchor="middle" x="436" y="-819.3" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialRequest_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="node74" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<g id="a_node74"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;timestamp: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; CreateCal...">
<polygon fill="white" stroke="black" points="1434,-1140 1380,-1140 1380,-1104 1434,-1104 1434,-1140"/>
<text text-anchor="middle" x="1407" y="-1118.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="edge32" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M521.52,-804.97C588.18,-796.11 678.83,-796.82 734,-850 784.33,-898.51 704.78,-956.36 754,-1006 880.97,-1134.05 1005.91,-961.04 1156,-1061 1170.59,-1070.72 1161.32,-1085.42 1176,-1095 1235.14,-1133.57 1321.37,-1131.93 1369.7,-1127.1"/>
<polygon fill="blue" stroke="blue" points="1370.14,-1130.57 1379.7,-1125.99 1369.38,-1123.61 1370.14,-1130.57"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive(). -->
<g id="node14" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive().</title>
<g id="a_node14"><a xlink:title="fn CallLinkAuthCredentialResponse_Receive( &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGroupVerificationFailure&gt; { &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="586.5,-571 285.5,-571 285.5,-535 586.5,-535 586.5,-571"/>
<text text-anchor="middle" x="436" y="-549.3" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredentialResponse_Receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="node67" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<g id="a_node67"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;CallLinkAuthCredential, ZkGroupV...">
<polygon fill="white" stroke="black" points="1440,-542 1374,-542 1374,-506 1440,-506 1440,-542"/>
<text text-anchor="middle" x="1407" y="-520.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="edge33" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_Receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M586.55,-548.52C812.76,-541.75 1229.76,-529.27 1363.52,-525.27"/>
<polygon fill="blue" stroke="blue" points="1363.87,-528.76 1373.76,-524.96 1363.66,-521.77 1363.87,-528.76"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation(). -->
<g id="node15" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation().</title>
<g id="a_node15"><a xlink:title="fn ServerSecretParams_VerifyProfileKeyCredentialPresentation( &#160;&#160;&#160;&#160;server_secret_params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;group_public_params: Serialized&lt;GroupPublicParams&gt;, &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="649.5,-463 222.5,-463 222.5,-427 649.5,-427 649.5,-463"/>
<text text-anchor="middle" x="436" y="-441.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerSecretParams_VerifyProfileKeyCredentialPresentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="node75" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<g id="a_node75"><a xlink:title=" &#160;&#160;&#160;pub fn verify_profile_key_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: api::groups::GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::profiles::AnyProfileKeyCredentialPresenta...">
<polygon fill="white" stroke="black" points="1107.5,-405 802.5,-405 802.5,-369 1107.5,-369 1107.5,-405"/>
<text text-anchor="middle" x="955" y="-383.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_profile_key_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="edge74" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerSecretParams_VerifyProfileKeyCredentialPresentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M622.84,-426.98C659.69,-423.19 698.09,-419.1 734,-415 757.54,-412.31 782.46,-409.3 806.76,-406.28"/>
<polygon fill="blue" stroke="blue" points="807.27,-409.74 816.76,-405.02 806.4,-402.79 807.27,-409.74"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse(). -->
<g id="node16" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse().</title>
<g id="a_node16"><a xlink:title="fn CreateCallLinkCredentialRequestContext_ReceiveResponse( &#160;&#160;&#160;&#160;context_bytes: &amp;[u8], &#160;&#160;&#160;&#160;response_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;Vec&lt;u8&gt;, ZkGroupVerificationFailu...">
<polygon fill="white" stroke="black" points="647.5,-787 224.5,-787 224.5,-751 647.5,-751 647.5,-787"/>
<text text-anchor="middle" x="436" y="-765.3" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialRequestContext_ReceiveResponse</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="node71" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<g id="a_node71"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;response: CreateCallLinkCredentialResponse, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;CreateCallLinkCr...">
<polygon fill="white" stroke="black" points="1440,-1086 1374,-1086 1374,-1050 1440,-1050 1440,-1086"/>
<text text-anchor="middle" x="1407" y="-1064.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="edge75" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialRequestContext_ReceiveResponse().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M520.35,-750.97C587.23,-741.81 678.79,-742.12 734,-796 789.4,-850.06 698.63,-914.91 754,-969 818.17,-1031.69 1079.61,-958.96 1156,-1006 1170.28,-1014.79 1161.89,-1028.94 1176,-1038 1232.98,-1074.6 1314.34,-1076.06 1363.47,-1072.75"/>
<polygon fill="blue" stroke="blue" points="1364.04,-1076.22 1373.74,-1071.96 1363.5,-1069.24 1364.04,-1076.22"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic(). -->
<g id="node17" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic().</title>
<g id="a_node17"><a xlink:title="fn BackupAuthCredentialRequest_IssueDeterministic( &#160;&#160;&#160;&#160;request_bytes: &amp;[u8], &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;backup_level: AsType&lt;BackupLevel, u8&gt;, &#160;&#160;&#160;&#160;credential_type: AsType&lt;BackupCredentialType...">
<polygon fill="white" stroke="black" points="617,-1057 255,-1057 255,-1021 617,-1021 617,-1057"/>
<text text-anchor="middle" x="436" y="-1035.3" font-family="Helvetica,sans-Serif" font-size="14.00">BackupAuthCredentialRequest_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="node59" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<g id="a_node59"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;backup_level: BackupLevel, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_type: BackupCredentialType, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1434,-1385 1380,-1385 1380,-1349 1434,-1349 1434,-1385"/>
<text text-anchor="middle" x="1407" y="-1363.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge101" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/BackupAuthCredentialRequest_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M526.32,-1020.97C592.06,-1013.25 679.18,-1015.47 734,-1066 772.15,-1101.16 716.97,-1144.67 754,-1181 883.05,-1307.6 1024.99,-1118.43 1156,-1243 1187.9,-1273.33 1143.56,-1310.25 1176,-1340 1228.84,-1388.45 1319.66,-1382.51 1369.91,-1374.44"/>
<polygon fill="blue" stroke="blue" points="1370.73,-1377.85 1379.99,-1372.7 1369.54,-1370.95 1370.73,-1377.85"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic(). -->
<g id="node18" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic().</title>
<g id="a_node18"><a xlink:title="fn CallLinkAuthCredential_PresentDeterministic( &#160;&#160;&#160;&#160;credential_bytes: &amp;[u8], &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;ra...">
<polygon fill="white" stroke="black" points="598,-733 274,-733 274,-697 598,-697 598,-733"/>
<text text-anchor="middle" x="436" y="-711.3" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredential_PresentDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present(). -->
<g id="node69" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().</title>
<g id="a_node69"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkSecre...">
<polygon fill="white" stroke="black" points="1441.5,-704 1372.5,-704 1372.5,-668 1441.5,-668 1441.5,-704"/>
<text text-anchor="middle" x="1407" y="-682.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present(). -->
<g id="edge111" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredential_PresentDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M598.1,-710.18C825.76,-703.37 1228.76,-691.3 1361.93,-687.32"/>
<polygon fill="blue" stroke="blue" points="1362.25,-690.81 1372.14,-687.01 1362.04,-683.81 1362.25,-690.81"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify(). -->
<g id="node19" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify().</title>
<g id="a_node19"><a xlink:title="fn CreateCallLinkCredentialPresentation_Verify( &#160;&#160;&#160;&#160;presentation_bytes: &amp;[u8], &#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;now: Timestamp, &#160;&#160;&#160;&#160;server_params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;call_link_params_bytes: &amp;[u8], ) &#45;&gt; Result&lt;()...">
<polygon fill="white" stroke="black" points="595,-895 277,-895 277,-859 595,-859 595,-895"/>
<text text-anchor="middle" x="436" y="-873.3" font-family="Helvetica,sans-Serif" font-size="14.00">CreateCallLinkCredentialPresentation_Verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify(). -->
<g id="node73" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().</title>
<g id="a_node73"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;room_id: &amp;[u8], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;current_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;server_params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;call_link_params: &amp;CallLinkPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; ...">
<polygon fill="white" stroke="black" points="1435,-1194 1379,-1194 1379,-1158 1435,-1158 1435,-1194"/>
<text text-anchor="middle" x="1407" y="-1172.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify(). -->
<g id="edge124" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CreateCallLinkCredentialPresentation_Verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M522.71,-858.96C589.15,-850.39 678.9,-851.5 734,-904 780.46,-948.27 707.84,-1002.42 754,-1047 818.61,-1109.4 1085.97,-1032.76 1156,-1089 1177.92,-1106.6 1154.2,-1131.26 1176,-1149 1230.88,-1193.65 1319,-1189.67 1368.72,-1182.82"/>
<polygon fill="blue" stroke="blue" points="1369.35,-1186.27 1378.72,-1181.33 1368.32,-1179.34 1369.35,-1186.27"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic(). -->
<g id="node20" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic().</title>
<g id="a_node20"><a xlink:title="fn ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic( &#160;&#160;&#160;&#160;server_public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;group_secret_params: Serial...">
<polygon fill="white" stroke="black" points="726,-517 146,-517 146,-481 726,-481 726,-517"/>
<text text-anchor="middle" x="436" y="-495.3" font-family="Helvetica,sans-Serif" font-size="14.00">ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="node77" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<g id="a_node77"><a xlink:title=" &#160;&#160;&#160;pub fn create_expiring_profile_key_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: api::groups::GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;expiring_profil...">
<polygon fill="white" stroke="black" points="1141.5,-459 768.5,-459 768.5,-423 1141.5,-423 1141.5,-459"/>
<text text-anchor="middle" x="955" y="-437.3" font-family="Helvetica,sans-Serif" font-size="14.00">create_expiring_profile_key_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="edge144" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/ServerPublicParams_CreateExpiringProfileKeyCredentialPresentationDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M649.26,-480.99C677.77,-478.19 706.61,-475.17 734,-472 763.17,-468.62 794.46,-464.51 824.01,-460.4"/>
<polygon fill="blue" stroke="blue" points="824.54,-463.86 833.96,-459.01 823.57,-456.93 824.54,-463.86"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic(). -->
<g id="node21" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic().</title>
<g id="a_node21"><a xlink:title="fn CallLinkAuthCredentialResponse_IssueDeterministic( &#160;&#160;&#160;&#160;user_id: Aci, &#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;params_bytes: &amp;[u8], &#160;&#160;&#160;&#160;randomness: &amp;[u8; RANDOMNESS_LEN], ) &#45;&gt; Vec&lt;u8&gt; { &#160;&#160;&#160;&#160;let params = ...">
<polygon fill="white" stroke="black" points="624,-625 248,-625 248,-589 624,-589 624,-625"/>
<text text-anchor="middle" x="436" y="-603.3" font-family="Helvetica,sans-Serif" font-size="14.00">CallLinkAuthCredentialResponse_IssueDeterministic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="node70" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<g id="a_node70"><a xlink:title=" &#160;&#160;&#160;pub fn issue_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;user_id: libsignal_core::Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;GenericServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; CallLin...">
<polygon fill="white" stroke="black" points="1471,-596 1343,-596 1343,-560 1471,-560 1471,-596"/>
<text text-anchor="middle" x="1407" y="-574.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="edge153" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;bridge 0.1.0 zkgroup/CallLinkAuthCredentialResponse_IssueDeterministic().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M624.12,-601.4C839.53,-594.95 1182.82,-584.68 1332.36,-580.2"/>
<polygon fill="blue" stroke="blue" points="1332.9,-583.69 1342.79,-579.89 1332.69,-576.69 1332.9,-583.69"/>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction(). -->
<g id="node22" class="node">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().</title>
<g id="a_node22"><a xlink:title=" &#160;&#160;&#160;fn homomorphism_with_subtraction( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;g1: &amp;[Scalar], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;all_points: &amp;[RistrettoPoint], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;challenge: Option&lt;Scalar&gt;, &#160;&#160;&#160;&#160;) &#45;&gt; G2 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.equations &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;....">
<polygon fill="white" stroke="black" points="2244.5,-347 1996.5,-347 1996.5,-311 2244.5,-311 2244.5,-347"/>
<text text-anchor="middle" x="2120.5" y="-325.3" font-family="Helvetica,sans-Serif" font-size="14.00">homomorphism_with_subtraction</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge92" class="edge">
<title>rust&#45;analyzer cargo poksho 0.7.0 statement/impl#[Statement]homomorphism_with_subtraction().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="blue" d="M2244.53,-320.7C2307.26,-316.47 2381.36,-311.47 2434.81,-307.87"/>
<polygon fill="blue" stroke="blue" points="2435.14,-311.35 2444.88,-307.19 2434.66,-304.37 2435.14,-311.35"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 attributes/tests/derive_default_generator_points_checks_for_reuse_in_debug_builds(). -->
<g id="node23" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 attributes/tests/derive_default_generator_points_checks_for_reuse_in_debug_builds().</title>
<g id="a_node23"><a xlink:title=" &#160;&#160;&#160;fn derive_default_generator_points_checks_for_reuse_in_debug_builds() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let storage = std::sync::OnceLock::from([RistrettoPoint::default(); 2]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;derive_default_generator_points::&lt;E...">
<polygon fill="white" stroke="black" points="2363,-264 1878,-264 1878,-228 2363,-228 2363,-264"/>
<text text-anchor="middle" x="2120.5" y="-242.3" font-family="Helvetica,sans-Serif" font-size="14.00">derive_default_generator_points_checks_for_reuse_in_debug_builds</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 attributes/tests/derive_default_generator_points_checks_for_reuse_in_debug_builds().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Default]default(). -->
<g id="edge100" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 attributes/tests/derive_default_generator_points_checks_for_reuse_in_debug_builds().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Default]default().</title>
<path fill="none" stroke="blue" d="M2279.75,-264.03C2311.33,-271.85 2343.28,-283.03 2371,-299 2387.09,-308.27 2383.08,-320.45 2399,-330 2419.08,-342.05 2444.35,-348.74 2465.39,-352.45"/>
<polygon fill="blue" stroke="blue" points="2464.92,-355.92 2475.34,-354.04 2466.02,-349.01 2464.92,-355.92"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue(). -->
<g id="node24" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().</title>
<g id="a_node24"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;hidden_attribute_points: impl IntoIterator&lt;Item = RistrettoPoint&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;private_key: &amp;ServerDerivedKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; EndorsementR...">
<polygon fill="white" stroke="black" points="2147.5,-181 2093.5,-181 2093.5,-145 2147.5,-145 2147.5,-181"/>
<text text-anchor="middle" x="2120.5" y="-159.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul(). -->
<g id="edge120" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 endorsements/impl#[EndorsementResponse]issue().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][MultiscalarMul]multiscalar_mul().</title>
<path fill="none" stroke="blue" d="M2147.54,-165.43C2193.95,-170.42 2293.36,-184.16 2371,-216 2409.84,-231.93 2449.79,-259 2476.25,-278.73"/>
<polygon fill="blue" stroke="blue" points="2474.27,-281.61 2484.35,-284.85 2478.49,-276.03 2474.27,-281.61"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="node25" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<g id="a_node25"><a xlink:title=" &#160;&#160;&#160;pub fn new(label: &amp;[u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::with_authenticated_message(label, &amp;[]) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1781,-604 1727,-604 1727,-568 1781,-568 1781,-604"/>
<text text-anchor="middle" x="1754" y="-582.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="node28" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<g id="a_node28"><a xlink:title=" &#160;&#160;&#160;pub fn with_authenticated_message(label: &amp;[u8], message: &amp;&#39;a [u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_attrs: ShoHmacSha256::new(label), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Reserve the first point for public a...">
<polygon fill="white" stroke="black" points="2229.5,-604 2011.5,-604 2011.5,-568 2229.5,-568 2229.5,-604"/>
<text text-anchor="middle" x="2120.5" y="-582.3" font-family="Helvetica,sans-Serif" font-size="14.00">with_authenticated_message</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge98" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1781.21,-586C1826.67,-586 1922.77,-586 2000.96,-586"/>
<polygon fill="blue" stroke="blue" points="2001.38,-589.5 2011.38,-586 2001.38,-582.5 2001.38,-589.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="node26" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<g id="a_node26"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; IssuanceProof { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.finalize_public_attrs(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut sho ...">
<polygon fill="white" stroke="black" points="1781,-550 1727,-550 1727,-514 1781,-514 1781,-550"/>
<text text-anchor="middle" x="1754" y="-528.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs(). -->
<g id="node27" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs().</title>
<g id="a_node27"><a xlink:title=" &#160;&#160;&#160;fn finalize_public_attrs(&amp;mut self) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert!(self.attr_points[0] == RistrettoPoint::identity()); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.attr_points[0] = self.public_attrs.get_point(); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2197.5,-535 2043.5,-535 2043.5,-499 2197.5,-499 2197.5,-535"/>
<text text-anchor="middle" x="2120.5" y="-513.3" font-family="Helvetica,sans-Serif" font-size="14.00">finalize_public_attrs</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs(). -->
<g id="edge99" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1781.21,-530.92C1833.16,-528.78 1951.22,-523.93 2033.14,-520.55"/>
<polygon fill="blue" stroke="blue" points="2033.34,-524.05 2043.19,-520.14 2033.05,-517.05 2033.34,-524.05"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge103" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M2197.9,-523.4C2300.87,-528.63 2487.17,-525.92 2625,-455 2656.69,-438.69 2682.87,-406.44 2698.68,-383.39"/>
<polygon fill="blue" stroke="blue" points="2701.59,-385.33 2704.21,-375.06 2695.76,-381.45 2701.59,-385.33"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge130" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M2229.55,-592.1C2338.34,-592.95 2506.57,-579.34 2625,-500 2666.52,-472.18 2692.64,-418.05 2705.46,-384.96"/>
<polygon fill="blue" stroke="blue" points="2708.81,-386 2709.02,-375.41 2702.25,-383.56 2708.81,-386"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="node29" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<g id="a_node29"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Even though it would work with a borrow, this deliberately consumes &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// IssuanceProof to indicate that ...">
<polygon fill="white" stroke="black" points="1782,-496 1726,-496 1726,-460 1782,-460 1782,-496"/>
<text text-anchor="middle" x="1754" y="-474.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs(). -->
<g id="edge172" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1782.1,-480.9C1834.47,-486.5 1951.59,-499.03 2033.04,-507.75"/>
<polygon fill="blue" stroke="blue" points="2032.97,-511.26 2043.29,-508.85 2033.72,-504.3 2032.97,-511.26"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="node30" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<g id="a_node30"><a xlink:title=" &#160;&#160;&#160;pub fn issue( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;blinding_key: &amp;BlindingPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; BlindedIssuanceProof { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;se...">
<polygon fill="white" stroke="black" points="1781,-1239 1727,-1239 1727,-1203 1781,-1203 1781,-1239"/>
<text text-anchor="middle" x="1754" y="-1217.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs(). -->
<g id="node32" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs().</title>
<g id="a_node32"><a xlink:title=" &#160;&#160;&#160;fn finalize_public_attrs(&amp;mut self) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.inner.finalize_public_attrs() &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2197.5,-1185 2043.5,-1185 2043.5,-1149 2197.5,-1149 2197.5,-1185"/>
<text text-anchor="middle" x="2120.5" y="-1163.3" font-family="Helvetica,sans-Serif" font-size="14.00">finalize_public_attrs</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs(). -->
<g id="edge108" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1781.21,-1217.12C1833.16,-1209.42 1951.22,-1191.93 2033.14,-1179.79"/>
<polygon fill="blue" stroke="blue" points="2033.81,-1183.23 2043.19,-1178.31 2032.78,-1176.31 2033.81,-1183.23"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="node31" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<g id="a_node31"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;blinding_key: &amp;BlindingKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof: BlindedIssuanceProof, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Credential, VerificationFail...">
<polygon fill="white" stroke="black" points="1782,-1185 1726,-1185 1726,-1149 1782,-1149 1782,-1185"/>
<text text-anchor="middle" x="1754" y="-1163.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs(). -->
<g id="edge109" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1782.1,-1167C1834.47,-1167 1951.59,-1167 2033.04,-1167"/>
<polygon fill="blue" stroke="blue" points="2033.29,-1170.5 2043.29,-1167 2033.29,-1163.5 2033.29,-1170.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs(). -->
<g id="edge175" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]finalize_public_attrs().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]finalize_public_attrs().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2043.35,-1183.37C1978.15,-1192.09 1890.09,-1190.43 1856,-1128 1841.09,-1100.69 1841.09,-595.31 1856,-568 1888.6,-508.29 1969.55,-499.97 2033.39,-503.92"/>
<polygon fill="blue" stroke="blue" points="2033.25,-507.42 2043.47,-504.65 2033.75,-500.44 2033.25,-507.42"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="node33" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<g id="a_node33"><a xlink:title=" &#160;&#160;&#160;pub fn with_authenticated_message(label: &amp;[u8], message: &amp;&#39;a [u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_ = label; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;core: PresentationProofBuilderCore::with_authenticated_message(message), ...">
<polygon fill="white" stroke="black" points="2229.5,-940 2011.5,-940 2011.5,-904 2229.5,-904 2229.5,-940"/>
<text text-anchor="middle" x="2120.5" y="-918.3" font-family="Helvetica,sans-Serif" font-size="14.00">with_authenticated_message</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message(). -->
<g id="node37" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message().</title>
<g id="a_node37"><a xlink:title=" &#160;&#160;&#160;fn with_authenticated_message(message: &amp;&#39;a [u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;encryption_keys: vec![], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;attributes: vec![], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Reserve the first point for public att...">
<polygon fill="white" stroke="black" points="2617,-886 2399,-886 2399,-850 2617,-850 2617,-886"/>
<text text-anchor="middle" x="2508" y="-864.3" font-family="Helvetica,sans-Serif" font-size="14.00">with_authenticated_message</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message(). -->
<g id="edge2" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2229.53,-912.41C2273.53,-907.96 2324.81,-902.07 2371,-895 2384.4,-892.95 2398.49,-890.49 2412.32,-887.91"/>
<polygon fill="blue" stroke="blue" points="2413.15,-891.31 2422.32,-886.01 2411.85,-884.44 2413.15,-891.31"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args(). -->
<g id="node34" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args().</title>
<g id="a_node34"><a xlink:title=" &#160;&#160;&#160;fn prepare_non_attribute_point_args( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;I: RistrettoPoint, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;commitments: &amp;PresentationProofCommitments, &#160;&#160;&#160;&#160;) &#45;&gt; poksho::PointArgs { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credentials_system = Sys...">
<polygon fill="white" stroke="black" points="2244.5,-1048 1996.5,-1048 1996.5,-1012 2244.5,-1012 2244.5,-1048"/>
<text text-anchor="middle" x="2120.5" y="-1026.3" font-family="Helvetica,sans-Serif" font-size="14.00">prepare_non_attribute_point_args</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge8" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M2244.7,-1045.58C2289.68,-1044.48 2337.64,-1034.31 2371,-1003 2424.28,-953 2369.32,-907.77 2399,-841 2465.09,-692.32 2540.25,-691.89 2625,-553 2659.73,-496.08 2689.7,-423.5 2704.72,-384.6"/>
<polygon fill="blue" stroke="blue" points="2708.08,-385.6 2708.38,-375.01 2701.54,-383.1 2708.08,-385.6"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="node35" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<g id="a_node35"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential: &amp;Credential, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: [u8; RANDOMNESS_LEN], &#160;&#160;&#160;&#160;) &#45;&gt; PresentationProof { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credenti...">
<polygon fill="white" stroke="black" points="1788.5,-1048 1719.5,-1048 1719.5,-1012 1788.5,-1012 1788.5,-1048"/>
<text text-anchor="middle" x="1754" y="-1026.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge15" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M1788.85,-1040.12C1811.57,-1046.37 1842.29,-1053.79 1870,-1057 2091.19,-1082.62 2152.24,-1098.51 2371,-1057 2490.2,-1034.38 2554.03,-1055.4 2625,-957 2649.08,-923.61 2637.84,-627.54 2645,-587 2658.23,-512.04 2688.14,-427.15 2704.25,-384.53"/>
<polygon fill="blue" stroke="blue" points="2707.54,-385.71 2707.84,-375.12 2701,-383.21 2707.54,-385.71"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args(). -->
<g id="edge16" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1788.64,-1030C1833.32,-1030 1914.88,-1030 1985.84,-1030"/>
<polygon fill="blue" stroke="blue" points="1986.22,-1033.5 1996.22,-1030 1986.22,-1026.5 1986.22,-1033.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="node36" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<g id="a_node36"><a xlink:title=" &#160;&#160;&#160;pub fn new(label: &amp;[u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::with_authenticated_message(label, &amp;[]) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1781,-940 1727,-940 1727,-904 1781,-904 1781,-940"/>
<text text-anchor="middle" x="1754" y="-918.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge24" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1781.21,-922C1826.67,-922 1922.77,-922 2000.96,-922"/>
<polygon fill="blue" stroke="blue" points="2001.38,-925.5 2011.38,-922 2001.38,-918.5 2001.38,-925.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge26" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M2529.54,-849.89C2555.72,-825.66 2600.5,-780.12 2625,-732 2685.87,-612.42 2706.59,-450.25 2712.72,-385.46"/>
<polygon fill="blue" stroke="blue" points="2716.23,-385.49 2713.64,-375.22 2709.26,-384.86 2716.23,-385.49"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]finalize_public_attrs(). -->
<g id="node38" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]finalize_public_attrs().</title>
<g id="a_node38"><a xlink:title=" &#160;&#160;&#160;fn finalize_public_attrs(&amp;mut self) { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;debug_assert!(self.core.attr_points[0] == RistrettoPoint::identity()); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.core.attr_points[0] = self.public_attrs.get_point(); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="2197.5,-994 2043.5,-994 2043.5,-958 2197.5,-958 2197.5,-994"/>
<text text-anchor="middle" x="2120.5" y="-972.3" font-family="Helvetica,sans-Serif" font-size="14.00">finalize_public_attrs</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]finalize_public_attrs().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge84" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]finalize_public_attrs().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M2197.54,-989.26C2308.94,-1003.86 2515.15,-1011.68 2625,-895 2645.49,-873.24 2640.23,-791.51 2645,-762 2667.91,-620.21 2698.07,-451 2709.92,-385.15"/>
<polygon fill="blue" stroke="blue" points="2713.39,-385.6 2711.72,-375.14 2706.5,-384.36 2713.39,-385.6"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="node39" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message().</title>
<g id="a_node39"><a xlink:title=" &#160;&#160;&#160;pub fn with_authenticated_message(label: &amp;[u8], message: &amp;&#39;a [u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;core: PresentationProofBuilderCore::with_authenticated_message(message), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_...">
<polygon fill="white" stroke="black" points="2229.5,-886 2011.5,-886 2011.5,-850 2229.5,-850 2229.5,-886"/>
<text text-anchor="middle" x="2120.5" y="-864.3" font-family="Helvetica,sans-Serif" font-size="14.00">with_authenticated_message</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message(). -->
<g id="edge87" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M2229.65,-868C2279.24,-868 2338.15,-868 2388.9,-868"/>
<polygon fill="blue" stroke="blue" points="2388.93,-871.5 2398.93,-868 2388.93,-864.5 2388.93,-871.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute(). -->
<g id="node40" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute().</title>
<g id="a_node40"><a xlink:title=" &#160;&#160;&#160;pub fn add_revealed_attribute(mut self, attr: &amp;dyn RevealedAttribute) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// We don&#39;t actually need the value! The server will check it for us. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;_ = attr; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.core.ad...">
<polygon fill="white" stroke="black" points="1842,-1102 1666,-1102 1666,-1066 1842,-1066 1842,-1102"/>
<text text-anchor="middle" x="1754" y="-1080.3" font-family="Helvetica,sans-Serif" font-size="14.00">add_revealed_attribute</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge88" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M1842.28,-1092.3C2043.17,-1109.18 2528.47,-1136.57 2625,-1018 2655.27,-980.82 2636.85,-634.24 2645,-587 2657.95,-511.99 2687.97,-427.12 2704.17,-384.51"/>
<polygon fill="blue" stroke="blue" points="2707.47,-385.7 2707.79,-375.11 2700.93,-383.19 2707.47,-385.7"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="node41" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<g id="a_node41"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;mut self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;key_pair: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proof: &amp;PresentationProof, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), VerificationFailure&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.finalize_public_attrs(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1782,-994 1726,-994 1726,-958 1782,-958 1782,-994"/>
<text text-anchor="middle" x="1754" y="-972.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args(). -->
<g id="edge107" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilderCore&lt;&#39;a, T&gt;`]prepare_non_attribute_point_args().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1782.23,-983.39C1805.41,-989.44 1839.68,-997.82 1870,-1003 1907.55,-1009.42 1948.56,-1014.6 1986.28,-1018.64"/>
<polygon fill="blue" stroke="blue" points="1985.99,-1022.13 1996.31,-1019.7 1986.73,-1015.17 1985.99,-1022.13"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]finalize_public_attrs(). -->
<g id="edge106" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]finalize_public_attrs().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1782.1,-976C1834.47,-976 1951.59,-976 2033.04,-976"/>
<polygon fill="blue" stroke="blue" points="2033.29,-979.5 2043.29,-976 2033.29,-972.5 2033.29,-979.5"/>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="node42" class="node">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<g id="a_node42"><a xlink:title=" &#160;&#160;&#160;pub fn new(label: &amp;[u8]) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::with_authenticated_message(label, &amp;[]) &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1781,-886 1727,-886 1727,-850 1781,-850 1781,-886"/>
<text text-anchor="middle" x="1754" y="-864.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge121" class="edge">
<title>rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1781.21,-868C1826.67,-868 1922.77,-868 2000.96,-868"/>
<polygon fill="blue" stroke="blue" points="2001.38,-871.5 2011.38,-868 2001.38,-864.5 2001.38,-871.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches(). -->
<g id="node43" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().</title>
<g id="a_node43"><a xlink:title="criterion_group!(benches, bench_server_param_serialization,); criterion_main!(benches);">
<polygon fill="white" stroke="black" points="96,-162 21,-162 21,-126 96,-126 96,-162"/>
<text text-anchor="middle" x="58.5" y="-140.3" font-family="Helvetica,sans-Serif" font-size="14.00">benches</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile(). -->
<g id="node44" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().</title>
<g id="a_node44"><a xlink:title="pub fn benchmark_integration_profile(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;// SERVER &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = ser...">
<polygon fill="white" stroke="black" points="550,-189 322,-189 322,-153 550,-153 550,-189"/>
<text text-anchor="middle" x="436" y="-167.3" font-family="Helvetica,sans-Serif" font-size="14.00">benchmark_integration_profile</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile(). -->
<g id="edge35" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M96.19,-146.64C145.82,-150.21 236.78,-156.75 311.97,-162.15"/>
<polygon fill="blue" stroke="blue" points="311.77,-165.65 322,-162.87 312.27,-158.67 311.77,-165.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth(). -->
<g id="node45" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().</title>
<g id="a_node45"><a xlink:title="fn benchmark_integration_auth(c: &amp;mut Criterion) { &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params.get...">
<polygon fill="white" stroke="black" points="544,-135 328,-135 328,-99 544,-99 544,-135"/>
<text text-anchor="middle" x="436" y="-113.3" font-family="Helvetica,sans-Serif" font-size="14.00">benchmark_integration_auth</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth(). -->
<g id="edge34" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benches().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M96.19,-141.36C147.05,-137.7 241.34,-130.92 317.56,-125.44"/>
<polygon fill="blue" stroke="blue" points="317.99,-128.92 327.71,-124.71 317.49,-121.94 317.99,-128.92"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation(). -->
<g id="node76" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().</title>
<g id="a_node76"><a xlink:title=" &#160;&#160;&#160;pub fn verify_expiring_profile_key_credential_presentation( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: api::groups::GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;presentation: &amp;api::profiles::ExpiringProfileKeyCred...">
<polygon fill="white" stroke="black" points="1591.5,-405 1222.5,-405 1222.5,-369 1591.5,-369 1591.5,-405"/>
<text text-anchor="middle" x="1407" y="-383.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_expiring_profile_key_credential_presentation</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation(). -->
<g id="edge73" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M550.04,-162.23C612.27,-163.76 686.33,-177.05 734,-224 767.22,-256.72 719.26,-295.89 754,-327 787.38,-356.9 1111.38,-355.76 1156,-360 1181.53,-362.43 1208.51,-365.16 1234.92,-367.93"/>
<polygon fill="blue" stroke="blue" points="1234.71,-371.43 1245.02,-369 1235.44,-364.47 1234.71,-371.43"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="edge72" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M550.14,-160.68C613.2,-161.52 688.06,-174.64 734,-224 791.85,-286.16 694.85,-353.09 754,-414 755.92,-415.98 757.92,-417.86 759.97,-419.65"/>
<polygon fill="blue" stroke="blue" points="758.19,-422.7 768.22,-426.11 762.51,-417.19 758.19,-422.7"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="node47" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<g id="a_node47"><a xlink:title=" &#160;&#160;&#160;pub fn receive( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;AuthCredentialWithPniZkc, ZkGroupV...">
<polygon fill="white" stroke="black" points="988,-76 922,-76 922,-40 988,-40 988,-76"/>
<text text-anchor="middle" x="955" y="-54.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="edge146" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M544.31,-106.95C600.8,-101.47 671.2,-94.31 734,-87 796,-79.78 867.63,-70.09 911.88,-63.94"/>
<polygon fill="blue" stroke="blue" points="912.55,-67.38 921.98,-62.53 911.59,-60.45 912.55,-67.38"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="node49" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<g id="a_node49"><a xlink:title=" &#160;&#160;&#160;pub fn issue_credential( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;S...">
<polygon fill="white" stroke="black" points="1019,-130 891,-130 891,-94 1019,-94 1019,-130"/>
<text text-anchor="middle" x="955" y="-108.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="edge147" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M544.12,-115.96C644.84,-114.99 792.88,-113.56 880.76,-112.71"/>
<polygon fill="blue" stroke="blue" points="880.94,-116.21 890.9,-112.61 880.87,-109.21 880.94,-116.21"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="node51" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<g id="a_node51"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;params: &amp;ServerSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: &amp;GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), ZkGroupVerificationFailu...">
<polygon fill="white" stroke="black" points="983,-292 927,-292 927,-256 983,-256 983,-292"/>
<text text-anchor="middle" x="955" y="-270.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="edge145" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M528.78,-98.97C594.04,-91.79 679.45,-94.71 734,-144 768.6,-175.27 720.09,-214.99 754,-247 797.52,-288.08 872,-286.36 916.75,-280.67"/>
<polygon fill="blue" stroke="blue" points="917.5,-284.1 926.91,-279.24 916.52,-277.17 917.5,-284.1"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="node52" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<g id="a_node52"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; AuthCredentialWithPniZkcPr...">
<polygon fill="white" stroke="black" points="989.5,-238 920.5,-238 920.5,-202 989.5,-202 989.5,-238"/>
<text text-anchor="middle" x="955" y="-216.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="edge148" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 benchmark_integration_auth().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M544.12,-101.01C605.31,-97.73 680.31,-104.28 734,-144 752.91,-157.99 735.4,-178.6 754,-193 798.63,-227.55 866.28,-229.31 910.31,-225.86"/>
<polygon fill="blue" stroke="blue" points="910.78,-229.34 920.42,-224.95 910.15,-222.37 910.78,-229.34"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present(). -->
<g id="node46" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present().</title>
<g id="a_node46"><a xlink:title=" &#160;&#160;&#160;pub fn present( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_params: &amp;ServerPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; AnyAuthCredentialPresentat...">
<polygon fill="white" stroke="black" points="470.5,-52 401.5,-52 401.5,-16 470.5,-16 470.5,-52"/>
<text text-anchor="middle" x="436" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="edge119" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/impl#[AuthCredentialWithPni]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M470.97,-28.9C532.57,-21.75 662.91,-16.61 734,-87 768.07,-120.73 719.22,-160 754,-193 795.38,-232.27 865.02,-232.51 910.24,-227.48"/>
<polygon fill="blue" stroke="blue" points="910.85,-230.93 920.34,-226.23 909.98,-223.99 910.85,-230.93"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key(). -->
<g id="node48" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().</title>
<g id="a_node48"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn receive_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;AuthCredentialWithPni...">
<polygon fill="white" stroke="black" points="1468.5,-130 1345.5,-130 1345.5,-94 1468.5,-94 1468.5,-130"/>
<text text-anchor="middle" x="1407" y="-108.3" font-family="Helvetica,sans-Serif" font-size="14.00">receive_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key(). -->
<g id="edge3" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M988,-61.84C1060.02,-70.48 1236.28,-91.63 1335.38,-103.53"/>
<polygon fill="blue" stroke="blue" points="1334.96,-107 1345.31,-104.72 1335.79,-100.05 1334.96,-107"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge7" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1468.58,-99.85C1521.35,-93.16 1595.83,-93.8 1638,-139 1669.87,-173.16 1628.96,-522.4 1658,-559 1671.86,-576.47 1696.15,-583.15 1716.7,-585.51"/>
<polygon fill="blue" stroke="blue" points="1716.46,-589 1726.72,-586.36 1717.06,-582.03 1716.46,-589"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge6" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1468.66,-99.99C1521.29,-93.45 1595.52,-94.24 1638,-139 1685.37,-188.91 1615.55,-393.84 1658,-448 1671.69,-465.47 1695.53,-472.96 1715.9,-476.09"/>
<polygon fill="blue" stroke="blue" points="1715.5,-479.57 1725.86,-477.33 1716.37,-472.62 1715.5,-479.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key(). -->
<g id="node55" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().</title>
<g id="a_node55"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn issue_credential_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;aci: Aci, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;pni: Pni, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_key: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1499.5,-184 1314.5,-184 1314.5,-148 1499.5,-148 1499.5,-184"/>
<text text-anchor="middle" x="1407" y="-162.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_credential_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key(). -->
<g id="edge57" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1019.05,-119.83C1063.03,-125.27 1123.08,-132.65 1176,-139 1218.04,-144.05 1264.42,-149.51 1304.45,-154.2"/>
<polygon fill="blue" stroke="blue" points="1304.15,-157.68 1314.49,-155.37 1304.96,-150.73 1304.15,-157.68"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present(). -->
<g id="node50" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().</title>
<g id="a_node50"><a xlink:title=" &#160;&#160;&#160;fn issue_receive_present() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const ACI: Aci = Aci::from_uuid_bytes([b&#39;a&#39;; 16]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const PNI: Pni = Pni::from_uuid_bytes([b&#39;p&#39;; 16]); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;const REDEMPTION_TIME: Timestamp = Timest...">
<polygon fill="white" stroke="black" points="1039,-184 871,-184 871,-148 1039,-148 1039,-184"/>
<text text-anchor="middle" x="955" y="-162.3" font-family="Helvetica,sans-Serif" font-size="14.00">issue_receive_present</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key(). -->
<g id="edge81" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1039.04,-155.7C1080.23,-150.62 1130.73,-144.44 1176,-139 1229.44,-132.58 1289.89,-125.49 1335.4,-120.19"/>
<polygon fill="blue" stroke="blue" points="1335.93,-123.65 1345.46,-119.02 1335.12,-116.7 1335.93,-123.65"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key(). -->
<g id="node53" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().</title>
<g id="a_node53"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn verify_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential_key: &amp;CredentialKeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_public_params: &amp;GroupPublicParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;redemption_time: Timestamp, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;(), Zk...">
<polygon fill="white" stroke="black" points="1463.5,-238 1350.5,-238 1350.5,-202 1463.5,-202 1463.5,-238"/>
<text text-anchor="middle" x="1407" y="-216.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key(). -->
<g id="edge80" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1039.04,-176.3C1080.23,-181.38 1130.73,-187.56 1176,-193 1231.3,-199.64 1294.09,-207 1340.08,-212.36"/>
<polygon fill="blue" stroke="blue" points="1339.88,-215.86 1350.22,-213.53 1340.69,-208.9 1339.88,-215.86"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key(). -->
<g id="node54" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().</title>
<g id="a_node54"><a xlink:title=" &#160;&#160;&#160;pub(crate) fn present_for_key( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public_key: &amp;CredentialPublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;group_secret_params: &amp;GroupSecretParams, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;randomness: RandomnessBytes, &#160;&#160;&#160;&#160;) &#45;&gt; AuthCredentia...">
<polygon fill="white" stroke="black" points="1470,-292 1344,-292 1344,-256 1470,-256 1470,-292"/>
<text text-anchor="middle" x="1407" y="-270.3" font-family="Helvetica,sans-Serif" font-size="14.00">present_for_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key(). -->
<g id="edge79" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1039.06,-158.54C1078.33,-159.34 1123.59,-167.05 1156,-193 1175.98,-209 1155.88,-231.18 1176,-247 1220.12,-281.71 1284.54,-286.58 1333.98,-283.85"/>
<polygon fill="blue" stroke="blue" points="1334.23,-287.34 1343.98,-283.18 1333.77,-280.36 1334.23,-287.34"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key(). -->
<g id="edge82" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/test/issue_receive_present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1039.06,-166C1113.83,-166 1223.94,-166 1304.02,-166"/>
<polygon fill="blue" stroke="blue" points="1304.13,-169.5 1314.13,-166 1304.13,-162.5 1304.13,-169.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key(). -->
<g id="edge105" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M983.09,-270.63C1024.6,-265.47 1106.46,-255.35 1176,-247 1231.3,-240.36 1294.09,-233 1340.08,-227.64"/>
<polygon fill="blue" stroke="blue" points="1340.69,-231.1 1350.22,-226.47 1339.88,-224.14 1340.69,-231.1"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key(). -->
<g id="edge110" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M989.54,-224.17C1032.67,-229.52 1109.9,-239.06 1176,-247 1228.7,-253.33 1288.21,-260.31 1333.49,-265.59"/>
<polygon fill="blue" stroke="blue" points="1333.18,-269.07 1343.51,-266.75 1333.99,-262.12 1333.18,-269.07"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge113" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1463.7,-208.35C1516.81,-200.85 1594.91,-199.92 1638,-247 1690.69,-304.56 1610.08,-887.41 1658,-949 1671.51,-966.37 1695.35,-973.11 1715.76,-975.51"/>
<polygon fill="blue" stroke="blue" points="1715.48,-979 1725.75,-976.39 1716.09,-972.03 1715.48,-979"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge112" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1463.72,-208.52C1516.66,-201.22 1594.45,-200.48 1638,-247 1667.81,-278.84 1648.39,-596.46 1658,-639 1675.24,-715.34 1715.92,-798.77 1738.04,-840.7"/>
<polygon fill="blue" stroke="blue" points="1735.06,-842.54 1742.85,-849.72 1741.23,-839.25 1735.06,-842.54"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge142" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1470.16,-277.83C1524.17,-284.8 1599.61,-304.09 1638,-357 1680.17,-415.12 1613.83,-946.38 1658,-1003 1670.16,-1018.59 1690.63,-1025.61 1709.46,-1028.62"/>
<polygon fill="blue" stroke="blue" points="1709.04,-1032.1 1719.4,-1029.88 1709.92,-1025.15 1709.04,-1032.1"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge143" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1470.08,-277.89C1524.04,-284.89 1599.44,-304.21 1638,-357 1673.28,-405.31 1621.06,-847.95 1658,-895 1671.77,-912.54 1696.06,-919.23 1716.63,-921.56"/>
<polygon fill="blue" stroke="blue" points="1716.41,-925.05 1726.67,-922.4 1717,-918.08 1716.41,-925.05"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge171" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1499.72,-151.22C1547.72,-149.05 1603.52,-156.3 1638,-193 1693.78,-252.36 1607.15,-495.37 1658,-559 1671.92,-576.42 1696.21,-583.11 1716.74,-585.47"/>
<polygon fill="blue" stroke="blue" points="1716.5,-588.96 1726.76,-586.33 1717.09,-581.99 1716.5,-588.96"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge170" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential_for_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1499.59,-151.34C1547.55,-149.22 1603.35,-156.46 1638,-193 1685.81,-243.41 1614.37,-450.93 1658,-505 1672,-522.35 1696.29,-529.04 1716.8,-531.42"/>
<polygon fill="blue" stroke="blue" points="1716.54,-534.92 1726.81,-532.29 1717.15,-527.94 1716.54,-534.92"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge27" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M989.79,-1480.65C1032.87,-1487.55 1109.72,-1498.8 1176,-1503 1278.46,-1509.49 1563.8,-1573.95 1638,-1503 1673.85,-1468.72 1627.22,-1095.9 1658,-1057 1670.26,-1041.5 1690.75,-1034.48 1709.56,-1031.45"/>
<polygon fill="blue" stroke="blue" points="1710.01,-1034.93 1719.48,-1030.18 1709.12,-1027.98 1710.01,-1034.93"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge28" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M989.8,-1478.2C1114.69,-1489.21 1547.62,-1519.99 1638,-1427 1675.05,-1388.88 1625.08,-990.74 1658,-949 1671.81,-931.49 1696.1,-924.81 1716.66,-922.46"/>
<polygon fill="blue" stroke="blue" points="1717.02,-925.94 1726.69,-921.62 1716.44,-918.97 1717.02,-925.94"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute(). -->
<g id="edge29" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M989.83,-1470.64C1032.57,-1466.97 1106.51,-1467 1156,-1502 1171.9,-1513.25 1159.38,-1530.84 1176,-1541 1351.22,-1648.06 1489.26,-1682.56 1638,-1541 1670.56,-1510.02 1634.29,-1175.18 1658,-1137 1665.77,-1124.49 1677.63,-1114.68 1690.35,-1107.09"/>
<polygon fill="blue" stroke="blue" points="1692.19,-1110.07 1699.27,-1102.18 1688.82,-1103.94 1692.19,-1110.07"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="node57" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<g id="a_node57"><a xlink:title=" &#160;&#160;&#160;fn generate_credential(redemption_time: Timestamp) &#45;&gt; BackupAuthCredential { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// client generated materials; issuance request &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let request_context = BackupAuthCredentialRequestContex...">
<polygon fill="white" stroke="black" points="1032,-1547 878,-1547 878,-1511 1032,-1511 1032,-1547"/>
<text text-anchor="middle" x="955" y="-1525.3" font-family="Helvetica,sans-Serif" font-size="14.00">generate_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge30" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1032.47,-1525.17C1070.35,-1521.65 1116.35,-1514.9 1156,-1502 1238.18,-1475.25 1324.97,-1421.88 1371.57,-1390.86"/>
<polygon fill="blue" stroke="blue" points="1373.72,-1393.63 1380.07,-1385.15 1369.82,-1387.82 1373.72,-1393.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge31" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1032.35,-1539.42C1074.47,-1540.64 1124.47,-1533.89 1156,-1502 1207.01,-1450.41 1124.55,-1391.14 1176,-1340 1225.05,-1291.24 1312.04,-1295.82 1363.83,-1304.07"/>
<polygon fill="blue" stroke="blue" points="1363.25,-1307.52 1373.7,-1305.76 1364.43,-1300.62 1363.25,-1307.52"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity(). -->
<g id="node58" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().</title>
<g id="a_node58"><a xlink:title=" &#160;&#160;&#160;fn test_client_enforces_timestamp_granularity() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let redemption_time: Timestamp = DAY_ALIGNED_TIMESTAMP.add_seconds(60 * 60); // not on a day boundary! &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let request_context = Back...">
<polygon fill="white" stroke="black" points="1113.5,-1331 796.5,-1331 796.5,-1295 1113.5,-1295 1113.5,-1331"/>
<text text-anchor="middle" x="955" y="-1309.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_client_enforces_timestamp_granularity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge59" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1101.84,-1331.01C1126.59,-1334.03 1152.03,-1337.12 1176,-1340 1244.51,-1348.23 1324.54,-1357.56 1369.85,-1362.82"/>
<polygon fill="blue" stroke="blue" points="1369.44,-1366.29 1379.78,-1363.97 1370.25,-1359.34 1369.44,-1366.29"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge58" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1113.7,-1313C1202.67,-1313 1307.09,-1313 1363.92,-1313"/>
<polygon fill="blue" stroke="blue" points="1363.96,-1316.5 1373.96,-1313 1363.96,-1309.5 1363.96,-1316.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge61" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1434.1,-1373.4C1482.4,-1383.51 1585.56,-1396.65 1638,-1340 1656.96,-1319.52 1652.45,-865.35 1658,-838 1675.28,-752.83 1717.54,-658.5 1739.41,-613.2"/>
<polygon fill="blue" stroke="blue" points="1742.63,-614.57 1743.87,-604.05 1736.34,-611.5 1742.63,-614.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge60" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1434.08,-1369.42C1478.46,-1372.38 1570.44,-1373.44 1638,-1340 1680.29,-1319.07 1715.64,-1276.02 1735.56,-1247.84"/>
<polygon fill="blue" stroke="blue" points="1738.68,-1249.49 1741.47,-1239.27 1732.92,-1245.51 1738.68,-1249.49"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level(). -->
<g id="node60" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().</title>
<g id="a_node60"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_wrong_receipt_level() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let valid_presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_pa...">
<polygon fill="white" stroke="black" points="577,-1439 295,-1439 295,-1403 577,-1403 577,-1439"/>
<text text-anchor="middle" x="436" y="-1417.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_wrong_receipt_level</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge71" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M577.22,-1432.83C626.79,-1437.26 682.9,-1442.54 734,-1448 795.28,-1454.54 866,-1463.47 910.35,-1469.23"/>
<polygon fill="blue" stroke="blue" points="910.12,-1472.73 920.49,-1470.56 911.03,-1465.79 910.12,-1472.73"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge70" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M577.01,-1403.57C630.91,-1404.08 690.01,-1414.32 734,-1448 754.32,-1463.56 734.02,-1486 754,-1502 785.51,-1527.23 829.16,-1535.22 867.65,-1536.38"/>
<polygon fill="blue" stroke="blue" points="867.78,-1539.88 877.83,-1536.53 867.88,-1532.88 867.78,-1539.88"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge69" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_receipt_level().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M577.25,-1421C692.16,-1421 846.8,-1421 916.81,-1421"/>
<polygon fill="blue" stroke="blue" points="916.91,-1424.5 926.91,-1421 916.91,-1417.5 916.91,-1424.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration(). -->
<g id="node61" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().</title>
<g id="a_node61"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_expiration() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_params().get_publ...">
<polygon fill="white" stroke="black" points="544,-1385 328,-1385 328,-1349 544,-1349 544,-1385"/>
<text text-anchor="middle" x="436" y="-1363.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_expiration</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge77" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M544.25,-1350.39C605.68,-1346.84 680.86,-1353.32 734,-1394 754.32,-1409.56 734.02,-1432 754,-1448 798.06,-1483.28 865.86,-1484.85 910.08,-1481.16"/>
<polygon fill="blue" stroke="blue" points="910.61,-1484.63 920.23,-1480.19 909.95,-1477.66 910.61,-1484.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge76" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M527.53,-1348.98C593.02,-1341.54 679.28,-1344.12 734,-1394 770.08,-1426.89 718.65,-1468.34 754,-1502 783.76,-1530.34 828.23,-1538.38 867.69,-1538.77"/>
<polygon fill="blue" stroke="blue" points="867.89,-1542.27 877.87,-1538.71 867.85,-1535.27 867.89,-1542.27"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge78" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_expiration().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M544.31,-1375.94C600.8,-1380.85 671.19,-1387.29 734,-1394 798.33,-1400.87 873.06,-1410.36 916.78,-1416.07"/>
<polygon fill="blue" stroke="blue" points="916.57,-1419.57 926.94,-1417.4 917.48,-1412.63 916.57,-1419.57"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption(). -->
<g id="node62" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().</title>
<g id="a_node62"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_wrong_redemption() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let valid_presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_param...">
<polygon fill="white" stroke="black" points="573.5,-1547 298.5,-1547 298.5,-1511 573.5,-1511 573.5,-1547"/>
<text text-anchor="middle" x="436" y="-1525.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_wrong_redemption</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge96" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M573.86,-1517.47C624.24,-1512.98 681.75,-1507.58 734,-1502 795.28,-1495.46 866,-1486.53 910.35,-1480.77"/>
<polygon fill="blue" stroke="blue" points="911.03,-1484.21 920.49,-1479.44 910.12,-1477.27 911.03,-1484.21"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge95" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M573.51,-1529C666.75,-1529 787.47,-1529 867.66,-1529"/>
<polygon fill="blue" stroke="blue" points="867.72,-1532.5 877.72,-1529 867.72,-1525.5 867.72,-1532.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge97" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_redemption().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M573.62,-1546.45C628.42,-1546.34 689.09,-1536.38 734,-1502 754.32,-1486.44 734.02,-1464 754,-1448 800.34,-1410.9 872.94,-1411.08 916.74,-1415.45"/>
<polygon fill="blue" stroke="blue" points="916.37,-1418.92 926.7,-1416.56 917.15,-1411.97 916.37,-1418.92"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp(). -->
<g id="node63" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().</title>
<g id="a_node63"><a xlink:title=" &#160;&#160;&#160;fn test_client_enforces_timestamp() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let redemption_time: Timestamp = DAY_ALIGNED_TIMESTAMP; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let request_context = BackupAuthCredentialRequestContext::new(&amp;KEY, ACI.into()); &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1072,-1385 838,-1385 838,-1349 1072,-1349 1072,-1385"/>
<text text-anchor="middle" x="955" y="-1363.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_client_enforces_timestamp</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge116" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1072.18,-1367C1170.61,-1367 1305.63,-1367 1369.58,-1367"/>
<polygon fill="blue" stroke="blue" points="1369.58,-1370.5 1379.58,-1367 1369.58,-1363.5 1369.58,-1370.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge115" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_client_enforces_timestamp().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1072.16,-1352.63C1105.67,-1348.51 1142.28,-1344.05 1176,-1340 1241.55,-1332.13 1317.64,-1323.25 1363.78,-1317.89"/>
<polygon fill="blue" stroke="blue" points="1364.47,-1321.33 1373.99,-1316.7 1363.66,-1314.38 1364.47,-1321.33"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge118" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M983.06,-1423.4C1103.85,-1433.85 1590.02,-1472.77 1638,-1427 1672.13,-1394.45 1628.69,-1039.95 1658,-1003 1671.67,-985.76 1695.51,-979.02 1715.88,-976.58"/>
<polygon fill="blue" stroke="blue" points="1716.2,-980.07 1725.85,-975.69 1715.57,-973.1 1716.2,-980.07"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge117" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M983.37,-1420.94C1107.72,-1420.55 1614.48,-1417.51 1638,-1394 1677.25,-1354.77 1623.67,-938.6 1658,-895 1671.79,-877.48 1696.08,-870.79 1716.65,-868.45"/>
<polygon fill="blue" stroke="blue" points="1717.01,-871.94 1726.69,-867.61 1716.43,-864.96 1717.01,-871.94"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id(). -->
<g id="node65" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().</title>
<g id="a_node65"><a xlink:title=" &#160;&#160;&#160;fn test_server_verify_wrong_backup_id() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let credential = generate_credential(DAY_ALIGNED_TIMESTAMP); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let valid_presentation = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credential.present(&amp;server_secret_params...">
<polygon fill="white" stroke="black" points="569,-1493 303,-1493 303,-1457 569,-1457 569,-1493"/>
<text text-anchor="middle" x="436" y="-1471.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_server_verify_wrong_backup_id</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge129" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M569.13,-1475C681.2,-1475 835.28,-1475 909.93,-1475"/>
<polygon fill="blue" stroke="blue" points="910.35,-1478.5 920.35,-1475 910.35,-1471.5 910.35,-1478.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential(). -->
<g id="edge127" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/generate_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M569.04,-1486.11C620.55,-1490.67 680.07,-1496.24 734,-1502 778.18,-1506.72 827.26,-1512.67 867.84,-1517.79"/>
<polygon fill="blue" stroke="blue" points="867.6,-1521.29 877.96,-1519.07 868.48,-1514.34 867.6,-1521.29"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge128" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/tests/test_server_verify_wrong_backup_id().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M569.04,-1463.89C620.55,-1459.33 680.07,-1453.76 734,-1448 798.33,-1441.13 873.06,-1431.64 916.78,-1425.93"/>
<polygon fill="blue" stroke="blue" points="917.48,-1429.37 926.94,-1424.6 916.57,-1422.43 917.48,-1429.37"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge173" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1440.04,-1320.09C1490.46,-1329.15 1587.74,-1337.71 1638,-1283 1671.48,-1246.55 1648.04,-886.48 1658,-838 1675.5,-752.88 1717.66,-658.53 1739.45,-613.21"/>
<polygon fill="blue" stroke="blue" points="1742.68,-614.58 1743.9,-604.05 1736.39,-611.52 1742.68,-614.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge174" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1440.16,-1319.19C1489.43,-1326.66 1583.57,-1332.67 1638,-1283 1667.95,-1255.67 1630.14,-1223.46 1658,-1194 1672.85,-1178.3 1696.1,-1171.51 1715.89,-1168.67"/>
<polygon fill="blue" stroke="blue" points="1716.32,-1172.14 1725.85,-1167.52 1715.52,-1165.19 1716.32,-1172.14"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge85" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1440.11,-525.1C1485.01,-527.25 1568.83,-533.44 1638,-551 1647.28,-553.36 1648.94,-555.91 1658,-559 1677.35,-565.6 1699.29,-571.91 1717.21,-576.77"/>
<polygon fill="blue" stroke="blue" points="1716.41,-580.18 1726.97,-579.38 1718.22,-573.42 1716.41,-580.18"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge86" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1440.01,-519.91C1484.45,-514.22 1567.36,-503.52 1638,-494 1663.87,-490.51 1692.99,-486.46 1715.46,-483.31"/>
<polygon fill="blue" stroke="blue" points="1716.18,-486.74 1725.59,-481.88 1715.2,-479.81 1716.18,-486.74"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge94" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1435.09,-625.51C1483.6,-615.68 1585.16,-603.56 1638,-659 1682.57,-705.76 1617.31,-898.83 1658,-949 1671.79,-966.01 1695.48,-972.77 1715.74,-975.27"/>
<polygon fill="blue" stroke="blue" points="1715.68,-978.78 1725.96,-976.22 1716.33,-971.81 1715.68,-978.78"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge93" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1435.16,-627.73C1481.15,-621.99 1575.46,-616.91 1638,-659 1702.23,-702.22 1733.98,-793.77 1746.43,-840.01"/>
<polygon fill="blue" stroke="blue" points="1743.11,-841.14 1749,-849.95 1749.89,-839.39 1743.11,-841.14"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge141" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1441.52,-682.6C1492.59,-679.48 1589.12,-682.13 1638,-739 1676.35,-783.62 1620.79,-957.43 1658,-1003 1670.35,-1018.13 1690.52,-1025.14 1709.1,-1028.26"/>
<polygon fill="blue" stroke="blue" points="1708.83,-1031.76 1719.2,-1029.62 1709.76,-1024.82 1708.83,-1031.76"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge140" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1441.58,-682.89C1492.29,-680.24 1587.8,-683.57 1638,-739 1684.92,-790.81 1612.4,-842.02 1658,-895 1672.38,-911.71 1696.29,-918.45 1716.51,-921.01"/>
<polygon fill="blue" stroke="blue" points="1716.4,-924.52 1726.69,-922 1717.08,-917.55 1716.4,-924.52"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge164" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1471.28,-579.47C1543.25,-581.14 1658.31,-583.8 1716.61,-585.16"/>
<polygon fill="blue" stroke="blue" points="1716.73,-588.66 1726.81,-585.39 1716.89,-581.66 1716.73,-588.66"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge165" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1471.07,-571.4C1517.34,-566.37 1581.67,-558.96 1638,-551 1664.29,-547.29 1693.85,-542.39 1716.41,-538.5"/>
<polygon fill="blue" stroke="blue" points="1717.31,-541.89 1726.56,-536.73 1716.11,-534.99 1717.31,-541.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge56" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1440.1,-1074.83C1490.16,-1083.41 1586.4,-1091.17 1638,-1038 1669.11,-1005.95 1647.81,-881.49 1658,-838 1677.82,-753.39 1718.94,-658.81 1739.98,-613.33"/>
<polygon fill="blue" stroke="blue" points="1743.21,-614.68 1744.27,-604.14 1736.87,-611.72 1743.21,-614.68"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge55" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1440.03,-1062.73C1487.86,-1056.69 1578.68,-1052.5 1638,-1095 1654.81,-1107.04 1642.4,-1123.43 1658,-1137 1674.04,-1150.96 1696.57,-1158.43 1715.67,-1162.42"/>
<polygon fill="blue" stroke="blue" points="1715.11,-1165.88 1725.58,-1164.26 1716.38,-1158.99 1715.11,-1165.88"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge89" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1441.86,-1237.45C1492.07,-1246.31 1585.91,-1254.1 1638,-1203 1684.76,-1157.14 1615.06,-1106.45 1658,-1057 1670.71,-1042.36 1690.72,-1035.39 1709.11,-1032.16"/>
<polygon fill="blue" stroke="blue" points="1709.7,-1035.61 1719.1,-1030.73 1708.71,-1028.68 1709.7,-1035.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge90" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1441.82,-1237.75C1492.42,-1247.13 1587.26,-1255.72 1638,-1203 1677.26,-1162.21 1622.12,-992.8 1658,-949 1672.13,-931.75 1696.41,-925.06 1716.89,-922.65"/>
<polygon fill="blue" stroke="blue" points="1717.23,-926.13 1726.88,-921.76 1716.61,-919.16 1717.23,-926.13"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute(). -->
<g id="edge91" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1441.69,-1236.49C1490.83,-1243.89 1582.34,-1249.57 1638,-1203 1661.51,-1183.33 1638.77,-1160.87 1658,-1137 1667.91,-1124.69 1681.49,-1114.77 1695.29,-1106.99"/>
<polygon fill="blue" stroke="blue" points="1697.15,-1109.96 1704.35,-1102.18 1693.87,-1103.77 1697.15,-1109.96"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge123" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1435.11,-1182.21C1483.19,-1191.45 1583.47,-1202.49 1638,-1149 1684.76,-1103.14 1615.06,-1052.45 1658,-1003 1672.26,-986.57 1695.73,-979.8 1715.76,-977.14"/>
<polygon fill="blue" stroke="blue" points="1716.28,-980.61 1725.86,-976.1 1715.56,-973.64 1716.28,-980.61"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge122" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1435.03,-1182.44C1483.46,-1192.19 1584.89,-1204.18 1638,-1149 1677.26,-1108.21 1622.12,-938.8 1658,-895 1672.13,-877.75 1696.41,-871.06 1716.89,-868.65"/>
<polygon fill="blue" stroke="blue" points="1717.23,-872.13 1726.88,-867.76 1716.61,-865.16 1717.23,-872.13"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge132" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1434.28,-1128.29C1482.41,-1138.07 1584.64,-1150.5 1638,-1095 1657.85,-1074.35 1651.78,-865.96 1658,-838 1676.89,-753.18 1718.42,-658.69 1739.77,-613.28"/>
<polygon fill="blue" stroke="blue" points="1743,-614.64 1744.12,-604.1 1736.67,-611.64 1743,-614.64"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge131" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1434.08,-1117.37C1480.1,-1110.74 1576.65,-1103.82 1638,-1149 1655.62,-1161.98 1641.47,-1179.66 1658,-1194 1674.25,-1208.1 1697.38,-1214.86 1716.76,-1218.1"/>
<polygon fill="blue" stroke="blue" points="1716.38,-1221.58 1726.78,-1219.52 1717.37,-1214.65 1716.38,-1221.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation(). -->
<g id="edge25" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1107.72,-387C1141.16,-387 1177.03,-387 1211.89,-387"/>
<polygon fill="blue" stroke="blue" points="1212.18,-390.5 1222.18,-387 1212.18,-383.5 1212.18,-390.5"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify(). -->
<g id="node78" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().</title>
<g id="a_node78"><a xlink:title=" &#160;&#160;&#160;pub fn verify( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&amp;self, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_key_pair: credentials::KeyPair&lt;credentials::ExpiringProfileKeyCredential&gt;, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_ciphertext: uid_encryption::Ciphertext, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_enc_pub...">
<polygon fill="white" stroke="black" points="1782,-359 1726,-359 1726,-323 1782,-323 1782,-359"/>
<text text-anchor="middle" x="1754" y="-337.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify(). -->
<g id="edge83" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1543.36,-368.95C1605.53,-360.66 1674.46,-351.47 1715.73,-345.97"/>
<polygon fill="blue" stroke="blue" points="1716.4,-349.41 1725.85,-344.62 1715.48,-342.47 1716.4,-349.41"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new(). -->
<g id="node79" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().</title>
<g id="a_node79"><a xlink:title=" &#160;&#160;&#160;pub fn new( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;uid_enc_key_pair: uid_encryption::KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;profile_key_enc_key_pair: profile_key_encryption::KeyPair, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;credentials_public_key: credentials::PublicKey, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;cr...">
<polygon fill="white" stroke="black" points="1781,-413 1727,-413 1727,-377 1781,-377 1781,-413"/>
<text text-anchor="middle" x="1754" y="-391.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new(). -->
<g id="edge125" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1141.69,-439.86C1279.08,-437.51 1470.6,-431.08 1638,-414 1664.54,-411.29 1694.23,-406.34 1716.8,-402.16"/>
<polygon fill="blue" stroke="blue" points="1717.45,-405.6 1726.63,-400.31 1716.16,-398.72 1717.45,-405.6"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]verify().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M1782.05,-348.17C1799.42,-353.07 1822.34,-360.09 1842,-368 1854.91,-373.19 1856.46,-378.78 1870,-382 2098.72,-436.45 2163.89,-383.56 2399,-384 2499.44,-384.19 2525.62,-398.59 2625,-384 2640.47,-381.73 2656.98,-377.37 2671.58,-372.81"/>
<polygon fill="blue" stroke="blue" points="2672.91,-376.06 2681.34,-369.64 2670.75,-369.4 2672.91,-376.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity(). -->
<g id="edge126" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/proofs/impl#[ExpiringProfileKeyCredentialPresentationProof]new().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 ristretto/impl#[RistrettoPoint][Identity]identity().</title>
<path fill="none" stroke="blue" d="M1781.42,-398.84C1804.68,-402.02 1839.51,-406.28 1870,-408 2205.04,-426.88 2299.14,-481.14 2625,-401 2643.07,-396.56 2661.76,-388.14 2677.39,-379.85"/>
<polygon fill="blue" stroke="blue" points="2679.13,-382.89 2686.21,-375.01 2675.76,-376.75 2679.13,-382.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point(). -->
<g id="node80" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().</title>
<g id="a_node80"><a xlink:title=" &#160;&#160;&#160;&#160;&#160;&#160;&#160;fn as_point(&amp;self) &#45;&gt; RistrettoPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;self.opaque_id &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="1444,-1003 1370,-1003 1370,-967 1444,-967 1444,-1003"/>
<text text-anchor="middle" x="1407" y="-981.3" font-family="Helvetica,sans-Serif" font-size="14.00">as_point</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge39" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1444.19,-992.69C1494.72,-1001.1 1586.04,-1007.51 1638,-958 1677.14,-920.7 1643.95,-890.21 1658,-838 1680.58,-754.08 1720.45,-659.19 1740.6,-613.49"/>
<polygon fill="blue" stroke="blue" points="1743.84,-614.8 1744.7,-604.24 1737.45,-611.96 1743.84,-614.8"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge36" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1444.11,-981.76C1495.41,-979.36 1588.63,-983.48 1638,-1038 1684.92,-1089.81 1612.4,-1141.02 1658,-1194 1672.38,-1210.71 1696.29,-1217.45 1716.51,-1220.01"/>
<polygon fill="blue" stroke="blue" points="1716.4,-1223.52 1726.69,-1221 1717.08,-1216.55 1716.4,-1223.52"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge37" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1444.02,-982.23C1494.78,-980.47 1586.84,-985.44 1638,-1038 1669.31,-1070.17 1627.99,-1103.61 1658,-1137 1672.57,-1153.21 1695.82,-1160.73 1715.67,-1164.19"/>
<polygon fill="blue" stroke="blue" points="1715.28,-1167.67 1725.68,-1165.65 1716.29,-1160.74 1715.28,-1167.67"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge38" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1444.27,-989.73C1508.12,-998.06 1640.33,-1015.3 1709.17,-1024.28"/>
<polygon fill="blue" stroke="blue" points="1708.89,-1027.78 1719.26,-1025.6 1709.79,-1020.83 1708.89,-1027.78"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge41" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1444.11,-984.16C1489.97,-982.32 1571.16,-976.49 1638,-958 1647.39,-955.4 1648.84,-952.34 1658,-949 1677.21,-941.99 1699.14,-935.65 1717.08,-930.88"/>
<polygon fill="blue" stroke="blue" points="1718.08,-934.24 1726.87,-928.33 1716.31,-927.47 1718.08,-934.24"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute(). -->
<g id="edge42" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]add_revealed_attribute().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1444.35,-987.44C1491.51,-991.89 1575.19,-1004.25 1638,-1038 1648.8,-1043.8 1647.35,-1050.93 1658,-1057 1661,-1058.71 1664.11,-1060.31 1667.3,-1061.82"/>
<polygon fill="blue" stroke="blue" points="1665.9,-1065.03 1676.46,-1065.83 1668.7,-1058.62 1665.9,-1065.03"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge43" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1444.27,-984.05C1510.12,-982.34 1648.69,-978.72 1715.46,-976.98"/>
<polygon fill="blue" stroke="blue" points="1715.64,-980.48 1725.54,-976.72 1715.45,-973.48 1715.64,-980.48"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge40" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/impl#[RoomId][RevealedAttribute]as_point().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1444.09,-991.76C1493.68,-998.84 1582.97,-1003.43 1638,-958 1660.65,-939.3 1636.91,-915.45 1658,-895 1673.54,-879.92 1696.87,-873.15 1716.52,-870.16"/>
<polygon fill="blue" stroke="blue" points="1717.21,-873.6 1726.7,-868.89 1716.34,-866.65 1717.21,-873.6"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key(). -->
<g id="node81" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().</title>
<g id="a_node81"><a xlink:title="fn test_profile_key_credential_only_verifying_one_encryption_key() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_a...">
<polygon fill="white" stroke="black" points="1630,-949 1184,-949 1184,-913 1630,-913 1630,-949"/>
<text text-anchor="middle" x="1407" y="-927.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_credential_only_verifying_one_encryption_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge53" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1627.55,-912.95C1631.19,-910.19 1634.68,-907.21 1638,-904 1680.65,-862.75 1621.2,-818.54 1658,-772 1684.02,-739.09 1936.36,-649 2056.51,-607.48"/>
<polygon fill="blue" stroke="blue" points="2058.01,-610.66 2066.32,-604.09 2055.73,-604.04 2058.01,-610.66"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge50" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1628.31,-949.12C1631.69,-951.87 1634.92,-954.82 1638,-958 1674.61,-995.81 1624.53,-1153.38 1658,-1194 1672.18,-1211.21 1696.46,-1217.9 1716.93,-1220.32"/>
<polygon fill="blue" stroke="blue" points="1716.64,-1223.81 1726.91,-1221.21 1717.26,-1216.84 1716.64,-1223.81"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge48" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1628.19,-949.24C1631.61,-951.95 1634.88,-954.86 1638,-958 1694.45,-1014.76 1607.16,-1075.16 1658,-1137 1671.94,-1153.95 1695.4,-1161.47 1715.51,-1164.74"/>
<polygon fill="blue" stroke="blue" points="1715.29,-1168.24 1725.66,-1166.09 1716.21,-1161.3 1715.29,-1168.24"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge52" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1625.89,-912.87C1630.08,-910.15 1634.12,-907.2 1638,-904 1660.65,-885.3 1634.29,-858.35 1658,-841 1724,-792.71 1772.12,-798.52 1842,-841 1865.1,-855.04 1847.69,-879.73 1870,-895 1907.86,-920.91 1956.78,-930.07 2001.26,-931.88"/>
<polygon fill="blue" stroke="blue" points="2001.17,-935.38 2011.27,-932.17 2001.37,-928.38 2001.17,-935.38"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge54" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1624.38,-949.12C1629.08,-951.83 1633.63,-954.78 1638,-958 1655.62,-970.98 1641.47,-988.66 1658,-1003 1672.18,-1015.31 1691.61,-1022.02 1709.21,-1025.68"/>
<polygon fill="blue" stroke="blue" points="1708.84,-1029.17 1719.3,-1027.5 1710.08,-1022.29 1708.84,-1029.17"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge49" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1627.37,-912.76C1631.06,-910.06 1634.61,-907.14 1638,-904 1671.9,-872.61 1622.33,-831.36 1658,-802 1721.14,-750.03 1760.78,-792.47 1842,-802 1914.61,-810.52 1995.77,-831.16 2051.46,-847.11"/>
<polygon fill="blue" stroke="blue" points="2050.63,-850.52 2061.21,-849.93 2052.57,-843.79 2050.63,-850.52"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge51" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential_only_verifying_one_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1568.33,-949.02C1591.72,-951.88 1615.49,-954.92 1638,-958 1663.93,-961.55 1693.05,-966.11 1715.5,-969.76"/>
<polygon fill="blue" stroke="blue" points="1715.19,-973.25 1725.63,-971.41 1716.32,-966.35 1715.19,-973.25"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key(). -->
<g id="node82" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().</title>
<g id="a_node82"><a xlink:title="fn test_mac_generic_without_verifying_encryption_key() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="1594.5,-787 1219.5,-787 1219.5,-751 1594.5,-751 1594.5,-787"/>
<text text-anchor="middle" x="1407" y="-765.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_mac_generic_without_verifying_encryption_key</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge63" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1594.58,-766.36C1610.62,-759.97 1625.48,-751.1 1638,-739 1677.19,-701.12 1622.68,-659.52 1658,-618 1672.5,-600.95 1696.4,-592.96 1716.6,-589.22"/>
<polygon fill="blue" stroke="blue" points="1717.42,-592.64 1726.76,-587.63 1716.34,-585.72 1717.42,-592.64"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge66" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1594.7,-767.26C1610.82,-760.73 1625.66,-751.58 1638,-739 1694.37,-681.54 1606.01,-620.45 1658,-559 1672.24,-542.17 1696.14,-535.43 1716.41,-532.9"/>
<polygon fill="blue" stroke="blue" points="1716.98,-536.36 1726.61,-531.93 1716.32,-529.39 1716.98,-536.36"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge62" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1594.76,-767.7C1610.92,-761.09 1625.75,-751.8 1638,-739 1674.07,-701.29 1624.8,-545.27 1658,-505 1671.84,-488.22 1695.3,-481.44 1715.44,-478.87"/>
<polygon fill="blue" stroke="blue" points="1715.99,-482.33 1725.6,-477.88 1715.31,-475.36 1715.99,-482.33"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge67" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1594.76,-767.99C1610.87,-774.38 1625.69,-783.44 1638,-796 1670.34,-829.01 1628.4,-967.51 1658,-1003 1670.51,-1018 1690.69,-1025 1709.25,-1028.14"/>
<polygon fill="blue" stroke="blue" points="1708.95,-1031.63 1719.33,-1029.52 1709.89,-1024.7 1708.95,-1031.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge68" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1594.58,-769.76C1610.52,-775.85 1625.36,-784.36 1638,-796 1671.02,-826.41 1627.51,-862.05 1658,-895 1672.87,-911.08 1696.56,-917.83 1716.55,-920.56"/>
<polygon fill="blue" stroke="blue" points="1716.29,-924.06 1726.61,-921.66 1717.05,-917.1 1716.29,-924.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge64" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1594.6,-768.53C1610.69,-774.83 1625.55,-783.71 1638,-796 1686.81,-844.17 1613.2,-897.08 1658,-949 1672.21,-965.47 1695.67,-972.25 1715.72,-974.89"/>
<polygon fill="blue" stroke="blue" points="1715.53,-978.39 1725.83,-975.93 1716.24,-971.43 1715.53,-978.39"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge65" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic_without_verifying_encryption_key().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1594.77,-783.77C1609.58,-787.1 1624.16,-791.13 1638,-796 1669.13,-806.95 1700.63,-827.48 1722.77,-843.82"/>
<polygon fill="blue" stroke="blue" points="1720.69,-846.63 1730.78,-849.85 1724.9,-841.04 1720.69,-846.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic(). -->
<g id="node83" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().</title>
<g id="a_node83"><a xlink:title="fn test_mac_generic() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;&#160;&#160;let label = b&#39; 20221221_AuthCre...">
<polygon fill="white" stroke="black" points="1475.5,-841 1338.5,-841 1338.5,-805 1475.5,-805 1475.5,-841"/>
<text text-anchor="middle" x="1407" y="-819.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_mac_generic</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge135" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1475.7,-835.35C1527.37,-840.55 1596.53,-837.68 1638,-796 1694.15,-739.57 1608.01,-679.96 1658,-618 1672.21,-600.39 1696.49,-592.41 1716.95,-588.83"/>
<polygon fill="blue" stroke="blue" points="1717.54,-592.28 1726.93,-587.36 1716.52,-585.35 1717.54,-592.28"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue(). -->
<g id="edge136" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1475.76,-835.64C1527.64,-841.05 1597.04,-838.32 1638,-796 1674.76,-758.02 1624.4,-599.8 1658,-559 1672.18,-541.79 1696.46,-535.1 1716.93,-532.68"/>
<polygon fill="blue" stroke="blue" points="1717.26,-536.16 1726.91,-531.79 1716.64,-529.19 1717.26,-536.16"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify(). -->
<g id="edge133" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1475.67,-835.78C1527.68,-841.33 1597.3,-838.71 1638,-796 1682.72,-749.07 1617.18,-555.35 1658,-505 1671.79,-487.99 1695.47,-481.23 1715.74,-478.73"/>
<polygon fill="blue" stroke="blue" points="1716.32,-482.19 1725.96,-477.78 1715.67,-475.22 1716.32,-482.19"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge137" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1475.76,-810.83C1527.29,-805.78 1596.22,-808.77 1638,-850 1686.81,-898.17 1613.2,-951.08 1658,-1003 1670.66,-1017.68 1690.67,-1024.66 1709.07,-1027.87"/>
<polygon fill="blue" stroke="blue" points="1708.67,-1031.35 1719.06,-1029.3 1709.66,-1024.42 1708.67,-1031.35"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new(). -->
<g id="edge134" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1475.56,-814.23C1525.13,-811.46 1591.62,-815.85 1638,-850 1655.62,-862.98 1641.47,-880.66 1658,-895 1674.25,-909.1 1697.38,-915.86 1716.76,-919.1"/>
<polygon fill="blue" stroke="blue" points="1716.38,-922.58 1726.78,-920.52 1717.37,-915.65 1716.38,-922.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge139" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1475.51,-811.6C1526.55,-807.07 1594.97,-810.38 1638,-850 1671.02,-880.41 1627.51,-916.05 1658,-949 1672.68,-964.86 1695.93,-971.65 1715.75,-974.45"/>
<polygon fill="blue" stroke="blue" points="1715.41,-977.94 1725.74,-975.58 1716.2,-970.98 1715.41,-977.94"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new(). -->
<g id="edge138" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_mac_generic().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]new().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1475.52,-830.24C1521.4,-835.32 1583.43,-842.53 1638,-850 1664.27,-853.6 1693.83,-858.24 1716.39,-861.9"/>
<polygon fill="blue" stroke="blue" points="1716.12,-865.4 1726.55,-863.56 1717.25,-858.5 1716.12,-865.4"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential(). -->
<g id="node84" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().</title>
<g id="a_node84"><a xlink:title="fn test_profile_key_credential() { &#160;&#160;&#160;&#160;let mut sho = ShoSha256::new(b&#39; Test_Credentials&#39; ); &#160;&#160;&#160;&#160;let keypair = CredentialKeyPair::generate(sho.squeeze_and_ratchet_as_array()); &#160;&#160;&#160;&#160;let blinding_keypair ...">
<polygon fill="white" stroke="black" points="1506.5,-895 1307.5,-895 1307.5,-859 1506.5,-859 1506.5,-895"/>
<text text-anchor="middle" x="1407" y="-873.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge156" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/impl#[`IssuanceProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1506.7,-890.94C1552.48,-891.67 1604.13,-883.37 1638,-850 1686.22,-802.49 1612.8,-749.39 1658,-699 1703.2,-648.61 1880.16,-616.38 2001.33,-599.74"/>
<polygon fill="blue" stroke="blue" points="2001.98,-603.19 2011.41,-598.38 2001.04,-596.25 2001.98,-603.19"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue(). -->
<g id="edge158" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1506.75,-862.17C1552.97,-861.1 1604.99,-869.37 1638,-904 1682.57,-950.76 1617.31,-1143.83 1658,-1194 1672.04,-1211.32 1696.33,-1218.01 1716.83,-1220.4"/>
<polygon fill="blue" stroke="blue" points="1716.56,-1223.89 1726.83,-1221.27 1717.17,-1216.92 1716.56,-1223.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify(). -->
<g id="edge160" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 issuance/blind/impl#[`BlindedIssuanceProofBuilder&lt;&#39;_&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1506.79,-862.4C1552.88,-861.43 1604.77,-869.72 1638,-904 1674.17,-941.32 1625.51,-1096.44 1658,-1137 1671.87,-1154.32 1695.71,-1161.82 1716.03,-1164.98"/>
<polygon fill="blue" stroke="blue" points="1715.61,-1168.46 1725.97,-1166.24 1716.49,-1161.51 1715.61,-1168.46"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge155" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1506.58,-886.8C1550.71,-886.16 1601.01,-877.91 1638,-850 1656.45,-836.08 1638.77,-814.82 1658,-802 1726.04,-756.64 1776.37,-753.22 1842,-802 1876.64,-827.75 1836.79,-867.42 1870,-895 1905.91,-924.83 1955.47,-934.41 2000.96,-935.48"/>
<polygon fill="blue" stroke="blue" points="2001.17,-938.98 2011.2,-935.58 2001.24,-931.98 2001.17,-938.98"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present(). -->
<g id="edge157" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofBuilder&lt;&#39;a&gt;`]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1506.6,-864.06C1551.94,-863.69 1603.25,-872 1638,-904 1671.02,-934.41 1627.51,-970.05 1658,-1003 1671.17,-1017.23 1691.23,-1024.16 1709.54,-1027.46"/>
<polygon fill="blue" stroke="blue" points="1709.06,-1030.92 1719.47,-1028.94 1710.1,-1024 1709.06,-1030.92"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message(). -->
<g id="edge159" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]with_authenticated_message().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1506.76,-890.41C1552.27,-890.93 1603.68,-882.61 1638,-850 1676.56,-813.36 1617.37,-766.33 1658,-732 1720.47,-679.23 1762.34,-713.53 1842,-732 1935.43,-753.66 2033.69,-811.39 2084.48,-844.25"/>
<polygon fill="blue" stroke="blue" points="2082.82,-847.34 2093.1,-849.89 2086.65,-841.48 2082.82,-847.34"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify(). -->
<g id="edge161" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 crypto/zkcredential_examples/test_profile_key_credential().&#45;&gt;rust&#45;analyzer cargo zkcredential 0.1.0 presentation/impl#[`PresentationProofVerifier&lt;&#39;a&gt;`]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1506.58,-867.6C1550.57,-868.35 1600.77,-876.58 1638,-904 1655.62,-916.98 1641.47,-934.66 1658,-949 1674.03,-962.91 1696.76,-969.68 1715.97,-972.96"/>
<polygon fill="blue" stroke="blue" points="1715.53,-976.44 1725.93,-974.42 1716.54,-969.51 1715.53,-976.44"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response(). -->
<g id="node85" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().</title>
<g id="a_node85"><a xlink:title="fn test_backup_auth_request_response() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: Randomne...">
<polygon fill="white" stroke="black" points="569.5,-1248 302.5,-1248 302.5,-1212 569.5,-1212 569.5,-1248"/>
<text text-anchor="middle" x="436" y="-1226.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_backup_auth_request_response</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present(). -->
<g id="edge44" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M569.63,-1220.65C627.92,-1223.96 692.44,-1239.04 734,-1283 784.75,-1336.68 702.12,-1395.41 754,-1448 794.18,-1488.73 864.47,-1488.48 910.11,-1482.97"/>
<polygon fill="blue" stroke="blue" points="910.86,-1486.4 920.3,-1481.6 909.92,-1479.46 910.86,-1486.4"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue(). -->
<g id="edge47" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M569.77,-1236.66C771.15,-1247.28 1133.01,-1268.63 1156,-1286 1176.42,-1301.43 1155.88,-1324.18 1176,-1340 1231.94,-1384 1320.48,-1380.06 1369.8,-1373.44"/>
<polygon fill="blue" stroke="blue" points="1370.6,-1376.86 1379.99,-1371.96 1369.59,-1369.93 1370.6,-1376.86"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify(). -->
<g id="edge45" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M569.63,-1221.82C627.39,-1225.49 691.47,-1240.54 734,-1283 769.48,-1318.42 717.78,-1359.34 754,-1394 797.24,-1435.37 871.81,-1433.56 916.66,-1427.77"/>
<polygon fill="blue" stroke="blue" points="917.43,-1431.19 926.84,-1426.32 916.45,-1424.26 917.43,-1431.19"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive(). -->
<g id="edge46" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_backup_auth_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/backups/auth_credential/impl#[BackupAuthCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M569.51,-1220.06C749.19,-1208.97 1058.85,-1198.99 1156,-1253 1170.01,-1260.79 1162.39,-1274.54 1176,-1283 1233.51,-1318.75 1314.71,-1320.48 1363.66,-1317.46"/>
<polygon fill="blue" stroke="blue" points="1364.17,-1320.93 1373.89,-1316.73 1363.67,-1313.95 1364.17,-1320.93"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity(). -->
<g id="node86" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().</title>
<g id="a_node86"><a xlink:title="fn test_auth_credential_enforces_timestamp_granularity() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;&#160;// cli...">
<polygon fill="white" stroke="black" points="1148,-772 762,-772 762,-736 1148,-736 1148,-772"/>
<text text-anchor="middle" x="955" y="-750.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_auth_credential_enforces_timestamp_granularity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="edge5" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M968.96,-735.96C999.6,-694.9 1081.1,-594.65 1176,-551 1236.79,-523.05 1315.74,-520.03 1363.55,-521.34"/>
<polygon fill="blue" stroke="blue" points="1363.72,-524.84 1373.84,-521.7 1363.97,-517.85 1363.72,-524.84"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="edge4" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M975.66,-735.75C1012.03,-703.18 1093.64,-635.63 1176,-605 1226.1,-586.37 1286.19,-579.81 1332.39,-577.8"/>
<polygon fill="blue" stroke="blue" points="1332.76,-581.29 1342.62,-577.42 1332.5,-574.3 1332.76,-581.29"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential(). -->
<g id="node87" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().</title>
<g id="a_node87"><a xlink:title="fn test_auth_credential() { &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: RandomnessBytes = [0x44u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness3: RandomnessBytes = [0x...">
<polygon fill="white" stroke="black" points="1033,-826 877,-826 877,-790 1033,-790 1033,-826"/>
<text text-anchor="middle" x="955" y="-804.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_auth_credential</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive(). -->
<g id="edge10" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1033.28,-818.86C1075.44,-820.15 1125.17,-813.33 1156,-781 1191.41,-743.87 1140.27,-587.82 1176,-551 1224.3,-501.23 1311.94,-506.27 1363.97,-514.86"/>
<polygon fill="blue" stroke="blue" points="1363.42,-518.32 1373.88,-516.61 1364.64,-511.42 1363.42,-518.32"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify(). -->
<g id="edge11" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1033.36,-817.98C1075.01,-818.85 1124.22,-811.89 1156,-781 1195.4,-742.7 1136.27,-696.96 1176,-659 1227.54,-609.76 1318,-615.77 1368.76,-624.12"/>
<polygon fill="blue" stroke="blue" points="1368.2,-627.58 1378.65,-625.87 1369.41,-620.68 1368.2,-627.58"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present(). -->
<g id="edge13" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1033.18,-814.28C1073.27,-813.68 1121.04,-806.5 1156,-781 1172.7,-768.81 1159.88,-751.94 1176,-739 1229.7,-695.89 1312.01,-686.54 1362.22,-685.2"/>
<polygon fill="blue" stroke="blue" points="1362.49,-688.7 1372.43,-685.03 1362.37,-681.7 1362.49,-688.7"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential(). -->
<g id="edge12" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_auth_credential().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/auth_credential/impl#[CallLinkAuthCredentialResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1033.46,-818.56C1075.4,-819.69 1124.87,-812.79 1156,-781 1211.08,-724.75 1120.44,-660.77 1176,-605 1216.04,-564.81 1281.81,-560.72 1332.78,-565.15"/>
<polygon fill="blue" stroke="blue" points="1332.47,-568.63 1342.77,-566.14 1333.16,-561.67 1332.47,-568.63"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response(). -->
<g id="node88" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().</title>
<g id="a_node88"><a xlink:title="fn test_create_call_link_request_response() { &#160;&#160;&#160;&#160;let randomness0: RandomnessBytes = [0x42u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness2: Ran...">
<polygon fill="white" stroke="black" points="1096.5,-934 813.5,-934 813.5,-898 1096.5,-898 1096.5,-934"/>
<text text-anchor="middle" x="955" y="-912.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_create_call_link_request_response</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="edge20" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1077.81,-934.01C1106.35,-943.21 1134.64,-957.08 1156,-978 1176.09,-997.66 1154.31,-1020.12 1176,-1038 1228.91,-1081.61 1313.18,-1080.48 1363.69,-1074.83"/>
<polygon fill="blue" stroke="blue" points="1364.13,-1078.31 1373.63,-1073.61 1363.28,-1071.36 1364.13,-1078.31"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present(). -->
<g id="edge18" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredential]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M985.61,-934.2C1030.25,-963.32 1114.01,-1024.83 1156,-1100 1178.74,-1140.71 1141.81,-1171.28 1176,-1203 1226.05,-1249.43 1310.89,-1246.15 1362.35,-1238.67"/>
<polygon fill="blue" stroke="blue" points="1363.16,-1242.09 1372.49,-1237.08 1362.07,-1235.17 1363.16,-1242.09"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify(). -->
<g id="edge19" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M996.17,-934.1C1042.14,-956.95 1116.19,-1000.69 1156,-1061 1178.1,-1094.47 1146.17,-1122.19 1176,-1149 1228.9,-1196.54 1318.53,-1191.27 1368.86,-1183.47"/>
<polygon fill="blue" stroke="blue" points="1369.68,-1186.88 1378.97,-1181.79 1368.54,-1179.98 1369.68,-1186.88"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="edge21" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_request_response().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1018.94,-934.07C1063.45,-949.99 1121.17,-977.55 1156,-1021 1177.31,-1047.58 1150.2,-1072.75 1176,-1095 1230.14,-1141.71 1320.06,-1136.55 1369.92,-1129.05"/>
<polygon fill="blue" stroke="blue" points="1370.61,-1132.48 1379.92,-1127.43 1369.49,-1125.57 1370.61,-1132.48"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity(). -->
<g id="node89" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().</title>
<g id="a_node89"><a xlink:title="fn test_create_call_link_enforces_timestamp_granularity() { &#160;&#160;&#160;&#160;let randomness0: RandomnessBytes = [0x42u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let randomness1: RandomnessBytes = [0x43u8; RANDOMNESS_LEN]; &#160;&#160;&#160;&#160;let ra...">
<polygon fill="white" stroke="black" points="1147,-880 763,-880 763,-844 1147,-844 1147,-880"/>
<text text-anchor="middle" x="955" y="-858.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_create_call_link_enforces_timestamp_granularity</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive(). -->
<g id="edge163" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequestContext]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1145.8,-880.09C1149.37,-882.81 1152.78,-885.78 1156,-889 1203.23,-936.26 1128.67,-990.84 1176,-1038 1224.97,-1086.79 1311.7,-1083.64 1363.51,-1076.26"/>
<polygon fill="blue" stroke="blue" points="1364.35,-1079.67 1373.7,-1074.69 1363.29,-1072.76 1364.35,-1079.67"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue(). -->
<g id="edge162" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_create_call_link_enforces_timestamp_granularity().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/call_links/create_credential/impl#[CreateCallLinkCredentialRequest]issue().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M1146.37,-880.25C1149.74,-882.94 1152.96,-885.85 1156,-889 1187.91,-922.12 1143.81,-1062.15 1176,-1095 1226.42,-1146.44 1318.91,-1139.11 1369.9,-1130.07"/>
<polygon fill="blue" stroke="blue" points="1370.64,-1133.49 1379.82,-1128.19 1369.34,-1126.61 1370.64,-1133.49"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify(). -->
<g id="node90" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().</title>
<g id="a_node90"><a xlink:title="fn test_profile_key_credential_presentation_v1_does_not_verify() { &#160;&#160;&#160;&#160;// Originally from test_integration_profile. &#160;&#160;&#160;&#160;// SERVER &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(z...">
<polygon fill="white" stroke="black" points="651.5,-326 220.5,-326 220.5,-290 651.5,-290 651.5,-326"/>
<text text-anchor="middle" x="436" y="-304.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_profile_key_credential_presentation_v1_does_not_verify</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="edge114" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_profile_key_credential_presentation_v1_does_not_verify().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M651.85,-309.6C680.31,-314.94 708.45,-323.03 734,-335 745.38,-340.33 742.8,-349.28 754,-355 766.16,-361.21 779.23,-366.27 792.66,-370.39"/>
<polygon fill="blue" stroke="blue" points="791.91,-373.82 802.49,-373.22 793.85,-367.09 791.91,-373.82"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile(). -->
<g id="node91" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().</title>
<g id="a_node91"><a xlink:title="fn test_integration_expiring_profile() { &#160;&#160;&#160;&#160;// SERVER &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params...">
<polygon fill="white" stroke="black" points="555.5,-380 316.5,-380 316.5,-344 555.5,-344 555.5,-380"/>
<text text-anchor="middle" x="436" y="-358.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_integration_expiring_profile</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation(). -->
<g id="edge150" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerSecretParams]verify_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M555.61,-367.74C625.65,-371.12 715.3,-375.46 791.82,-379.16"/>
<polygon fill="blue" stroke="blue" points="791.89,-382.66 802.04,-379.65 792.22,-375.67 791.89,-382.66"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation(). -->
<g id="edge151" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_expiring_profile().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/server_params/impl#[ServerPublicParams]create_expiring_profile_key_credential_presentation().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M542.19,-380.02C603.84,-390.4 683.26,-403.43 754,-414 770.95,-416.53 788.72,-419.08 806.38,-421.55"/>
<polygon fill="blue" stroke="blue" points="806.37,-425.09 816.75,-423 807.33,-418.15 806.37,-425.09"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc(). -->
<g id="node92" class="node">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().</title>
<g id="a_node92"><a xlink:title="fn test_integration_auth_zkc() { &#160;&#160;&#160;&#160;let server_secret_params = zkgroup::ServerSecretParams::generate(zkgroup::TEST_ARRAY_32); &#160;&#160;&#160;&#160;let server_public_params = server_secret_params.get_public_params(); ...">
<polygon fill="white" stroke="black" points="533,-272 339,-272 339,-236 533,-236 533,-272"/>
<text text-anchor="middle" x="436" y="-250.3" font-family="Helvetica,sans-Serif" font-size="14.00">test_integration_auth_zkc</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive(). -->
<g id="edge168" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]receive().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M532.42,-272.03C597.71,-278.47 681.62,-274.21 734,-224 779.06,-180.81 709.67,-128.94 754,-85 795.09,-44.27 866.39,-44.85 911.83,-50.39"/>
<polygon fill="blue" stroke="blue" points="911.57,-53.89 921.95,-51.76 912.51,-46.95 911.57,-53.89"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential(). -->
<g id="edge166" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcResponse]issue_credential().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M533.17,-270.76C597.54,-276.24 680.05,-271.34 734,-224 763.17,-198.4 725.26,-165.08 754,-139 787.68,-108.44 838.62,-101.93 880.66,-102.93"/>
<polygon fill="blue" stroke="blue" points="880.74,-106.44 890.86,-103.33 881.01,-99.44 880.74,-106.44"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify(). -->
<g id="edge169" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkcPresentation]verify().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M533.03,-257.71C648.73,-262.19 837.46,-269.49 916.9,-272.56"/>
<polygon fill="blue" stroke="blue" points="916.8,-276.06 926.92,-272.95 917.07,-269.07 916.8,-276.06"/>
</g>
<!-- rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present(). -->
<g id="edge167" class="edge">
<title>rust&#45;analyzer cargo zkgroup 0.9.0 test_integration_auth_zkc().&#45;&gt;rust&#45;analyzer cargo zkgroup 0.9.0 api/auth/auth_credential_with_pni/zkc/impl#[AuthCredentialWithPniZkc]present().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M533.03,-247.68C645.61,-240.28 827.32,-228.33 910.23,-222.88"/>
<polygon fill="blue" stroke="blue" points="910.56,-226.36 920.31,-222.22 910.1,-219.38 910.56,-226.36"/>
</g>
</g>
</svg>
