<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: function_subgraph Pages: 1 -->
<svg width="1158pt" height="207pt"
 viewBox="0.00 0.00 1158.00 207.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 203)">
<title>function_subgraph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-203 1154,-203 1154,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="1070,-62 1070,-137 1144,-137 1144,-62 1070,-62"/>
<text text-anchor="middle" x="1107" y="-121.8" font-family="Helvetica,sans-Serif" font-size="14.00">scalar.rs</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="lightblue" stroke="lightblue" points="8,-8 8,-191 1050,-191 1050,-8 8,-8"/>
<text text-anchor="middle" x="529" y="-175.8" font-family="Helvetica,sans-Serif" font-size="14.00">username.rs</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar][`From&lt;u8&gt;`]from(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar][`From&lt;u8&gt;`]from().</title>
<g id="a_node1"><a xlink:title=" &#160;&#160;&#160;fn from(x: u8) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut s_bytes = [0u8; 32]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s_bytes[0] = x; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Scalar { bytes: s_bytes } &#160;&#160;&#160;&#160;}">
<polygon fill="green" stroke="black" stroke-dasharray="1,5" points="1134,-106 1080,-106 1080,-70 1134,-70 1134,-106"/>
<text text-anchor="middle" x="1107" y="-84.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/nickname_scalar(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/nickname_scalar().</title>
<g id="a_node2"><a xlink:title="fn nickname_scalar(nickname: &amp;str) &#45;&gt; Result&lt;Scalar, UsernameError&gt; { &#160;&#160;&#160;&#160;assert!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;!nickname.is_empty(), &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#39; should be checked before calling nickname_scalar&#39; , &#160;&#160;&#160;&#160;); &#160;&#160;&#160;&#160;let bytes: Vec...">
<polygon fill="white" stroke="black" points="863,-106 731,-106 731,-70 863,-70 863,-106"/>
<text text-anchor="middle" x="797" y="-84.3" font-family="Helvetica,sans-Serif" font-size="14.00">nickname_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/to_base_37_scalar(). -->
<g id="node9" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/to_base_37_scalar().</title>
<g id="a_node9"><a xlink:title="fn to_base_37_scalar(bytes: &amp;[u8]) &#45;&gt; Scalar { &#160;&#160;&#160;&#160;assert!( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bytes.len() &lt;= MAX_NICKNAME_LENGTH, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#39; may not fit in a Scalar&#39; &#160;&#160;&#160;&#160;&#160;); &#160;&#160;&#160;&#160;&#160;let thirty_seven = Scalar::from(37u8); &#160;&#160;&#160;&#160;let m...">
<polygon fill="white" stroke="black" points="1042,-106 899,-106 899,-70 1042,-70 1042,-106"/>
<text text-anchor="middle" x="970.5" y="-84.3" font-family="Helvetica,sans-Serif" font-size="14.00">to_base_37_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/nickname_scalar().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/to_base_37_scalar(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/nickname_scalar().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/to_base_37_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M863.33,-88C871.69,-88 880.34,-88 888.91,-88"/>
<polygon fill="blue" stroke="blue" points="888.93,-91.5 898.93,-88 888.93,-84.5 888.93,-91.5"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit(). -->
<g id="node3" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit().</title>
<g id="a_node3"><a xlink:title=" &#160;&#160;&#160;fn from_parts_without_soft_limit( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nickname: &amp;str, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;discriminator: &amp;str, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Self, UsernameError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;validate_prefix(nickname)?; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let discriminator = valida...">
<polygon fill="white" stroke="black" points="363,-52 144,-52 144,-16 363,-16 363,-52"/>
<text text-anchor="middle" x="253.5" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_parts_without_soft_limit</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/make_scalars(). -->
<g id="node6" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/make_scalars().</title>
<g id="a_node6"><a xlink:title="fn make_scalars(nickname: &amp;str, discriminator: u64) &#45;&gt; Result&lt;Vec&lt;Scalar&gt;, UsernameError&gt; { &#160;&#160;&#160;&#160;Ok(vec![ &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;username_sha_scalar(nickname, discriminator)?, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nickname_scalar(nickname)?, &#160;&#160;&#160;&#160;...">
<polygon fill="white" stroke="black" points="602,-52 492,-52 492,-16 602,-16 602,-52"/>
<text text-anchor="middle" x="547" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">make_scalars</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/make_scalars(). -->
<g id="edge2" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/make_scalars().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M363.04,-34C402.97,-34 446.89,-34 481.68,-34"/>
<polygon fill="blue" stroke="blue" points="481.71,-37.5 491.71,-34 481.71,-30.5 481.71,-37.5"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts(). -->
<g id="node4" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts().</title>
<g id="a_node4"><a xlink:title=" &#160;&#160;&#160;pub fn from_parts( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nickname: &amp;str, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;discriminator: &amp;str, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;limits: NicknameLimits, &#160;&#160;&#160;&#160;) &#45;&gt; Result&lt;Self, UsernameError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// This should perform the same set of checks...">
<polygon fill="white" stroke="black" points="108,-106 16,-106 16,-70 108,-70 108,-106"/>
<text text-anchor="middle" x="62" y="-84.3" font-family="Helvetica,sans-Serif" font-size="14.00">from_parts</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit(). -->
<g id="edge3" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M108.39,-75.07C129.66,-69.01 155.53,-61.63 179.45,-54.82"/>
<polygon fill="blue" stroke="blue" points="180.55,-58.14 189.21,-52.03 178.63,-51.41 180.55,-58.14"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_nicknames_should_produce_scalar(). -->
<g id="node5" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_nicknames_should_produce_scalar().</title>
<g id="a_node5"><a xlink:title=" &#160;&#160;&#160;fn valid_nicknames_should_produce_scalar() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;proptest!(|(nickname in NICKNAME_PATTERN)| { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;nickname_scalar(&amp;nickname).unwrap(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}); &#160;&#160;&#160;&#160;}">
<polygon fill="white" stroke="black" points="695,-160 399,-160 399,-124 695,-124 695,-160"/>
<text text-anchor="middle" x="547" y="-138.3" font-family="Helvetica,sans-Serif" font-size="14.00">valid_nicknames_should_produce_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_nicknames_should_produce_scalar().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/nickname_scalar(). -->
<g id="edge4" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_nicknames_should_produce_scalar().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/nickname_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M652.21,-123.92C666.62,-121.11 681.2,-118.11 695,-115 703.71,-113.04 712.81,-110.83 721.81,-108.55"/>
<polygon fill="blue" stroke="blue" points="722.72,-111.93 731.53,-106.05 720.98,-105.15 722.72,-111.93"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/make_scalars().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/nickname_scalar(). -->
<g id="edge5" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/make_scalars().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/nickname_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M602.32,-42.91C630.14,-47.75 664.5,-54.13 695,-61 703.71,-62.96 712.81,-65.17 721.81,-67.45"/>
<polygon fill="blue" stroke="blue" points="720.98,-70.85 731.53,-69.95 722.72,-64.07 720.98,-70.85"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_nickname_scalar(). -->
<g id="node7" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_nickname_scalar().</title>
<g id="a_node7"><a xlink:title=" &#160;&#160;&#160;fn valid_nickname_scalar() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// the results should be 1 + 27*27 + 37*27*37^1 + 1*27*37^2 = 74656 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let nickname = &#39; _z9_&#39; ; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;assert_eq!(Scalar::from(74656_u32), nickname_scala...">
<polygon fill="white" stroke="black" points="633,-106 461,-106 461,-70 633,-70 633,-106"/>
<text text-anchor="middle" x="547" y="-84.3" font-family="Helvetica,sans-Serif" font-size="14.00">valid_nickname_scalar</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_nickname_scalar().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/nickname_scalar(). -->
<g id="edge6" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/test/valid_nickname_scalar().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/nickname_scalar().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M633,-88C661.47,-88 693,-88 720.68,-88"/>
<polygon fill="blue" stroke="blue" points="720.69,-91.5 730.69,-88 720.69,-84.5 720.69,-91.5"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]new(). -->
<g id="node8" class="node">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]new().</title>
<g id="a_node8"><a xlink:title=" &#160;&#160;&#160;pub fn new(s: &amp;str) &#45;&gt; Result&lt;Self, UsernameError&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let (nickname, discriminator) = &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;s.rsplit_once(&#39;.&#39;).ok_or(UsernameError::MissingSeparator)?; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Self::from_parts_withou...">
<polygon fill="white" stroke="black" points="89,-52 35,-52 35,-16 89,-16 89,-52"/>
<text text-anchor="middle" x="62" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">new</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]new().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit(). -->
<g id="edge7" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]new().&#45;&gt;rust&#45;analyzer cargo usernames 0.1.0 username/impl#[Username]from_parts_without_soft_limit().</title>
<path fill="none" stroke="blue" stroke-dasharray="5,2" d="M89.35,-34C101.56,-34 117.02,-34 133.53,-34"/>
<polygon fill="blue" stroke="blue" points="133.92,-37.5 143.92,-34 133.92,-30.5 133.92,-37.5"/>
</g>
<!-- rust&#45;analyzer cargo usernames 0.1.0 username/to_base_37_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar][`From&lt;u8&gt;`]from(). -->
<g id="edge8" class="edge">
<title>rust&#45;analyzer cargo usernames 0.1.0 username/to_base_37_scalar().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 scalar/impl#[Scalar][`From&lt;u8&gt;`]from().</title>
<path fill="none" stroke="blue" d="M1042.29,-88C1051.73,-88 1061.07,-88 1069.57,-88"/>
<polygon fill="blue" stroke="blue" points="1069.84,-91.5 1079.84,-88 1069.84,-84.5 1069.84,-91.5"/>
</g>
</g>
</svg>
