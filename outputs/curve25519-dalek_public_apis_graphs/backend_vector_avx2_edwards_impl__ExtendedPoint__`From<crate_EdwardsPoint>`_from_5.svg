<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: function_subgraph Pages: 1 -->
<svg width="1099pt" height="182pt"
 viewBox="0.00 0.00 1099.00 182.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 178)">
<title>function_subgraph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-178 1095,-178 1095,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="488,-49 488,-124 701,-124 701,-49 488,-49"/>
<text text-anchor="middle" x="594.5" y="-108.8" font-family="Helvetica,sans-Serif" font-size="14.00">mod.rs</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="923,-49 923,-124 1083,-124 1083,-49 923,-49"/>
<text text-anchor="middle" x="1003" y="-108.8" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_2</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="721,-49 721,-124 903,-124 903,-49 721,-49"/>
<text text-anchor="middle" x="812" y="-108.8" font-family="Helvetica,sans-Serif" font-size="14.00">vartime_double_base.rs</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_3</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="172,-49 172,-124 468,-124 468,-49 172,-49"/>
<text text-anchor="middle" x="320" y="-108.8" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust5" class="cluster">
<title>cluster_4</title>
<polygon fill="lightblue" stroke="lightblue" points="8,-91 8,-166 152,-166 152,-91 8,-91"/>
<text text-anchor="middle" x="80" y="-150.8" font-family="Helvetica,sans-Serif" font-size="14.00">curve25519.rs</text>
</g>
<g id="clust6" class="cluster">
<title>cluster_5</title>
<polygon fill="lightblue" stroke="lightblue" points="15.5,-8 15.5,-83 144.5,-83 144.5,-8 15.5,-8"/>
<text text-anchor="middle" x="80" y="-67.8" font-family="Helvetica,sans-Serif" font-size="14.00">vrf.rs</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vartime_double_base_mul(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vartime_double_base_mul().</title>
<g id="a_node1"><a xlink:title="pub fn vartime_double_base_mul(a: &amp;Scalar, A: &amp;EdwardsPoint, b: &amp;Scalar) &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;match get_selected_backend() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[cfg(curve25519_dalek_backend = &#39; simd&#39; )] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BackendKind::A...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="693,-93 496,-93 496,-57 693,-57 693,-93"/>
<text text-anchor="middle" x="594.5" y="-71.3" font-family="Helvetica,sans-Serif" font-size="14.00">vartime_double_base_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul(). -->
<g id="node4" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul().</title>
<g id="a_node4"><a xlink:title=" &#160;&#160;&#160;pub fn mul(a: &amp;Scalar, A: &amp;EdwardsPoint, b: &amp;Scalar) &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let a_naf = a.non_adjacent_form(5); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[cfg(feature = &#39; precomputed&#45;tables&#39; )] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let b_naf = b.non_adjac...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="839,-93 785,-93 785,-57 839,-57 839,-93"/>
<text text-anchor="middle" x="812" y="-71.3" font-family="Helvetica,sans-Serif" font-size="14.00">mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vartime_double_base_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul(). -->
<g id="edge4" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vartime_double_base_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M693.16,-75C722.2,-75 752.22,-75 774.69,-75"/>
<polygon fill="gray" stroke="gray" points="774.76,-78.5 784.76,-75 774.76,-71.5 774.76,-78.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][`From&lt;crate::EdwardsPoint&gt;`]from(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][`From&lt;crate::EdwardsPoint&gt;`]from().</title>
<g id="a_node2"><a xlink:title=" &#160;&#160;&#160;fn from(P: edwards::EdwardsPoint) &#45;&gt; ExtendedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;ExtendedPoint(FieldElement2625x4::new(&amp;P.X, &amp;P.Y, &amp;P.Z, &amp;P.T)) &#160;&#160;&#160;&#160;}">
<polygon fill="green" stroke="black" stroke-dasharray="1,5" points="1075,-93 1021,-93 1021,-57 1075,-57 1075,-93"/>
<text text-anchor="middle" x="1048" y="-71.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from(). -->
<g id="node3" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().</title>
<g id="a_node3"><a xlink:title=" &#160;&#160;&#160;fn from(point: &amp;edwards::EdwardsPoint) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let A = ExtendedPoint::from(*point); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut Ai = [CachedPoint::from(A); 8]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let A2 = A.double(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..7 { &#160;...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="985,-93 931,-93 931,-57 985,-57 985,-93"/>
<text text-anchor="middle" x="958" y="-71.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][`From&lt;crate::EdwardsPoint&gt;`]from(). -->
<g id="edge6" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint][`From&lt;crate::EdwardsPoint&gt;`]from().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M985.4,-75C993.39,-75 1002.31,-75 1010.82,-75"/>
<polygon fill="gray" stroke="gray" points="1010.92,-78.5 1020.92,-75 1010.92,-71.5 1010.92,-78.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from(). -->
<g id="edge2" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M839.08,-75C861.87,-75 895.21,-75 920.62,-75"/>
<polygon fill="gray" stroke="gray" points="920.63,-78.5 930.63,-75 920.63,-71.5 920.63,-78.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint(). -->
<g id="node5" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint().</title>
<g id="a_node5"><a xlink:title=" &#160;&#160;&#160;pub fn vartime_double_scalar_mul_basepoint( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a: &amp;Scalar, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;A: &amp;EdwardsPoint, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b: &amp;Scalar, &#160;&#160;&#160;&#160;) &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;crate::backend::vartime_double_base_mul(a, A, b) &#160;&#160;&#160;&#160;}">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="460,-93 180,-93 180,-57 460,-57 460,-93"/>
<text text-anchor="middle" x="320" y="-71.3" font-family="Helvetica,sans-Serif" font-size="14.00">vartime_double_scalar_mul_basepoint</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vartime_double_base_mul(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vartime_double_base_mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M460.04,-75C468.63,-75 477.19,-75 485.61,-75"/>
<polygon fill="gray" stroke="gray" points="485.79,-78.5 495.79,-75 485.79,-71.5 485.79,-78.5"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature(). -->
<g id="node6" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().</title>
<g id="a_node6"><a xlink:title=" &#160;&#160;&#160;pub fn verify_signature( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;their_public_key: &amp;[u8; PUBLIC_KEY_LENGTH], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[&amp;[u8]], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature: &amp;[u8; SIGNATURE_LENGTH], &#160;&#160;&#160;&#160;) &#45;&gt; bool { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mont_point = Montgom...">
<polygon fill="white" stroke="black" points="144,-135 16,-135 16,-99 144,-99 144,-135"/>
<text text-anchor="middle" x="80" y="-113.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint(). -->
<g id="edge3" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint().</title>
<path fill="none" stroke="blue" d="M144.15,-105.86C163.5,-102.44 185.39,-98.58 206.98,-94.77"/>
<polygon fill="blue" stroke="blue" points="207.63,-98.21 216.87,-93.02 206.41,-91.31 207.63,-98.21"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash(). -->
<g id="node7" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().</title>
<g id="a_node7"><a xlink:title=" &#160;&#160;&#160;pub fn proof_to_hash(&amp;self, m: &amp;[u8], proof: &amp;[u8; 80]) &#45;&gt; Result&lt;[u8; 32]&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Decode proof into its component parts: gamma, c, and s. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let gamma = CompressedEdwardsY(proof[..32]....">
<polygon fill="white" stroke="black" points="136.5,-52 23.5,-52 23.5,-16 136.5,-16 136.5,-52"/>
<text text-anchor="middle" x="80" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">proof_to_hash</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint(). -->
<g id="edge5" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint().</title>
<path fill="none" stroke="blue" d="M136.5,-43.56C156.81,-47.06 180.61,-51.16 204.2,-55.22"/>
<polygon fill="blue" stroke="blue" points="203.83,-58.71 214.28,-56.96 205.02,-51.81 203.83,-58.71"/>
</g>
</g>
</svg>
