<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: function_subgraph Pages: 1 -->
<svg width="1321pt" height="182pt"
 viewBox="0.00 0.00 1321.00 182.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 178)">
<title>function_subgraph</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-178 1317,-178 1317,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_0</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="488,-31 488,-106 701,-106 701,-31 488,-31"/>
<text text-anchor="middle" x="594.5" y="-90.8" font-family="Helvetica,sans-Serif" font-size="14.00">mod.rs</text>
</g>
<g id="clust2" class="cluster">
<title>cluster_1</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="923,-8 923,-137 1093,-137 1093,-8 923,-8"/>
<text text-anchor="middle" x="1008" y="-121.8" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust3" class="cluster">
<title>cluster_2</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="1113,-60 1113,-135 1305,-135 1305,-60 1113,-60"/>
<text text-anchor="middle" x="1209" y="-119.8" font-family="Helvetica,sans-Serif" font-size="14.00">field.rs</text>
</g>
<g id="clust4" class="cluster">
<title>cluster_3</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="721,-31 721,-106 903,-106 903,-31 721,-31"/>
<text text-anchor="middle" x="812" y="-90.8" font-family="Helvetica,sans-Serif" font-size="14.00">vartime_double_base.rs</text>
</g>
<g id="clust5" class="cluster">
<title>cluster_4</title>
<polygon fill="lightgrey" stroke="lightgrey" stroke-dasharray="1,5" points="172,-31 172,-106 468,-106 468,-31 172,-31"/>
<text text-anchor="middle" x="320" y="-90.8" font-family="Helvetica,sans-Serif" font-size="14.00">edwards.rs</text>
</g>
<g id="clust6" class="cluster">
<title>cluster_5</title>
<polygon fill="lightblue" stroke="lightblue" points="8,-91 8,-166 152,-166 152,-91 8,-91"/>
<text text-anchor="middle" x="80" y="-150.8" font-family="Helvetica,sans-Serif" font-size="14.00">curve25519.rs</text>
</g>
<g id="clust7" class="cluster">
<title>cluster_6</title>
<polygon fill="lightblue" stroke="lightblue" points="15.5,-8 15.5,-83 144.5,-83 144.5,-8 15.5,-8"/>
<text text-anchor="middle" x="80" y="-67.8" font-family="Helvetica,sans-Serif" font-size="14.00">vrf.rs</text>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vartime_double_base_mul(). -->
<g id="node1" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vartime_double_base_mul().</title>
<g id="a_node1"><a xlink:title="pub fn vartime_double_base_mul(a: &amp;Scalar, A: &amp;EdwardsPoint, b: &amp;Scalar) &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;match get_selected_backend() { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[cfg(curve25519_dalek_backend = &#39; simd&#39; )] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;BackendKind::A...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="693,-75 496,-75 496,-39 693,-39 693,-75"/>
<text text-anchor="middle" x="594.5" y="-53.3" font-family="Helvetica,sans-Serif" font-size="14.00">vartime_double_base_mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul(). -->
<g id="node7" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul().</title>
<g id="a_node7"><a xlink:title=" &#160;&#160;&#160;pub fn mul(a: &amp;Scalar, A: &amp;EdwardsPoint, b: &amp;Scalar) &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let a_naf = a.non_adjacent_form(5); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[cfg(feature = &#39; precomputed&#45;tables&#39; )] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let b_naf = b.non_adjac...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="839,-75 785,-75 785,-39 839,-39 839,-75"/>
<text text-anchor="middle" x="812" y="-53.3" font-family="Helvetica,sans-Serif" font-size="14.00">mul</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vartime_double_base_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul(). -->
<g id="edge5" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vartime_double_base_mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M693.16,-57C722.2,-57 752.22,-57 774.69,-57"/>
<polygon fill="gray" stroke="gray" points="774.76,-60.5 784.76,-57 774.76,-53.5 774.76,-60.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from(). -->
<g id="node2" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from().</title>
<g id="a_node2"><a xlink:title=" &#160;&#160;&#160;fn from(P: ExtendedPoint) &#45;&gt; CachedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut x = P.0; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;x = x.blend(x.diff_sum(), Lanes::AB); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// x = (Y2 &#45; X2, Y2 + X2, Z2, T2) = (S2 S3 Z2 T2) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;x = x * (12166...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="1080,-106 1026,-106 1026,-70 1080,-70 1080,-106"/>
<text text-anchor="middle" x="1053" y="-84.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/field/impl#[FieldElement2625x4]diff_sum(). -->
<g id="node6" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/field/impl#[FieldElement2625x4]diff_sum().</title>
<g id="a_node6"><a xlink:title=" &#160;&#160;&#160;pub fn diff_sum(&amp;self) &#45;&gt; FieldElement2625x4 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// tmp1 = (B, A, D, C) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let tmp1 = self.shuffle(Shuffle::BADC); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// tmp2 = (&#45;A, B, &#45;C, D) &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let tmp2 = self.blend(self.ne...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="1197,-104 1121,-104 1121,-68 1197,-68 1197,-104"/>
<text text-anchor="middle" x="1159" y="-82.3" font-family="Helvetica,sans-Serif" font-size="14.00">diff_sum</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/field/impl#[FieldElement2625x4]diff_sum(). -->
<g id="edge1" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/field/impl#[FieldElement2625x4]diff_sum().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M1080.24,-87.5C1089.45,-87.32 1100.1,-87.11 1110.5,-86.91"/>
<polygon fill="gray" stroke="gray" points="1110.83,-90.41 1120.77,-86.72 1110.7,-83.41 1110.83,-90.41"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from(). -->
<g id="node3" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().</title>
<g id="a_node3"><a xlink:title=" &#160;&#160;&#160;fn from(point: &amp;edwards::EdwardsPoint) &#45;&gt; Self { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let A = ExtendedPoint::from(*point); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mut Ai = [CachedPoint::from(A); 8]; &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let A2 = A.double(); &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;for i in 0..7 { &#160;...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="985,-98 931,-98 931,-62 985,-62 985,-98"/>
<text text-anchor="middle" x="958" y="-76.3" font-family="Helvetica,sans-Serif" font-size="14.00">from</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from(). -->
<g id="edge9" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[CachedPoint][`From&lt;ExtendedPoint&gt;`]from().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M985.4,-82.27C994.81,-83.08 1005.57,-84.01 1015.66,-84.87"/>
<polygon fill="gray" stroke="gray" points="1015.59,-88.38 1025.85,-85.75 1016.19,-81.41 1015.59,-88.38"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double(). -->
<g id="node4" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double().</title>
<g id="a_node4"><a xlink:title=" &#160;&#160;&#160;pub fn double(&amp;self) &#45;&gt; ExtendedPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Want to compute (X1 Y1 Z1 X1+Y1). &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Not sure how to do this less expensively than computing &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// (X1 Y1 Z1 T1) &#45;&#45;(256bit shuffle)&#45;...">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="1085,-52 1021,-52 1021,-16 1085,-16 1085,-52"/>
<text text-anchor="middle" x="1053" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">double</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double(). -->
<g id="edge10" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M985.4,-66.94C993.61,-62.88 1002.86,-58.31 1011.79,-53.89"/>
<polygon fill="gray" stroke="gray" points="1013.51,-56.94 1020.92,-49.37 1010.41,-50.67 1013.51,-56.94"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/field/impl#[FieldElement2625x4]shuffle(). -->
<g id="node5" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/field/impl#[FieldElement2625x4]shuffle().</title>
<g id="a_node5"><a xlink:title=" &#160;&#160;&#160;pub fn shuffle(&amp;self, control: Shuffle) &#45;&gt; FieldElement2625x4 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;#[inline(always)] &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;fn shuffle_lanes(x: u32x8, control: Shuffle) &#45;&gt; u32x8 { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;unsafe { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;use c...">
<polygon fill="green" stroke="black" stroke-dasharray="1,5" points="1297,-104 1233,-104 1233,-68 1297,-68 1297,-104"/>
<text text-anchor="middle" x="1265" y="-82.3" font-family="Helvetica,sans-Serif" font-size="14.00">shuffle</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/field/impl#[FieldElement2625x4]shuffle(). -->
<g id="edge11" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/field/impl#[FieldElement2625x4]shuffle().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M1085.11,-37.52C1114.36,-41.28 1159.19,-48.21 1197,-59 1205.67,-61.48 1214.76,-64.69 1223.35,-68.04"/>
<polygon fill="gray" stroke="gray" points="1222.2,-71.35 1232.78,-71.84 1224.81,-64.85 1222.2,-71.35"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/field/impl#[FieldElement2625x4]diff_sum().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/field/impl#[FieldElement2625x4]shuffle(). -->
<g id="edge6" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/field/impl#[FieldElement2625x4]diff_sum().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/field/impl#[FieldElement2625x4]shuffle().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M1197.25,-86C1205.54,-86 1214.37,-86 1222.81,-86"/>
<polygon fill="gray" stroke="gray" points="1222.84,-89.5 1232.84,-86 1222.84,-82.5 1222.84,-89.5"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from(). -->
<g id="edge3" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[`NafLookupTable5&lt;CachedPoint&gt;`][`From&lt;&amp;crate::EdwardsPoint&gt;`]from().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M839.08,-61.17C861.87,-64.81 895.21,-70.13 920.62,-74.19"/>
<polygon fill="gray" stroke="gray" points="920.2,-77.67 930.63,-75.79 921.31,-70.75 920.2,-77.67"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double(). -->
<g id="edge2" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/scalar_mul/vartime_double_base/spec_avx2/mul().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vector/avx2/edwards/impl#[ExtendedPoint]double().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M839.03,-54.49C880.37,-50.52 961.39,-42.72 1010.71,-37.97"/>
<polygon fill="gray" stroke="gray" points="1011.11,-41.45 1020.73,-37.01 1010.44,-34.48 1011.11,-41.45"/>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint(). -->
<g id="node8" class="node">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint().</title>
<g id="a_node8"><a xlink:title=" &#160;&#160;&#160;pub fn vartime_double_scalar_mul_basepoint( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;a: &amp;Scalar, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;A: &amp;EdwardsPoint, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;b: &amp;Scalar, &#160;&#160;&#160;&#160;) &#45;&gt; EdwardsPoint { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;crate::backend::vartime_double_base_mul(a, A, b) &#160;&#160;&#160;&#160;}">
<polygon fill="lightgray" stroke="black" stroke-dasharray="1,5" points="460,-75 180,-75 180,-39 460,-39 460,-75"/>
<text text-anchor="middle" x="320" y="-53.3" font-family="Helvetica,sans-Serif" font-size="14.00">vartime_double_scalar_mul_basepoint</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vartime_double_base_mul(). -->
<g id="edge7" class="edge">
<title>rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 backend/vartime_double_base_mul().</title>
<path fill="none" stroke="gray" stroke-dasharray="5,2" d="M460.04,-57C468.63,-57 477.19,-57 485.61,-57"/>
<polygon fill="gray" stroke="gray" points="485.79,-60.5 495.79,-57 485.79,-53.5 485.79,-60.5"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature(). -->
<g id="node9" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().</title>
<g id="a_node9"><a xlink:title=" &#160;&#160;&#160;pub fn verify_signature( &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;their_public_key: &amp;[u8; PUBLIC_KEY_LENGTH], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;message: &amp;[&amp;[u8]], &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;signature: &amp;[u8; SIGNATURE_LENGTH], &#160;&#160;&#160;&#160;) &#45;&gt; bool { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let mont_point = Montgom...">
<polygon fill="white" stroke="black" points="144,-135 16,-135 16,-99 144,-99 144,-135"/>
<text text-anchor="middle" x="80" y="-113.3" font-family="Helvetica,sans-Serif" font-size="14.00">verify_signature</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint(). -->
<g id="edge4" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;core 0.1.0 curve/curve25519/impl#[PrivateKey]verify_signature().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint().</title>
<path fill="none" stroke="blue" d="M144.15,-101.08C172.86,-93.84 207.17,-85.19 237.77,-77.48"/>
<polygon fill="blue" stroke="blue" points="238.72,-80.85 247.56,-75.01 237.01,-74.06 238.72,-80.85"/>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash(). -->
<g id="node10" class="node">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().</title>
<g id="a_node10"><a xlink:title=" &#160;&#160;&#160;pub fn proof_to_hash(&amp;self, m: &amp;[u8], proof: &amp;[u8; 80]) &#45;&gt; Result&lt;[u8; 32]&gt; { &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;// Decode proof into its component parts: gamma, c, and s. &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;let gamma = CompressedEdwardsY(proof[..32]....">
<polygon fill="white" stroke="black" points="136.5,-52 23.5,-52 23.5,-16 136.5,-16 136.5,-52"/>
<text text-anchor="middle" x="80" y="-30.3" font-family="Helvetica,sans-Serif" font-size="14.00">proof_to_hash</text>
</a>
</g>
</g>
<!-- rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint(). -->
<g id="edge8" class="edge">
<title>rust&#45;analyzer cargo libsignal&#45;keytrans 0.0.1 vrf/impl#[PublicKey]proof_to_hash().&#45;&gt;rust&#45;analyzer cargo curve25519&#45;dalek 4.1.3 edwards/impl#[EdwardsPoint]vartime_double_scalar_mul_basepoint().</title>
<path fill="none" stroke="blue" d="M136.5,-39.36C146.81,-40.36 158.01,-41.44 169.63,-42.56"/>
<polygon fill="blue" stroke="blue" points="169.64,-46.08 179.93,-43.56 170.31,-39.11 169.64,-46.08"/>
</g>
</g>
</svg>
